import { Prisma } from '@prisma/client';
export declare enum VoucherSettingScalarFieldEnum {
    discountValue = "discountValue",
    minOrderTotalAmountValue = "minOrderTotalAmountValue",
    maxOrderTotalAmountValue = "maxOrderTotalAmountValue",
    minOrderQuantityValue = "minOrderQuantityValue",
    maxOrderQuantityValue = "maxOrderQuantityValue",
    customerQuota = "customerQuota",
    orderQuota = "orderQuota",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    voucherId = "voucherId",
    createdById = "createdById",
    restrictToOrderTypes = "restrictToOrderTypes",
    restrictToPaymentMethods = "restrictToPaymentMethods"
}
export declare enum VoucherScalarFieldEnum {
    code = "code",
    name = "name",
    description = "description",
    startDate = "startDate",
    endDate = "endDate",
    isHighlight = "isHighlight",
    isActive = "isActive",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    type = "type",
    outletVoucherId = "outletVoucherId",
    platformVoucherId = "platformVoucherId",
    settingsId = "settingsId",
    discountType = "discountType",
    imageId = "imageId"
}
export declare enum UserScalarFieldEnum {
    id = "id",
    fullName = "fullName",
    username = "username",
    email = "email",
    emailVerifiedAt = "emailVerifiedAt",
    password = "password",
    whatsapp = "whatsapp",
    whatsappVerifiedAt = "whatsappVerifiedAt",
    birthDate = "birthDate",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    deletedAt = "deletedAt",
    phoneCountryCodeId = "phoneCountryCodeId",
    role = "role",
    gender = "gender",
    avatarImageId = "avatarImageId",
    customerInfoId = "customerInfoId",
    employeeInfoId = "employeeInfoId",
    ownerInfoId = "ownerInfoId",
    language = "language",
    theme = "theme",
    chatRoomId = "chatRoomId"
}
export declare enum UnitOfMeasureScalarFieldEnum {
    id = "id",
    name = "name",
    abbreviation = "abbreviation",
    conversion = "conversion",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}
export declare enum TransactionScalarFieldEnum {
    id = "id",
    amount = "amount",
    uniqueCode = "uniqueCode",
    createdAt = "createdAt",
    proofImageId = "proofImageId",
    status = "status",
    transactionCategory = "transactionCategory",
    fromAccountId = "fromAccountId",
    toAccountId = "toAccountId",
    invoiceId = "invoiceId",
    paymentId = "paymentId"
}
export declare enum TermOrFaqScalarFieldEnum {
    id = "id",
    title = "title",
    content = "content",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    category = "category",
    type = "type",
    createdById = "createdById",
    voucherCode = "voucherCode"
}
export declare enum SubdistrictScalarFieldEnum {
    id = "id",
    name = "name",
    districtId = "districtId",
    postalCode = "postalCode"
}
export declare enum StockTransactionScalarFieldEnum {
    id = "id",
    quantity = "quantity",
    createdAt = "createdAt",
    type = "type",
    stockItemId = "stockItemId"
}
export declare enum StockItemScalarFieldEnum {
    id = "id",
    quantity = "quantity",
    createdAt = "createdAt",
    platformItemId = "platformItemId"
}
export declare enum SessionScalarFieldEnum {
    id = "id",
    token = "token",
    expiresAt = "expiresAt",
    userId = "userId",
    device = "device",
    ipAddress = "ipAddress",
    createdAt = "createdAt"
}
export declare enum ServiceOrderScalarFieldEnum {
    id = "id",
    platformFee = "platformFee",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    raceConditionVersion = "raceConditionVersion",
    handleById = "handleById",
    orderById = "orderById",
    voucherId = "voucherId",
    addressId = "addressId",
    deliveryId = "deliveryId",
    orderType = "orderType",
    brandId = "brandId"
}
export declare enum ScheduleScalarFieldEnum {
    id = "id",
    dayOfWeek = "dayOfWeek",
    openTime = "openTime",
    closeTime = "closeTime",
    outletId = "outletId",
    maxOrders = "maxOrders",
    availableSlots = "availableSlots",
    isClosed = "isClosed",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    createdById = "createdById"
}
export declare enum ReviewScalarFieldEnum {
    id = "id",
    description = "description",
    cleanlinessScore = "cleanlinessScore",
    speedScore = "speedScore",
    qualityScore = "qualityScore",
    priceScore = "priceScore",
    overallAverageScore = "overallAverageScore",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    reviewById = "reviewById",
    outletId = "outletId"
}
export declare enum ProvinceScalarFieldEnum {
    id = "id",
    name = "name"
}
export declare enum VoucherType {
    PLATFORM = "PLATFORM",
    OUTLET = "OUTLET"
}
export declare enum UserRole {
    OWNER = "OWNER",
    EMPLOYEE = "EMPLOYEE",
    CUSTOMER = "CUSTOMER",
    ADMIN = "ADMIN",
    SUPERUSER = "SUPERUSER"
}
export declare enum TransactionStatus {
    PROCESSING = "PROCESSING",
    PENDING = "PENDING",
    FAILED = "FAILED",
    CANCELLED = "CANCELLED",
    COMPLETED = "COMPLETED"
}
export declare enum TransactionIsolationLevel {
    ReadUncommitted = "ReadUncommitted",
    ReadCommitted = "ReadCommitted",
    RepeatableRead = "RepeatableRead",
    Serializable = "Serializable"
}
export declare enum TransactionCategory {
    ORDER = "ORDER",
    WITHDRAWAL = "WITHDRAWAL",
    TOPUP = "TOPUP",
    REFERRING = "REFERRING",
    REDEEMING = "REDEEMING",
    REFUND = "REFUND",
    RECONCILE = "RECONCILE",
    COMISSION = "COMISSION"
}
export declare enum Theme {
    LIGHT = "LIGHT",
    DARK = "DARK"
}
export declare enum TermOrFaqType {
    BRANCH = "BRANCH",
    PLATFORM = "PLATFORM",
    VOUCHER = "VOUCHER"
}
export declare enum TermOrFaqCategory {
    FAQ = "FAQ",
    TERM = "TERM",
    PRIVACY = "PRIVACY",
    POLICY = "POLICY"
}
export declare enum StockTransactionType {
    Sale = "Sale",
    Restock = "Restock"
}
export declare enum SortOrder {
    asc = "asc",
    desc = "desc"
}
export declare enum Scale {
    ONE = "ONE",
    TWO = "TWO",
    THREE = "THREE",
    FOUR = "FOUR",
    FIVE = "FIVE"
}
export declare enum QueryMode {
    'default' = "default",
    insensitive = "insensitive"
}
export declare enum Period {
    HOURLY = "HOURLY",
    DAILY = "DAILY",
    WEEKLY = "WEEKLY",
    MONTHLY = "MONTHLY",
    YEARLY = "YEARLY"
}
export declare enum PaymentStatus {
    PENDING = "PENDING",
    UNPAID = "UNPAID",
    HALFPAID = "HALFPAID",
    FULLPAID = "FULLPAID",
    CANCELLED = "CANCELLED",
    FAILED = "FAILED",
    REFUNDED = "REFUNDED"
}
export declare enum PaymentMethod {
    CASH = "CASH",
    QRIS = "QRIS",
    CREDITCARD = "CREDITCARD",
    DEBITCARD = "DEBITCARD",
    EWALLET = "EWALLET",
    PLATFORMWALLET = "PLATFORMWALLET",
    BANKTRANSFER = "BANKTRANSFER",
    EDC = "EDC",
    POINT = "POINT"
}
export declare enum OrderType {
    DROP = "DROP",
    SELF = "SELF",
    DELIVERY = "DELIVERY",
    HOME = "HOME"
}
export declare enum OrderStatusEnum {
    PENDING = "PENDING",
    PROCESSING = "PROCESSING",
    DONE = "DONE",
    SHIPPED = "SHIPPED",
    DELIVERED = "DELIVERED",
    CANCELLED = "CANCELLED",
    RETURNED = "RETURNED"
}
export declare enum NullsOrder {
    first = "first",
    last = "last"
}
export declare enum NotificationType {
    ORDERSTATUS = "ORDERSTATUS",
    WASHINGMACHINESTATUS = "WASHINGMACHINESTATUS",
    LAUNDRY = "LAUNDRY",
    DISCOUNT = "DISCOUNT"
}
export declare enum MachineStatus {
    ACTIVE = "ACTIVE",
    INACTIVE = "INACTIVE",
    MAINTENANCE = "MAINTENANCE",
    BROKEN = "BROKEN",
    OTHER = "OTHER"
}
export declare enum LaundryItemRequestStatus {
    PENDING = "PENDING",
    APPROVED = "APPROVED",
    REJECTED = "REJECTED"
}
export declare enum Language {
    ID = "ID",
    EN = "EN"
}
export declare enum ItemActivity {
    LABELLING = "LABELLING",
    SORTING = "SORTING",
    CLEANING = "CLEANING",
    SPOTTING = "SPOTTING",
    DETAILLING = "DETAILLING",
    DRYING = "DRYING",
    IRONING = "IRONING",
    FOLDING = "FOLDING",
    PACKING = "PACKING"
}
export declare enum Gender {
    MALE = "MALE",
    FEMALE = "FEMALE"
}
export declare enum FileType {
    UNKNOWN = "UNKNOWN",
    MP4 = "MP4",
    JPG = "JPG",
    PNG = "PNG",
    PDF = "PDF"
}
export declare enum EmployeeRole {
    CASHIER = "CASHIER",
    COURIER = "COURIER",
    PRODUCTION = "PRODUCTION"
}
export declare enum EmployeeAttendanceStatus {
    PRESENT = "PRESENT",
    ABSENT = "ABSENT",
    OVERTIME = "OVERTIME",
    LATE = "LATE",
    LEAVE = "LEAVE",
    HOLIDAY = "HOLIDAY"
}
export declare enum DiscountType {
    PERCENTAGE = "PERCENTAGE",
    AMOUNT = "AMOUNT"
}
export declare enum DeliveryStatusType {
    PENDING = "PENDING",
    ASSIGNED = "ASSIGNED",
    PICKEDUP = "PICKEDUP",
    DELIVERED = "DELIVERED",
    CANCELLED = "CANCELLED"
}
export declare enum Day {
    MONDAY = "MONDAY",
    TUESDAY = "TUESDAY",
    WEDNESDAY = "WEDNESDAY",
    THURSDAY = "THURSDAY",
    FRIDAY = "FRIDAY",
    SATURDAY = "SATURDAY",
    SUNDAY = "SUNDAY"
}
export declare enum AccountCategory {
    COMISSION = "COMISSION",
    CASH = "CASH",
    PLATFORM = "PLATFORM",
    BANK = "BANK",
    DEBT = "DEBT",
    POINT = "POINT"
}
export declare enum PrinterSettingScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    printerId = "printerId",
    outletSettingId = "outletSettingId"
}
export declare enum PrinterMachineScalarFieldEnum {
    id = "id",
    serialNumber = "serialNumber",
    providerId = "providerId",
    outletId = "outletId",
    printerSettingsId = "printerSettingsId"
}
export declare enum PlatformVoucherScalarFieldEnum {
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    voucherId = "voucherId"
}
export declare enum PlatformOrderScalarFieldEnum {
    id = "id",
    addressId = "addressId",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    raceConditionVersion = "raceConditionVersion",
    orderById = "orderById"
}
export declare enum PlatformItemScalarFieldEnum {
    id = "id",
    name = "name",
    cost = "cost",
    salePrice = "salePrice",
    description = "description",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    unitOfMeasureId = "unitOfMeasureId"
}
export declare enum PhoneCountryCodeScalarFieldEnum {
    phoneCode = "phoneCode",
    country = "country"
}
export declare enum PaymentScalarFieldEnum {
    id = "id",
    amount = "amount",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    method = "method",
    status = "status",
    transactionId = "transactionId",
    edcMachineId = "edcMachineId"
}
export declare enum OwnerScalarFieldEnum {
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    userId = "userId"
}
export declare enum OutletVoucherScalarFieldEnum {
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    voucherId = "voucherId",
    outletId = "outletId"
}
export declare enum OutletSettingScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    attendanceRadius = "attendanceRadius",
    printerSettingId = "printerSettingId",
    outletId = "outletId"
}
export declare enum OutletLaundryItemServiceScalarFieldEnum {
    id = "id",
    name = "name",
    description = "description",
    durationInMinute = "durationInMinute",
    maxWeight = "maxWeight",
    minWeight = "minWeight",
    cost = "cost",
    salePrice = "salePrice",
    isActive = "isActive",
    isOnSale = "isOnSale",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    outletId = "outletId",
    laundryItemId = "laundryItemId",
    activities = "activities",
    orderTypes = "orderTypes"
}
export declare enum OutletScalarFieldEnum {
    id = "id",
    name = "name",
    isActive = "isActive",
    description = "description",
    phone = "phone",
    email = "email",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    ownerId = "ownerId",
    addressId = "addressId",
    settingId = "settingId"
}
export declare enum OrderStatusScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    status = "status",
    platformOrderId = "platformOrderId",
    ServiceOrderId = "ServiceOrderId",
    changedById = "changedById"
}
export declare enum NotificationScalarFieldEnum {
    id = "id",
    title = "title",
    subTitle = "subTitle",
    content = "content",
    createdAt = "createdAt",
    isRead = "isRead",
    fcmToken = "fcmToken",
    type = "type",
    userId = "userId"
}
export declare enum MessageScalarFieldEnum {
    id = "id",
    content = "content",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    senderId = "senderId",
    chatRoomId = "chatRoomId",
    reviewId = "reviewId"
}
export declare enum MarketSalePriceHistoryScalarFieldEnum {
    id = "id",
    price = "price",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    laundryItemId = "laundryItemId"
}
export declare enum MachineSettingsScalarFieldEnum {
    id = "id",
    onTurnOnPrice = "onTurnOnPrice",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    machineId = "machineId"
}
export declare enum MachineCategoryScalarFieldEnum {
    id = "id",
    name = "name",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}
export declare enum MachineScalarFieldEnum {
    id = "id",
    name = "name",
    description = "description",
    isOnline = "isOnline",
    lastOffline = "lastOffline",
    lastOnline = "lastOnline",
    capacity = "capacity",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    capacityUnitId = "capacityUnitId",
    outletId = "outletId",
    status = "status",
    categoryId = "categoryId",
    settingId = "settingId"
}
export declare enum LaundryItemRequestScalarFieldEnum {
    id = "id",
    name = "name",
    description = "description",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    status = "status",
    requestById = "requestById",
    categoryId = "categoryId"
}
export declare enum LaundryItemCategoryScalarFieldEnum {
    id = "id",
    name = "name",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}
export declare enum LaundryItemScalarFieldEnum {
    id = "id",
    name = "name",
    description = "description",
    requiresDryCleaning = "requiresDryCleaning",
    requiresIron = "requiresIron",
    requiresFold = "requiresFold",
    requiresPack = "requiresPack",
    requiresHang = "requiresHang",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    categoryId = "categoryId",
    unitOfMeasureId = "unitOfMeasureId"
}
export declare enum InvoiceScalarFieldEnum {
    id = "id",
    adminFee = "adminFee",
    amount = "amount",
    uniqueCode = "uniqueCode",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    status = "status",
    serviceOrderId = "serviceOrderId",
    platformOrderId = "platformOrderId"
}
export declare enum IndonesianBankScalarFieldEnum {
    id = "id",
    name = "name",
    code = "code",
    createdAt = "createdAt",
    imageId = "imageId"
}
export declare enum ImageScalarFieldEnum {
    url = "url",
    fileType = "fileType",
    fileSize = "fileSize",
    createdAt = "createdAt",
    platformItemId = "platformItemId",
    laundryItemId = "laundryItemId"
}
export declare enum FileScalarFieldEnum {
    url = "url",
    fileType = "fileType",
    fileSize = "fileSize",
    createdAt = "createdAt",
    messageId = "messageId"
}
export declare enum EmployeeActivityComissionScalarFieldEnum {
    id = "id",
    activity = "activity",
    comission = "comission",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    period = "period",
    employeeId = "employeeId"
}
export declare enum EmployeeScalarFieldEnum {
    salary = "salary",
    attendanceBonus = "attendanceBonus",
    mealAllowance = "mealAllowance",
    presenceBonus = "presenceBonus",
    transportationAllowance = "transportationAllowance",
    overtimeBonus = "overtimeBonus",
    EmployeeRoleAllowance = "EmployeeRoleAllowance",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    userId = "userId",
    outletId = "outletId",
    roles = "roles",
    activities = "activities"
}
export declare enum EdcMachineScalarFieldEnum {
    id = "id",
    name = "name",
    isActive = "isActive",
    serialNumber = "serialNumber",
    settlementAccountId = "settlementAccountId",
    outletId = "outletId"
}
export declare enum DistrictScalarFieldEnum {
    id = "id",
    name = "name",
    cityId = "cityId"
}
export declare enum DeliveryStatusScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    status = "status"
}
export declare enum DeliveryLocationHistoryScalarFieldEnum {
    id = "id",
    latitude = "latitude",
    longitude = "longitude",
    createdAt = "createdAt",
    deliveryId = "deliveryId"
}
export declare enum DeliveryScalarFieldEnum {
    id = "id",
    pickupTime = "pickupTime",
    deliveryTime = "deliveryTime",
    pickupMessage = "pickupMessage",
    deliveryMessage = "deliveryMessage",
    instructions = "instructions",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    deliveryStatusId = "deliveryStatusId",
    assignedDriverId = "assignedDriverId"
}
export declare enum CustomerScalarFieldEnum {
    userId = "userId",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    referralCode = "referralCode",
    referredById = "referredById"
}
export declare enum CreditCardScalarFieldEnum {
    id = "id",
    isAccepted = "isAccepted",
    lastChecked = "lastChecked",
    cardHolderName = "cardHolderName",
    customerId = "customerId",
    ownerId = "ownerId",
    cardNumber = "cardNumber",
    expMonth = "expMonth",
    expYear = "expYear",
    cvv = "cvv",
    createdAt = "createdAt",
    updatedAt = "updatedAt"
}
export declare enum ComplainScalarFieldEnum {
    id = "id",
    complain = "complain",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    serviceOrderId = "serviceOrderId",
    platformOrderId = "platformOrderId"
}
export declare enum CityScalarFieldEnum {
    id = "id",
    name = "name",
    provinceId = "provinceId"
}
export declare enum ChatRoomScalarFieldEnum {
    id = "id",
    name = "name",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    endedAt = "endedAt"
}
export declare enum CartScalarFieldEnum {
    id = "id",
    quantity = "quantity",
    price = "price",
    cost = "cost",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    serviceOrderId = "serviceOrderId",
    platformOrderId = "platformOrderId",
    platformItemId = "platformItemId",
    outletLaundryItemServiceId = "outletLaundryItemServiceId"
}
export declare enum BusinessHourScalarFieldEnum {
    id = "id",
    openTime = "openTime",
    closeTime = "closeTime",
    day = "day"
}
export declare enum AttendanceScalarFieldEnum {
    id = "id",
    latitude = "latitude",
    longitude = "longitude",
    timeIn = "timeIn",
    timeOut = "timeOut",
    reason = "reason",
    latePenalty = "latePenalty",
    absentPenalty = "absentPenalty",
    overtimeBonus = "overtimeBonus",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    imageUrl = "imageUrl",
    status = "status",
    employeeId = "employeeId"
}
export declare enum AddressScalarFieldEnum {
    id = "id",
    latitude = "latitude",
    longitude = "longitude",
    label = "label",
    street = "street",
    isMain = "isMain",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    userId = "userId",
    subdistrictId = "subdistrictId"
}
export declare enum AccountSettingScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    userId = "userId"
}
export declare enum AccountScalarFieldEnum {
    id = "id",
    accountNumber = "accountNumber",
    name = "name",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    accountCategory = "accountCategory",
    userId = "userId"
}
export declare enum AccessRolePermissionScalarFieldEnum {
    id = "id",
    createdAt = "createdAt",
    updatedAt = "updatedAt",
    employeeUserId = "employeeUserId"
}
export declare class AccessRolePermissionAggregateArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
    orderBy?: Array<AccessRolePermissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccessRolePermissionCountAggregateInput>;
    _avg?: InstanceType<typeof AccessRolePermissionAvgAggregateInput>;
    _sum?: InstanceType<typeof AccessRolePermissionSumAggregateInput>;
    _min?: InstanceType<typeof AccessRolePermissionMinAggregateInput>;
    _max?: InstanceType<typeof AccessRolePermissionMaxAggregateInput>;
}
export declare class AccessRolePermissionAvgAggregateInput {
    id?: true;
}
export declare class AccessRolePermissionAvgAggregate {
    id?: number;
}
export declare class AccessRolePermissionAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionCountAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    employeeUserId?: true;
    _all?: true;
}
export declare class AccessRolePermissionCountAggregate {
    id: number;
    createdAt: number;
    updatedAt: number;
    employeeUserId: number;
    _all: number;
}
export declare class AccessRolePermissionCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    employeeUserId?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionCreateManyEmployeeInputEnvelope {
    data: Array<AccessRolePermissionCreateManyEmployeeInput>;
    skipDuplicates?: boolean;
}
export declare class AccessRolePermissionCreateManyEmployeeInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccessRolePermissionCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    employeeUserId?: string;
}
export declare class AccessRolePermissionCreateNestedManyWithoutEmployeeInput {
    create?: Array<AccessRolePermissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AccessRolePermissionCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AccessRolePermissionCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
}
export declare class AccessRolePermissionCreateOrConnectWithoutEmployeeInput {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccessRolePermissionCreateWithoutEmployeeInput>;
}
export declare class AccessRolePermissionCreateWithoutEmployeeInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccessRolePermissionCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Employee?: InstanceType<typeof EmployeeCreateNestedOneWithoutAccessRolePermissionsInput>;
}
export declare class AccessRolePermissionGroupByArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
    orderBy?: Array<AccessRolePermissionOrderByWithAggregationInput>;
    by: Array<keyof typeof AccessRolePermissionScalarFieldEnum>;
    having?: InstanceType<typeof AccessRolePermissionScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccessRolePermissionCountAggregateInput>;
    _avg?: InstanceType<typeof AccessRolePermissionAvgAggregateInput>;
    _sum?: InstanceType<typeof AccessRolePermissionSumAggregateInput>;
    _min?: InstanceType<typeof AccessRolePermissionMinAggregateInput>;
    _max?: InstanceType<typeof AccessRolePermissionMaxAggregateInput>;
}
export declare class AccessRolePermissionGroupBy {
    id: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    employeeUserId?: string;
    _count?: InstanceType<typeof AccessRolePermissionCountAggregate>;
    _avg?: InstanceType<typeof AccessRolePermissionAvgAggregate>;
    _sum?: InstanceType<typeof AccessRolePermissionSumAggregate>;
    _min?: InstanceType<typeof AccessRolePermissionMinAggregate>;
    _max?: InstanceType<typeof AccessRolePermissionMaxAggregate>;
}
export declare class AccessRolePermissionListRelationFilter {
    every?: InstanceType<typeof AccessRolePermissionWhereInput>;
    some?: InstanceType<typeof AccessRolePermissionWhereInput>;
    none?: InstanceType<typeof AccessRolePermissionWhereInput>;
}
export declare class AccessRolePermissionMaxAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    employeeUserId?: true;
}
export declare class AccessRolePermissionMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    employeeUserId?: string;
}
export declare class AccessRolePermissionMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    employeeUserId?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionMinAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    employeeUserId?: true;
}
export declare class AccessRolePermissionMinAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    employeeUserId?: string;
}
export declare class AccessRolePermissionMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    employeeUserId?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    employeeUserId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof AccessRolePermissionCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof AccessRolePermissionAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof AccessRolePermissionMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof AccessRolePermissionMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof AccessRolePermissionSumOrderByAggregateInput>;
}
export declare class AccessRolePermissionOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    employeeUserId?: InstanceType<typeof SortOrderInput>;
    Employee?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
}
export declare class AccessRolePermissionScalarWhereWithAggregatesInput {
    AND?: Array<AccessRolePermissionScalarWhereWithAggregatesInput>;
    OR?: Array<AccessRolePermissionScalarWhereWithAggregatesInput>;
    NOT?: Array<AccessRolePermissionScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    employeeUserId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}
export declare class AccessRolePermissionScalarWhereInput {
    AND?: Array<AccessRolePermissionScalarWhereInput>;
    OR?: Array<AccessRolePermissionScalarWhereInput>;
    NOT?: Array<AccessRolePermissionScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    employeeUserId?: InstanceType<typeof StringNullableFilter>;
}
export declare class AccessRolePermissionSumAggregateInput {
    id?: true;
}
export declare class AccessRolePermissionSumAggregate {
    id?: number;
}
export declare class AccessRolePermissionSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput {
    create?: Array<AccessRolePermissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AccessRolePermissionCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AccessRolePermissionCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
}
export declare class AccessRolePermissionUncheckedCreateWithoutEmployeeInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccessRolePermissionUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    employeeUserId?: string;
}
export declare class AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput {
    create?: Array<AccessRolePermissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AccessRolePermissionCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<AccessRolePermissionUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AccessRolePermissionCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    update?: Array<AccessRolePermissionUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<AccessRolePermissionUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<AccessRolePermissionScalarWhereInput>;
}
export declare class AccessRolePermissionUncheckedUpdateManyWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    employeeUserId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUncheckedUpdateWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    employeeUserId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUpdateManyWithWhereWithoutEmployeeInput {
    where: InstanceType<typeof AccessRolePermissionScalarWhereInput>;
    data: InstanceType<typeof AccessRolePermissionUpdateManyMutationInput>;
}
export declare class AccessRolePermissionUpdateManyWithoutEmployeeNestedInput {
    create?: Array<AccessRolePermissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AccessRolePermissionCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<AccessRolePermissionUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AccessRolePermissionCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>>;
    update?: Array<AccessRolePermissionUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<AccessRolePermissionUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<AccessRolePermissionScalarWhereInput>;
}
export declare class AccessRolePermissionUpdateWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AccessRolePermissionUpdateWithoutEmployeeInput>;
}
export declare class AccessRolePermissionUpdateWithoutEmployeeInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccessRolePermissionUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Employee?: InstanceType<typeof EmployeeUpdateOneWithoutAccessRolePermissionsNestedInput>;
}
export declare class AccessRolePermissionUpsertWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AccessRolePermissionUpdateWithoutEmployeeInput>;
    create: InstanceType<typeof AccessRolePermissionCreateWithoutEmployeeInput>;
}
export declare class AccessRolePermissionWhereUniqueInput {
    id?: number;
    AND?: Array<AccessRolePermissionWhereInput>;
    OR?: Array<AccessRolePermissionWhereInput>;
    NOT?: Array<AccessRolePermissionWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    employeeUserId?: InstanceType<typeof StringNullableFilter>;
    Employee?: InstanceType<typeof EmployeeNullableRelationFilter>;
}
export declare class AccessRolePermissionWhereInput {
    AND?: Array<AccessRolePermissionWhereInput>;
    OR?: Array<AccessRolePermissionWhereInput>;
    NOT?: Array<AccessRolePermissionWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    employeeUserId?: InstanceType<typeof StringNullableFilter>;
    Employee?: InstanceType<typeof EmployeeNullableRelationFilter>;
}
export declare class AccessRolePermission {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    employeeUserId: string | null;
    Employee?: InstanceType<typeof Employee> | null;
}
export declare class AggregateAccessRolePermission {
    _count?: InstanceType<typeof AccessRolePermissionCountAggregate>;
    _avg?: InstanceType<typeof AccessRolePermissionAvgAggregate>;
    _sum?: InstanceType<typeof AccessRolePermissionSumAggregate>;
    _min?: InstanceType<typeof AccessRolePermissionMinAggregate>;
    _max?: InstanceType<typeof AccessRolePermissionMaxAggregate>;
}
export declare class CreateManyAccessRolePermissionArgs {
    data: Array<AccessRolePermissionCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneAccessRolePermissionArgs {
    data: InstanceType<typeof AccessRolePermissionCreateInput>;
}
export declare class DeleteManyAccessRolePermissionArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
}
export declare class DeleteOneAccessRolePermissionArgs {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
}
export declare class FindFirstAccessRolePermissionOrThrowArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
    orderBy?: Array<AccessRolePermissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccessRolePermissionScalarFieldEnum>;
}
export declare class FindFirstAccessRolePermissionArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
    orderBy?: Array<AccessRolePermissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccessRolePermissionScalarFieldEnum>;
}
export declare class FindManyAccessRolePermissionArgs {
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
    orderBy?: Array<AccessRolePermissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccessRolePermissionScalarFieldEnum>;
}
export declare class FindUniqueAccessRolePermissionOrThrowArgs {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
}
export declare class FindUniqueAccessRolePermissionArgs {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
}
export declare class UpdateManyAccessRolePermissionArgs {
    data: InstanceType<typeof AccessRolePermissionUpdateManyMutationInput>;
    where?: InstanceType<typeof AccessRolePermissionWhereInput>;
}
export declare class UpdateOneAccessRolePermissionArgs {
    data: InstanceType<typeof AccessRolePermissionUpdateInput>;
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
}
export declare class UpsertOneAccessRolePermissionArgs {
    where: Prisma.AtLeast<AccessRolePermissionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccessRolePermissionCreateInput>;
    update: InstanceType<typeof AccessRolePermissionUpdateInput>;
}
export declare class AccountAggregateArgs {
    where?: InstanceType<typeof AccountWhereInput>;
    orderBy?: Array<AccountOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccountCountAggregateInput>;
    _avg?: InstanceType<typeof AccountAvgAggregateInput>;
    _sum?: InstanceType<typeof AccountSumAggregateInput>;
    _min?: InstanceType<typeof AccountMinAggregateInput>;
    _max?: InstanceType<typeof AccountMaxAggregateInput>;
}
export declare class AccountAvgAggregateInput {
    id?: true;
    accountNumber?: true;
}
export declare class AccountAvgAggregate {
    id?: number;
    accountNumber?: number;
}
export declare class AccountAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    accountNumber?: keyof typeof SortOrder;
}
export declare class AccountCountAggregateInput {
    id?: true;
    accountNumber?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    accountCategory?: true;
    userId?: true;
    _all?: true;
}
export declare class AccountCountAggregate {
    id: number;
    accountNumber: number;
    name: number;
    createdAt: number;
    updatedAt: number;
    accountCategory: number;
    userId: number;
    _all: number;
}
export declare class AccountCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    accountNumber?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    accountCategory?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountCount {
    transactionOrigins?: number;
    transactionDestination?: number;
    EdcMachine?: number;
}
export declare class AccountCreateManyUserInputEnvelope {
    data: Array<AccountCreateManyUserInput>;
    skipDuplicates?: boolean;
}
export declare class AccountCreateManyUserInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
}
export declare class AccountCreateManyInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
}
export declare class AccountCreateNestedManyWithoutUserInput {
    create?: Array<AccountCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AccountCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
}
export declare class AccountCreateNestedOneWithoutEdcMachineInput {
    create?: InstanceType<typeof AccountCreateWithoutEdcMachineInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutEdcMachineInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class AccountCreateNestedOneWithoutTransactionDestinationInput {
    create?: InstanceType<typeof AccountCreateWithoutTransactionDestinationInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutTransactionDestinationInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class AccountCreateNestedOneWithoutTransactionOriginsInput {
    create?: InstanceType<typeof AccountCreateWithoutTransactionOriginsInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutTransactionOriginsInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class AccountCreateOrConnectWithoutEdcMachineInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountCreateWithoutEdcMachineInput>;
}
export declare class AccountCreateOrConnectWithoutTransactionDestinationInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountCreateWithoutTransactionDestinationInput>;
}
export declare class AccountCreateOrConnectWithoutTransactionOriginsInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountCreateWithoutTransactionOriginsInput>;
}
export declare class AccountCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountCreateWithoutUserInput>;
}
export declare class AccountCreateWithoutEdcMachineInput {
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    user: InstanceType<typeof UserCreateNestedOneWithoutAccountsInput>;
    transactionOrigins?: InstanceType<typeof TransactionCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionCreateNestedManyWithoutToAccountInput>;
}
export declare class AccountCreateWithoutTransactionDestinationInput {
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    user: InstanceType<typeof UserCreateNestedOneWithoutAccountsInput>;
    transactionOrigins?: InstanceType<typeof TransactionCreateNestedManyWithoutFromAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountCreateWithoutTransactionOriginsInput {
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    user: InstanceType<typeof UserCreateNestedOneWithoutAccountsInput>;
    transactionDestination?: InstanceType<typeof TransactionCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountCreateWithoutUserInput {
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    transactionOrigins?: InstanceType<typeof TransactionCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountCreateInput {
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    user: InstanceType<typeof UserCreateNestedOneWithoutAccountsInput>;
    transactionOrigins?: InstanceType<typeof TransactionCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountGroupByArgs {
    where?: InstanceType<typeof AccountWhereInput>;
    orderBy?: Array<AccountOrderByWithAggregationInput>;
    by: Array<keyof typeof AccountScalarFieldEnum>;
    having?: InstanceType<typeof AccountScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccountCountAggregateInput>;
    _avg?: InstanceType<typeof AccountAvgAggregateInput>;
    _sum?: InstanceType<typeof AccountSumAggregateInput>;
    _min?: InstanceType<typeof AccountMinAggregateInput>;
    _max?: InstanceType<typeof AccountMaxAggregateInput>;
}
export declare class AccountGroupBy {
    id: number;
    accountNumber?: number;
    name: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    _count?: InstanceType<typeof AccountCountAggregate>;
    _avg?: InstanceType<typeof AccountAvgAggregate>;
    _sum?: InstanceType<typeof AccountSumAggregate>;
    _min?: InstanceType<typeof AccountMinAggregate>;
    _max?: InstanceType<typeof AccountMaxAggregate>;
}
export declare class AccountListRelationFilter {
    every?: InstanceType<typeof AccountWhereInput>;
    some?: InstanceType<typeof AccountWhereInput>;
    none?: InstanceType<typeof AccountWhereInput>;
}
export declare class AccountMaxAggregateInput {
    id?: true;
    accountNumber?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    accountCategory?: true;
    userId?: true;
}
export declare class AccountMaxAggregate {
    id?: number;
    accountNumber?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory?: keyof typeof AccountCategory;
    userId?: string;
}
export declare class AccountMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    accountNumber?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    accountCategory?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountMinAggregateInput {
    id?: true;
    accountNumber?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    accountCategory?: true;
    userId?: true;
}
export declare class AccountMinAggregate {
    id?: number;
    accountNumber?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory?: keyof typeof AccountCategory;
    userId?: string;
}
export declare class AccountMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    accountNumber?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    accountCategory?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class AccountOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    accountNumber?: InstanceType<typeof SortOrderInput>;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    accountCategory?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof AccountCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof AccountAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof AccountMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof AccountMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof AccountSumOrderByAggregateInput>;
}
export declare class AccountOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    accountNumber?: InstanceType<typeof SortOrderInput>;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    accountCategory?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
    transactionOrigins?: InstanceType<typeof TransactionOrderByRelationAggregateInput>;
    transactionDestination?: InstanceType<typeof TransactionOrderByRelationAggregateInput>;
    EdcMachine?: InstanceType<typeof EdcMachineOrderByRelationAggregateInput>;
}
export declare class AccountRelationFilter {
    is?: InstanceType<typeof AccountWhereInput>;
    isNot?: InstanceType<typeof AccountWhereInput>;
}
export declare class AccountScalarWhereWithAggregatesInput {
    AND?: Array<AccountScalarWhereWithAggregatesInput>;
    OR?: Array<AccountScalarWhereWithAggregatesInput>;
    NOT?: Array<AccountScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    accountNumber?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class AccountScalarWhereInput {
    AND?: Array<AccountScalarWhereInput>;
    OR?: Array<AccountScalarWhereInput>;
    NOT?: Array<AccountScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    accountNumber?: InstanceType<typeof FloatNullableFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFilter>;
    userId?: InstanceType<typeof StringFilter>;
}
export declare class AccountSumAggregateInput {
    id?: true;
    accountNumber?: true;
}
export declare class AccountSumAggregate {
    id?: number;
    accountNumber?: number;
}
export declare class AccountSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    accountNumber?: keyof typeof SortOrder;
}
export declare class AccountUncheckedCreateNestedManyWithoutUserInput {
    create?: Array<AccountCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AccountCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
}
export declare class AccountUncheckedCreateWithoutEdcMachineInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutToAccountInput>;
}
export declare class AccountUncheckedCreateWithoutTransactionDestinationInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutFromAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountUncheckedCreateWithoutTransactionOriginsInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    transactionDestination?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountUncheckedCreateWithoutUserInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountUncheckedCreateInput {
    id?: number;
    accountNumber?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutFromAccountInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutToAccountInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutSettlementAccountInput>;
}
export declare class AccountUncheckedUpdateManyWithoutUserNestedInput {
    create?: Array<AccountCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountCreateOrConnectWithoutUserInput>;
    upsert?: Array<AccountUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AccountCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    update?: Array<AccountUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AccountUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AccountScalarWhereInput>;
}
export declare class AccountUncheckedUpdateManyWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
}
export declare class AccountUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AccountUncheckedUpdateWithoutEdcMachineInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutToAccountNestedInput>;
}
export declare class AccountUncheckedUpdateWithoutTransactionDestinationInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutFromAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUncheckedUpdateWithoutTransactionOriginsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUncheckedUpdateWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    transactionOrigins?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUpdateManyMutationInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
}
export declare class AccountUpdateManyWithWhereWithoutUserInput {
    where: InstanceType<typeof AccountScalarWhereInput>;
    data: InstanceType<typeof AccountUpdateManyMutationInput>;
}
export declare class AccountUpdateManyWithoutUserNestedInput {
    create?: Array<AccountCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountCreateOrConnectWithoutUserInput>;
    upsert?: Array<AccountUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AccountCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccountWhereUniqueInput, 'id'>>;
    update?: Array<AccountUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AccountUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AccountScalarWhereInput>;
}
export declare class AccountUpdateOneRequiredWithoutEdcMachineNestedInput {
    create?: InstanceType<typeof AccountCreateWithoutEdcMachineInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutEdcMachineInput>;
    upsert?: InstanceType<typeof AccountUpsertWithoutEdcMachineInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AccountUpdateToOneWithWhereWithoutEdcMachineInput>;
}
export declare class AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput {
    create?: InstanceType<typeof AccountCreateWithoutTransactionDestinationInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutTransactionDestinationInput>;
    upsert?: InstanceType<typeof AccountUpsertWithoutTransactionDestinationInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AccountUpdateToOneWithWhereWithoutTransactionDestinationInput>;
}
export declare class AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput {
    create?: InstanceType<typeof AccountCreateWithoutTransactionOriginsInput>;
    connectOrCreate?: InstanceType<typeof AccountCreateOrConnectWithoutTransactionOriginsInput>;
    upsert?: InstanceType<typeof AccountUpsertWithoutTransactionOriginsInput>;
    connect?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AccountUpdateToOneWithWhereWithoutTransactionOriginsInput>;
}
export declare class AccountUpdateToOneWithWhereWithoutEdcMachineInput {
    where?: InstanceType<typeof AccountWhereInput>;
    data: InstanceType<typeof AccountUpdateWithoutEdcMachineInput>;
}
export declare class AccountUpdateToOneWithWhereWithoutTransactionDestinationInput {
    where?: InstanceType<typeof AccountWhereInput>;
    data: InstanceType<typeof AccountUpdateWithoutTransactionDestinationInput>;
}
export declare class AccountUpdateToOneWithWhereWithoutTransactionOriginsInput {
    where?: InstanceType<typeof AccountWhereInput>;
    data: InstanceType<typeof AccountUpdateWithoutTransactionOriginsInput>;
}
export declare class AccountUpdateWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AccountUpdateWithoutUserInput>;
}
export declare class AccountUpdateWithoutEdcMachineInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutAccountsNestedInput>;
    transactionOrigins?: InstanceType<typeof TransactionUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUpdateManyWithoutToAccountNestedInput>;
}
export declare class AccountUpdateWithoutTransactionDestinationInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutAccountsNestedInput>;
    transactionOrigins?: InstanceType<typeof TransactionUpdateManyWithoutFromAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUpdateWithoutTransactionOriginsInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutAccountsNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUpdateWithoutUserInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    transactionOrigins?: InstanceType<typeof TransactionUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUpdateInput {
    accountNumber?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutAccountsNestedInput>;
    transactionOrigins?: InstanceType<typeof TransactionUpdateManyWithoutFromAccountNestedInput>;
    transactionDestination?: InstanceType<typeof TransactionUpdateManyWithoutToAccountNestedInput>;
    EdcMachine?: InstanceType<typeof EdcMachineUpdateManyWithoutSettlementAccountNestedInput>;
}
export declare class AccountUpsertWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AccountUpdateWithoutUserInput>;
    create: InstanceType<typeof AccountCreateWithoutUserInput>;
}
export declare class AccountUpsertWithoutEdcMachineInput {
    update: InstanceType<typeof AccountUpdateWithoutEdcMachineInput>;
    create: InstanceType<typeof AccountCreateWithoutEdcMachineInput>;
    where?: InstanceType<typeof AccountWhereInput>;
}
export declare class AccountUpsertWithoutTransactionDestinationInput {
    update: InstanceType<typeof AccountUpdateWithoutTransactionDestinationInput>;
    create: InstanceType<typeof AccountCreateWithoutTransactionDestinationInput>;
    where?: InstanceType<typeof AccountWhereInput>;
}
export declare class AccountUpsertWithoutTransactionOriginsInput {
    update: InstanceType<typeof AccountUpdateWithoutTransactionOriginsInput>;
    create: InstanceType<typeof AccountCreateWithoutTransactionOriginsInput>;
    where?: InstanceType<typeof AccountWhereInput>;
}
export declare class AccountWhereUniqueInput {
    id?: number;
    AND?: Array<AccountWhereInput>;
    OR?: Array<AccountWhereInput>;
    NOT?: Array<AccountWhereInput>;
    accountNumber?: InstanceType<typeof FloatNullableFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    transactionOrigins?: InstanceType<typeof TransactionListRelationFilter>;
    transactionDestination?: InstanceType<typeof TransactionListRelationFilter>;
    EdcMachine?: InstanceType<typeof EdcMachineListRelationFilter>;
}
export declare class AccountWhereInput {
    AND?: Array<AccountWhereInput>;
    OR?: Array<AccountWhereInput>;
    NOT?: Array<AccountWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    accountNumber?: InstanceType<typeof FloatNullableFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    accountCategory?: InstanceType<typeof EnumAccountCategoryFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    transactionOrigins?: InstanceType<typeof TransactionListRelationFilter>;
    transactionDestination?: InstanceType<typeof TransactionListRelationFilter>;
    EdcMachine?: InstanceType<typeof EdcMachineListRelationFilter>;
}
export declare class Account {
    id: number;
    accountNumber: number | null;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    accountCategory: keyof typeof AccountCategory;
    userId: string;
    user?: InstanceType<typeof User>;
    transactionOrigins?: Array<Transaction>;
    transactionDestination?: Array<Transaction>;
    EdcMachine?: Array<EdcMachine>;
    _count?: InstanceType<typeof AccountCount>;
}
export declare class AggregateAccount {
    _count?: InstanceType<typeof AccountCountAggregate>;
    _avg?: InstanceType<typeof AccountAvgAggregate>;
    _sum?: InstanceType<typeof AccountSumAggregate>;
    _min?: InstanceType<typeof AccountMinAggregate>;
    _max?: InstanceType<typeof AccountMaxAggregate>;
}
export declare class CreateManyAccountArgs {
    data: Array<AccountCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneAccountArgs {
    data: InstanceType<typeof AccountCreateInput>;
}
export declare class DeleteManyAccountArgs {
    where?: InstanceType<typeof AccountWhereInput>;
}
export declare class DeleteOneAccountArgs {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class FindFirstAccountOrThrowArgs {
    where?: InstanceType<typeof AccountWhereInput>;
    orderBy?: Array<AccountOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountScalarFieldEnum>;
}
export declare class FindFirstAccountArgs {
    where?: InstanceType<typeof AccountWhereInput>;
    orderBy?: Array<AccountOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountScalarFieldEnum>;
}
export declare class FindManyAccountArgs {
    where?: InstanceType<typeof AccountWhereInput>;
    orderBy?: Array<AccountOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountScalarFieldEnum>;
}
export declare class FindUniqueAccountOrThrowArgs {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class FindUniqueAccountArgs {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class UpdateManyAccountArgs {
    data: InstanceType<typeof AccountUpdateManyMutationInput>;
    where?: InstanceType<typeof AccountWhereInput>;
}
export declare class UpdateOneAccountArgs {
    data: InstanceType<typeof AccountUpdateInput>;
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
}
export declare class UpsertOneAccountArgs {
    where: Prisma.AtLeast<AccountWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountCreateInput>;
    update: InstanceType<typeof AccountUpdateInput>;
}
export declare class AccountSettingAggregateArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
    orderBy?: Array<AccountSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccountSettingCountAggregateInput>;
    _avg?: InstanceType<typeof AccountSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof AccountSettingSumAggregateInput>;
    _min?: InstanceType<typeof AccountSettingMinAggregateInput>;
    _max?: InstanceType<typeof AccountSettingMaxAggregateInput>;
}
export declare class AccountSettingAvgAggregateInput {
    id?: true;
}
export declare class AccountSettingAvgAggregate {
    id?: number;
}
export declare class AccountSettingAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class AccountSettingCountAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    _all?: true;
}
export declare class AccountSettingCountAggregate {
    id: number;
    createdAt: number;
    updatedAt: number;
    userId: number;
    _all: number;
}
export declare class AccountSettingCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountSettingCreateManyUserInputEnvelope {
    data: Array<AccountSettingCreateManyUserInput>;
    skipDuplicates?: boolean;
}
export declare class AccountSettingCreateManyUserInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccountSettingCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
}
export declare class AccountSettingCreateNestedManyWithoutUserInput {
    create?: Array<AccountSettingCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountSettingCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AccountSettingCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
}
export declare class AccountSettingCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountSettingCreateWithoutUserInput>;
}
export declare class AccountSettingCreateWithoutUserInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccountSettingCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutAccountSettingInput>;
}
export declare class AccountSettingGroupByArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
    orderBy?: Array<AccountSettingOrderByWithAggregationInput>;
    by: Array<keyof typeof AccountSettingScalarFieldEnum>;
    having?: InstanceType<typeof AccountSettingScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AccountSettingCountAggregateInput>;
    _avg?: InstanceType<typeof AccountSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof AccountSettingSumAggregateInput>;
    _min?: InstanceType<typeof AccountSettingMinAggregateInput>;
    _max?: InstanceType<typeof AccountSettingMaxAggregateInput>;
}
export declare class AccountSettingGroupBy {
    id: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    userId: string;
    _count?: InstanceType<typeof AccountSettingCountAggregate>;
    _avg?: InstanceType<typeof AccountSettingAvgAggregate>;
    _sum?: InstanceType<typeof AccountSettingSumAggregate>;
    _min?: InstanceType<typeof AccountSettingMinAggregate>;
    _max?: InstanceType<typeof AccountSettingMaxAggregate>;
}
export declare class AccountSettingListRelationFilter {
    every?: InstanceType<typeof AccountSettingWhereInput>;
    some?: InstanceType<typeof AccountSettingWhereInput>;
    none?: InstanceType<typeof AccountSettingWhereInput>;
}
export declare class AccountSettingMaxAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
}
export declare class AccountSettingMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
}
export declare class AccountSettingMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountSettingMinAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
}
export declare class AccountSettingMinAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
}
export declare class AccountSettingMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class AccountSettingOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class AccountSettingOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof AccountSettingCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof AccountSettingAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof AccountSettingMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof AccountSettingMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof AccountSettingSumOrderByAggregateInput>;
}
export declare class AccountSettingOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
}
export declare class AccountSettingScalarWhereWithAggregatesInput {
    AND?: Array<AccountSettingScalarWhereWithAggregatesInput>;
    OR?: Array<AccountSettingScalarWhereWithAggregatesInput>;
    NOT?: Array<AccountSettingScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class AccountSettingScalarWhereInput {
    AND?: Array<AccountSettingScalarWhereInput>;
    OR?: Array<AccountSettingScalarWhereInput>;
    NOT?: Array<AccountSettingScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
}
export declare class AccountSettingSumAggregateInput {
    id?: true;
}
export declare class AccountSettingSumAggregate {
    id?: number;
}
export declare class AccountSettingSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class AccountSettingUncheckedCreateNestedManyWithoutUserInput {
    create?: Array<AccountSettingCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountSettingCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AccountSettingCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
}
export declare class AccountSettingUncheckedCreateWithoutUserInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class AccountSettingUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
}
export declare class AccountSettingUncheckedUpdateManyWithoutUserNestedInput {
    create?: Array<AccountSettingCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountSettingCreateOrConnectWithoutUserInput>;
    upsert?: Array<AccountSettingUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AccountSettingCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    update?: Array<AccountSettingUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AccountSettingUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AccountSettingScalarWhereInput>;
}
export declare class AccountSettingUncheckedUpdateManyWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccountSettingUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AccountSettingUncheckedUpdateWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccountSettingUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AccountSettingUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccountSettingUpdateManyWithWhereWithoutUserInput {
    where: InstanceType<typeof AccountSettingScalarWhereInput>;
    data: InstanceType<typeof AccountSettingUpdateManyMutationInput>;
}
export declare class AccountSettingUpdateManyWithoutUserNestedInput {
    create?: Array<AccountSettingCreateWithoutUserInput>;
    connectOrCreate?: Array<AccountSettingCreateOrConnectWithoutUserInput>;
    upsert?: Array<AccountSettingUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AccountSettingCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>>;
    update?: Array<AccountSettingUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AccountSettingUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AccountSettingScalarWhereInput>;
}
export declare class AccountSettingUpdateWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AccountSettingUpdateWithoutUserInput>;
}
export declare class AccountSettingUpdateWithoutUserInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AccountSettingUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutAccountSettingNestedInput>;
}
export declare class AccountSettingUpsertWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AccountSettingUpdateWithoutUserInput>;
    create: InstanceType<typeof AccountSettingCreateWithoutUserInput>;
}
export declare class AccountSettingWhereUniqueInput {
    id?: number;
    AND?: Array<AccountSettingWhereInput>;
    OR?: Array<AccountSettingWhereInput>;
    NOT?: Array<AccountSettingWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class AccountSettingWhereInput {
    AND?: Array<AccountSettingWhereInput>;
    OR?: Array<AccountSettingWhereInput>;
    NOT?: Array<AccountSettingWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class AccountSetting {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    user?: InstanceType<typeof User>;
}
export declare class AggregateAccountSetting {
    _count?: InstanceType<typeof AccountSettingCountAggregate>;
    _avg?: InstanceType<typeof AccountSettingAvgAggregate>;
    _sum?: InstanceType<typeof AccountSettingSumAggregate>;
    _min?: InstanceType<typeof AccountSettingMinAggregate>;
    _max?: InstanceType<typeof AccountSettingMaxAggregate>;
}
export declare class CreateManyAccountSettingArgs {
    data: Array<AccountSettingCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneAccountSettingArgs {
    data: InstanceType<typeof AccountSettingCreateInput>;
}
export declare class DeleteManyAccountSettingArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
}
export declare class DeleteOneAccountSettingArgs {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
}
export declare class FindFirstAccountSettingOrThrowArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
    orderBy?: Array<AccountSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountSettingScalarFieldEnum>;
}
export declare class FindFirstAccountSettingArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
    orderBy?: Array<AccountSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountSettingScalarFieldEnum>;
}
export declare class FindManyAccountSettingArgs {
    where?: InstanceType<typeof AccountSettingWhereInput>;
    orderBy?: Array<AccountSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AccountSettingScalarFieldEnum>;
}
export declare class FindUniqueAccountSettingOrThrowArgs {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
}
export declare class FindUniqueAccountSettingArgs {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
}
export declare class UpdateManyAccountSettingArgs {
    data: InstanceType<typeof AccountSettingUpdateManyMutationInput>;
    where?: InstanceType<typeof AccountSettingWhereInput>;
}
export declare class UpdateOneAccountSettingArgs {
    data: InstanceType<typeof AccountSettingUpdateInput>;
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
}
export declare class UpsertOneAccountSettingArgs {
    where: Prisma.AtLeast<AccountSettingWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AccountSettingCreateInput>;
    update: InstanceType<typeof AccountSettingUpdateInput>;
}
export declare class AddressAggregateArgs {
    where?: InstanceType<typeof AddressWhereInput>;
    orderBy?: Array<AddressOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AddressCountAggregateInput>;
    _avg?: InstanceType<typeof AddressAvgAggregateInput>;
    _sum?: InstanceType<typeof AddressSumAggregateInput>;
    _min?: InstanceType<typeof AddressMinAggregateInput>;
    _max?: InstanceType<typeof AddressMaxAggregateInput>;
}
export declare class AddressAvgAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    subdistrictId?: true;
}
export declare class AddressAvgAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    subdistrictId?: number;
}
export declare class AddressAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    subdistrictId?: keyof typeof SortOrder;
}
export declare class AddressCountAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    label?: true;
    street?: true;
    isMain?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    subdistrictId?: true;
    _all?: true;
}
export declare class AddressCountAggregate {
    id: number;
    latitude: number;
    longitude: number;
    label: number;
    street: number;
    isMain: number;
    createdAt: number;
    updatedAt: number;
    userId: number;
    subdistrictId: number;
    _all: number;
}
export declare class AddressCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    label?: keyof typeof SortOrder;
    street?: keyof typeof SortOrder;
    isMain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    subdistrictId?: keyof typeof SortOrder;
}
export declare class AddressCount {
    platformOrder?: number;
    serviceOrder?: number;
}
export declare class AddressCreateManySubdistrictInputEnvelope {
    data: Array<AddressCreateManySubdistrictInput>;
    skipDuplicates?: boolean;
}
export declare class AddressCreateManySubdistrictInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
}
export declare class AddressCreateManyUserInputEnvelope {
    data: Array<AddressCreateManyUserInput>;
    skipDuplicates?: boolean;
}
export declare class AddressCreateManyUserInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    subdistrictId: number;
}
export declare class AddressCreateManyInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId: number;
}
export declare class AddressCreateNestedManyWithoutSubdistrictInput {
    create?: Array<AddressCreateWithoutSubdistrictInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutSubdistrictInput>;
    createMany?: InstanceType<typeof AddressCreateManySubdistrictInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
}
export declare class AddressCreateNestedManyWithoutUserInput {
    create?: Array<AddressCreateWithoutUserInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AddressCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
}
export declare class AddressCreateNestedOneWithoutOutletInput {
    create?: InstanceType<typeof AddressCreateWithoutOutletInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutOutletInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class AddressCreateNestedOneWithoutPlatformOrderInput {
    create?: InstanceType<typeof AddressCreateWithoutPlatformOrderInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutPlatformOrderInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class AddressCreateNestedOneWithoutServiceOrderInput {
    create?: InstanceType<typeof AddressCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutServiceOrderInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class AddressCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateWithoutOutletInput>;
}
export declare class AddressCreateOrConnectWithoutPlatformOrderInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateWithoutPlatformOrderInput>;
}
export declare class AddressCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateWithoutServiceOrderInput>;
}
export declare class AddressCreateOrConnectWithoutSubdistrictInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateWithoutSubdistrictInput>;
}
export declare class AddressCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateWithoutUserInput>;
}
export declare class AddressCreateWithoutOutletInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    user?: InstanceType<typeof UserCreateNestedOneWithoutAddressesInput>;
    subdistrict: InstanceType<typeof SubdistrictCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressCreateWithoutPlatformOrderInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Outlet?: InstanceType<typeof OutletCreateNestedOneWithoutAddressInput>;
    user?: InstanceType<typeof UserCreateNestedOneWithoutAddressesInput>;
    subdistrict: InstanceType<typeof SubdistrictCreateNestedOneWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressCreateWithoutServiceOrderInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Outlet?: InstanceType<typeof OutletCreateNestedOneWithoutAddressInput>;
    user?: InstanceType<typeof UserCreateNestedOneWithoutAddressesInput>;
    subdistrict: InstanceType<typeof SubdistrictCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressCreateWithoutSubdistrictInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Outlet?: InstanceType<typeof OutletCreateNestedOneWithoutAddressInput>;
    user?: InstanceType<typeof UserCreateNestedOneWithoutAddressesInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressCreateWithoutUserInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Outlet?: InstanceType<typeof OutletCreateNestedOneWithoutAddressInput>;
    subdistrict: InstanceType<typeof SubdistrictCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressCreateInput {
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    Outlet?: InstanceType<typeof OutletCreateNestedOneWithoutAddressInput>;
    user?: InstanceType<typeof UserCreateNestedOneWithoutAddressesInput>;
    subdistrict: InstanceType<typeof SubdistrictCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutAddressInput>;
}
export declare class AddressGroupByArgs {
    where?: InstanceType<typeof AddressWhereInput>;
    orderBy?: Array<AddressOrderByWithAggregationInput>;
    by: Array<keyof typeof AddressScalarFieldEnum>;
    having?: InstanceType<typeof AddressScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AddressCountAggregateInput>;
    _avg?: InstanceType<typeof AddressAvgAggregateInput>;
    _sum?: InstanceType<typeof AddressSumAggregateInput>;
    _min?: InstanceType<typeof AddressMinAggregateInput>;
    _max?: InstanceType<typeof AddressMaxAggregateInput>;
}
export declare class AddressGroupBy {
    id: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain: boolean;
    createdAt: Date | string;
    updatedAt: Date | string;
    userId?: string;
    subdistrictId: number;
    _count?: InstanceType<typeof AddressCountAggregate>;
    _avg?: InstanceType<typeof AddressAvgAggregate>;
    _sum?: InstanceType<typeof AddressSumAggregate>;
    _min?: InstanceType<typeof AddressMinAggregate>;
    _max?: InstanceType<typeof AddressMaxAggregate>;
}
export declare class AddressListRelationFilter {
    every?: InstanceType<typeof AddressWhereInput>;
    some?: InstanceType<typeof AddressWhereInput>;
    none?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressMaxAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    label?: true;
    street?: true;
    isMain?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    subdistrictId?: true;
}
export declare class AddressMaxAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    label?: string;
    street?: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId?: number;
}
export declare class AddressMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    label?: keyof typeof SortOrder;
    street?: keyof typeof SortOrder;
    isMain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    subdistrictId?: keyof typeof SortOrder;
}
export declare class AddressMinAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    label?: true;
    street?: true;
    isMain?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    subdistrictId?: true;
}
export declare class AddressMinAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    label?: string;
    street?: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId?: number;
}
export declare class AddressMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    label?: keyof typeof SortOrder;
    street?: keyof typeof SortOrder;
    isMain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    subdistrictId?: keyof typeof SortOrder;
}
export declare class AddressNullableRelationFilter {
    is?: InstanceType<typeof AddressWhereInput>;
    isNot?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class AddressOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    latitude?: InstanceType<typeof SortOrderInput>;
    longitude?: InstanceType<typeof SortOrderInput>;
    label?: keyof typeof SortOrder;
    street?: keyof typeof SortOrder;
    isMain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: InstanceType<typeof SortOrderInput>;
    subdistrictId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof AddressCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof AddressAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof AddressMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof AddressMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof AddressSumOrderByAggregateInput>;
}
export declare class AddressOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    latitude?: InstanceType<typeof SortOrderInput>;
    longitude?: InstanceType<typeof SortOrderInput>;
    label?: keyof typeof SortOrder;
    street?: keyof typeof SortOrder;
    isMain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: InstanceType<typeof SortOrderInput>;
    subdistrictId?: keyof typeof SortOrder;
    Outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
    subdistrict?: InstanceType<typeof SubdistrictOrderByWithRelationInput>;
    platformOrder?: InstanceType<typeof PlatformOrderOrderByRelationAggregateInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
}
export declare class AddressRelationFilter {
    is?: InstanceType<typeof AddressWhereInput>;
    isNot?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressScalarWhereWithAggregatesInput {
    AND?: Array<AddressScalarWhereWithAggregatesInput>;
    OR?: Array<AddressScalarWhereWithAggregatesInput>;
    NOT?: Array<AddressScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    latitude?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    longitude?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    label?: InstanceType<typeof StringWithAggregatesFilter>;
    street?: InstanceType<typeof StringWithAggregatesFilter>;
    isMain?: InstanceType<typeof BoolWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    subdistrictId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class AddressScalarWhereInput {
    AND?: Array<AddressScalarWhereInput>;
    OR?: Array<AddressScalarWhereInput>;
    NOT?: Array<AddressScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatNullableFilter>;
    longitude?: InstanceType<typeof FloatNullableFilter>;
    label?: InstanceType<typeof StringFilter>;
    street?: InstanceType<typeof StringFilter>;
    isMain?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringNullableFilter>;
    subdistrictId?: InstanceType<typeof IntFilter>;
}
export declare class AddressSumAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    subdistrictId?: true;
}
export declare class AddressSumAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    subdistrictId?: number;
}
export declare class AddressSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    subdistrictId?: keyof typeof SortOrder;
}
export declare class AddressUncheckedCreateNestedManyWithoutSubdistrictInput {
    create?: Array<AddressCreateWithoutSubdistrictInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutSubdistrictInput>;
    createMany?: InstanceType<typeof AddressCreateManySubdistrictInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
}
export declare class AddressUncheckedCreateNestedManyWithoutUserInput {
    create?: Array<AddressCreateWithoutUserInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof AddressCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
}
export declare class AddressUncheckedCreateWithoutOutletInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId: number;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedCreateWithoutPlatformOrderInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId: number;
    Outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId: number;
    Outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedCreateWithoutSubdistrictInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    Outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedCreateWithoutUserInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    subdistrictId: number;
    Outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedCreateInput {
    id?: number;
    latitude?: number;
    longitude?: number;
    label: string;
    street: string;
    isMain?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    subdistrictId: number;
    Outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutAddressInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutAddressInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutAddressInput>;
}
export declare class AddressUncheckedUpdateManyWithoutSubdistrictNestedInput {
    create?: Array<AddressCreateWithoutSubdistrictInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutSubdistrictInput>;
    upsert?: Array<AddressUpsertWithWhereUniqueWithoutSubdistrictInput>;
    createMany?: InstanceType<typeof AddressCreateManySubdistrictInputEnvelope>;
    set?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    update?: Array<AddressUpdateWithWhereUniqueWithoutSubdistrictInput>;
    updateMany?: Array<AddressUpdateManyWithWhereWithoutSubdistrictInput>;
    deleteMany?: Array<AddressScalarWhereInput>;
}
export declare class AddressUncheckedUpdateManyWithoutSubdistrictInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class AddressUncheckedUpdateManyWithoutUserNestedInput {
    create?: Array<AddressCreateWithoutUserInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutUserInput>;
    upsert?: Array<AddressUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AddressCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    update?: Array<AddressUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AddressUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AddressScalarWhereInput>;
}
export declare class AddressUncheckedUpdateManyWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class AddressUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class AddressUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUncheckedUpdateWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUncheckedUpdateWithoutSubdistrictInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUncheckedUpdateWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    subdistrictId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateManyMutationInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class AddressUpdateManyWithWhereWithoutSubdistrictInput {
    where: InstanceType<typeof AddressScalarWhereInput>;
    data: InstanceType<typeof AddressUpdateManyMutationInput>;
}
export declare class AddressUpdateManyWithWhereWithoutUserInput {
    where: InstanceType<typeof AddressScalarWhereInput>;
    data: InstanceType<typeof AddressUpdateManyMutationInput>;
}
export declare class AddressUpdateManyWithoutSubdistrictNestedInput {
    create?: Array<AddressCreateWithoutSubdistrictInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutSubdistrictInput>;
    upsert?: Array<AddressUpsertWithWhereUniqueWithoutSubdistrictInput>;
    createMany?: InstanceType<typeof AddressCreateManySubdistrictInputEnvelope>;
    set?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    update?: Array<AddressUpdateWithWhereUniqueWithoutSubdistrictInput>;
    updateMany?: Array<AddressUpdateManyWithWhereWithoutSubdistrictInput>;
    deleteMany?: Array<AddressScalarWhereInput>;
}
export declare class AddressUpdateManyWithoutUserNestedInput {
    create?: Array<AddressCreateWithoutUserInput>;
    connectOrCreate?: Array<AddressCreateOrConnectWithoutUserInput>;
    upsert?: Array<AddressUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof AddressCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AddressWhereUniqueInput, 'id'>>;
    update?: Array<AddressUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<AddressUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<AddressScalarWhereInput>;
}
export declare class AddressUpdateOneRequiredWithoutOutletNestedInput {
    create?: InstanceType<typeof AddressCreateWithoutOutletInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutOutletInput>;
    upsert?: InstanceType<typeof AddressUpsertWithoutOutletInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AddressUpdateToOneWithWhereWithoutOutletInput>;
}
export declare class AddressUpdateOneRequiredWithoutPlatformOrderNestedInput {
    create?: InstanceType<typeof AddressCreateWithoutPlatformOrderInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: InstanceType<typeof AddressUpsertWithoutPlatformOrderInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AddressUpdateToOneWithWhereWithoutPlatformOrderInput>;
}
export declare class AddressUpdateOneWithoutServiceOrderNestedInput {
    create?: InstanceType<typeof AddressCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof AddressCreateOrConnectWithoutServiceOrderInput>;
    upsert?: InstanceType<typeof AddressUpsertWithoutServiceOrderInput>;
    disconnect?: InstanceType<typeof AddressWhereInput>;
    delete?: InstanceType<typeof AddressWhereInput>;
    connect?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof AddressUpdateToOneWithWhereWithoutServiceOrderInput>;
}
export declare class AddressUpdateToOneWithWhereWithoutOutletInput {
    where?: InstanceType<typeof AddressWhereInput>;
    data: InstanceType<typeof AddressUpdateWithoutOutletInput>;
}
export declare class AddressUpdateToOneWithWhereWithoutPlatformOrderInput {
    where?: InstanceType<typeof AddressWhereInput>;
    data: InstanceType<typeof AddressUpdateWithoutPlatformOrderInput>;
}
export declare class AddressUpdateToOneWithWhereWithoutServiceOrderInput {
    where?: InstanceType<typeof AddressWhereInput>;
    data: InstanceType<typeof AddressUpdateWithoutServiceOrderInput>;
}
export declare class AddressUpdateWithWhereUniqueWithoutSubdistrictInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AddressUpdateWithoutSubdistrictInput>;
}
export declare class AddressUpdateWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AddressUpdateWithoutUserInput>;
}
export declare class AddressUpdateWithoutOutletInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneWithoutAddressesNestedInput>;
    subdistrict?: InstanceType<typeof SubdistrictUpdateOneRequiredWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateWithoutPlatformOrderInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUpdateOneWithoutAddressNestedInput>;
    user?: InstanceType<typeof UserUpdateOneWithoutAddressesNestedInput>;
    subdistrict?: InstanceType<typeof SubdistrictUpdateOneRequiredWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateWithoutServiceOrderInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUpdateOneWithoutAddressNestedInput>;
    user?: InstanceType<typeof UserUpdateOneWithoutAddressesNestedInput>;
    subdistrict?: InstanceType<typeof SubdistrictUpdateOneRequiredWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateWithoutSubdistrictInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUpdateOneWithoutAddressNestedInput>;
    user?: InstanceType<typeof UserUpdateOneWithoutAddressesNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateWithoutUserInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUpdateOneWithoutAddressNestedInput>;
    subdistrict?: InstanceType<typeof SubdistrictUpdateOneRequiredWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpdateInput {
    latitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    label?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    street?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isMain?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    Outlet?: InstanceType<typeof OutletUpdateOneWithoutAddressNestedInput>;
    user?: InstanceType<typeof UserUpdateOneWithoutAddressesNestedInput>;
    subdistrict?: InstanceType<typeof SubdistrictUpdateOneRequiredWithoutAddressNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateManyWithoutAddressNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutAddressNestedInput>;
}
export declare class AddressUpsertWithWhereUniqueWithoutSubdistrictInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AddressUpdateWithoutSubdistrictInput>;
    create: InstanceType<typeof AddressCreateWithoutSubdistrictInput>;
}
export declare class AddressUpsertWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AddressUpdateWithoutUserInput>;
    create: InstanceType<typeof AddressCreateWithoutUserInput>;
}
export declare class AddressUpsertWithoutOutletInput {
    update: InstanceType<typeof AddressUpdateWithoutOutletInput>;
    create: InstanceType<typeof AddressCreateWithoutOutletInput>;
    where?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressUpsertWithoutPlatformOrderInput {
    update: InstanceType<typeof AddressUpdateWithoutPlatformOrderInput>;
    create: InstanceType<typeof AddressCreateWithoutPlatformOrderInput>;
    where?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressUpsertWithoutServiceOrderInput {
    update: InstanceType<typeof AddressUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof AddressCreateWithoutServiceOrderInput>;
    where?: InstanceType<typeof AddressWhereInput>;
}
export declare class AddressWhereUniqueInput {
    id?: number;
    AND?: Array<AddressWhereInput>;
    OR?: Array<AddressWhereInput>;
    NOT?: Array<AddressWhereInput>;
    latitude?: InstanceType<typeof FloatNullableFilter>;
    longitude?: InstanceType<typeof FloatNullableFilter>;
    label?: InstanceType<typeof StringFilter>;
    street?: InstanceType<typeof StringFilter>;
    isMain?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringNullableFilter>;
    subdistrictId?: InstanceType<typeof IntFilter>;
    Outlet?: InstanceType<typeof OutletNullableRelationFilter>;
    user?: InstanceType<typeof UserNullableRelationFilter>;
    subdistrict?: InstanceType<typeof SubdistrictRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderListRelationFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
}
export declare class AddressWhereInput {
    AND?: Array<AddressWhereInput>;
    OR?: Array<AddressWhereInput>;
    NOT?: Array<AddressWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatNullableFilter>;
    longitude?: InstanceType<typeof FloatNullableFilter>;
    label?: InstanceType<typeof StringFilter>;
    street?: InstanceType<typeof StringFilter>;
    isMain?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringNullableFilter>;
    subdistrictId?: InstanceType<typeof IntFilter>;
    Outlet?: InstanceType<typeof OutletNullableRelationFilter>;
    user?: InstanceType<typeof UserNullableRelationFilter>;
    subdistrict?: InstanceType<typeof SubdistrictRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderListRelationFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
}
export declare class Address {
    id: number;
    latitude: number | null;
    longitude: number | null;
    label: string;
    street: string;
    isMain: boolean;
    createdAt: Date;
    updatedAt: Date;
    userId: string | null;
    subdistrictId: number;
    Outlet?: InstanceType<typeof Outlet> | null;
    user?: InstanceType<typeof User> | null;
    subdistrict?: InstanceType<typeof Subdistrict>;
    platformOrder?: Array<PlatformOrder>;
    serviceOrder?: Array<ServiceOrder>;
    _count?: InstanceType<typeof AddressCount>;
}
export declare class AggregateAddress {
    _count?: InstanceType<typeof AddressCountAggregate>;
    _avg?: InstanceType<typeof AddressAvgAggregate>;
    _sum?: InstanceType<typeof AddressSumAggregate>;
    _min?: InstanceType<typeof AddressMinAggregate>;
    _max?: InstanceType<typeof AddressMaxAggregate>;
}
export declare class CreateManyAddressArgs {
    data: Array<AddressCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneAddressArgs {
    data: InstanceType<typeof AddressCreateInput>;
}
export declare class DeleteManyAddressArgs {
    where?: InstanceType<typeof AddressWhereInput>;
}
export declare class DeleteOneAddressArgs {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class FindFirstAddressOrThrowArgs {
    where?: InstanceType<typeof AddressWhereInput>;
    orderBy?: Array<AddressOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AddressScalarFieldEnum>;
}
export declare class FindFirstAddressArgs {
    where?: InstanceType<typeof AddressWhereInput>;
    orderBy?: Array<AddressOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AddressScalarFieldEnum>;
}
export declare class FindManyAddressArgs {
    where?: InstanceType<typeof AddressWhereInput>;
    orderBy?: Array<AddressOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AddressScalarFieldEnum>;
}
export declare class FindUniqueAddressOrThrowArgs {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class FindUniqueAddressArgs {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class UpdateManyAddressArgs {
    data: InstanceType<typeof AddressUpdateManyMutationInput>;
    where?: InstanceType<typeof AddressWhereInput>;
}
export declare class UpdateOneAddressArgs {
    data: InstanceType<typeof AddressUpdateInput>;
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
}
export declare class UpsertOneAddressArgs {
    where: Prisma.AtLeast<AddressWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AddressCreateInput>;
    update: InstanceType<typeof AddressUpdateInput>;
}
export declare class AggregateAttendance {
    _count?: InstanceType<typeof AttendanceCountAggregate>;
    _avg?: InstanceType<typeof AttendanceAvgAggregate>;
    _sum?: InstanceType<typeof AttendanceSumAggregate>;
    _min?: InstanceType<typeof AttendanceMinAggregate>;
    _max?: InstanceType<typeof AttendanceMaxAggregate>;
}
export declare class AttendanceAggregateArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
    orderBy?: Array<AttendanceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AttendanceCountAggregateInput>;
    _avg?: InstanceType<typeof AttendanceAvgAggregateInput>;
    _sum?: InstanceType<typeof AttendanceSumAggregateInput>;
    _min?: InstanceType<typeof AttendanceMinAggregateInput>;
    _max?: InstanceType<typeof AttendanceMaxAggregateInput>;
}
export declare class AttendanceAvgAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    latePenalty?: true;
    absentPenalty?: true;
    overtimeBonus?: true;
}
export declare class AttendanceAvgAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
}
export declare class AttendanceAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    latePenalty?: keyof typeof SortOrder;
    absentPenalty?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
}
export declare class AttendanceCountAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    timeIn?: true;
    timeOut?: true;
    reason?: true;
    latePenalty?: true;
    absentPenalty?: true;
    overtimeBonus?: true;
    createdAt?: true;
    updatedAt?: true;
    imageUrl?: true;
    status?: true;
    employeeId?: true;
    _all?: true;
}
export declare class AttendanceCountAggregate {
    id: number;
    latitude: number;
    longitude: number;
    timeIn: number;
    timeOut: number;
    reason: number;
    latePenalty: number;
    absentPenalty: number;
    overtimeBonus: number;
    createdAt: number;
    updatedAt: number;
    imageUrl: number;
    status: number;
    employeeId: number;
    _all: number;
}
export declare class AttendanceCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    timeIn?: keyof typeof SortOrder;
    timeOut?: keyof typeof SortOrder;
    reason?: keyof typeof SortOrder;
    latePenalty?: keyof typeof SortOrder;
    absentPenalty?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    imageUrl?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class AttendanceCreateManyEmployeeInputEnvelope {
    data: Array<AttendanceCreateManyEmployeeInput>;
    skipDuplicates?: boolean;
}
export declare class AttendanceCreateManyEmployeeInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status: keyof typeof EmployeeAttendanceStatus;
}
export declare class AttendanceCreateManyImageInputEnvelope {
    data: Array<AttendanceCreateManyImageInput>;
    skipDuplicates?: boolean;
}
export declare class AttendanceCreateManyImageInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
}
export declare class AttendanceCreateManyInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
}
export declare class AttendanceCreateNestedManyWithoutEmployeeInput {
    create?: Array<AttendanceCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
}
export declare class AttendanceCreateNestedManyWithoutImageInput {
    create?: Array<AttendanceCreateWithoutImageInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
}
export declare class AttendanceCreateOrConnectWithoutEmployeeInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AttendanceCreateWithoutEmployeeInput>;
}
export declare class AttendanceCreateOrConnectWithoutImageInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AttendanceCreateWithoutImageInput>;
}
export declare class AttendanceCreateWithoutEmployeeInput {
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof EmployeeAttendanceStatus;
    image?: InstanceType<typeof ImageCreateNestedOneWithoutAttendancesInput>;
}
export declare class AttendanceCreateWithoutImageInput {
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof EmployeeAttendanceStatus;
    employee: InstanceType<typeof EmployeeCreateNestedOneWithoutAttendancesInput>;
}
export declare class AttendanceCreateInput {
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof EmployeeAttendanceStatus;
    image?: InstanceType<typeof ImageCreateNestedOneWithoutAttendancesInput>;
    employee: InstanceType<typeof EmployeeCreateNestedOneWithoutAttendancesInput>;
}
export declare class AttendanceGroupByArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
    orderBy?: Array<AttendanceOrderByWithAggregationInput>;
    by: Array<keyof typeof AttendanceScalarFieldEnum>;
    having?: InstanceType<typeof AttendanceScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof AttendanceCountAggregateInput>;
    _avg?: InstanceType<typeof AttendanceAvgAggregateInput>;
    _sum?: InstanceType<typeof AttendanceSumAggregateInput>;
    _min?: InstanceType<typeof AttendanceMinAggregateInput>;
    _max?: InstanceType<typeof AttendanceMaxAggregateInput>;
}
export declare class AttendanceGroupBy {
    id: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    imageUrl?: string;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
    _count?: InstanceType<typeof AttendanceCountAggregate>;
    _avg?: InstanceType<typeof AttendanceAvgAggregate>;
    _sum?: InstanceType<typeof AttendanceSumAggregate>;
    _min?: InstanceType<typeof AttendanceMinAggregate>;
    _max?: InstanceType<typeof AttendanceMaxAggregate>;
}
export declare class AttendanceListRelationFilter {
    every?: InstanceType<typeof AttendanceWhereInput>;
    some?: InstanceType<typeof AttendanceWhereInput>;
    none?: InstanceType<typeof AttendanceWhereInput>;
}
export declare class AttendanceMaxAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    timeIn?: true;
    timeOut?: true;
    reason?: true;
    latePenalty?: true;
    absentPenalty?: true;
    overtimeBonus?: true;
    createdAt?: true;
    updatedAt?: true;
    imageUrl?: true;
    status?: true;
    employeeId?: true;
}
export declare class AttendanceMaxAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    timeIn?: Date | string;
    timeOut?: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status?: keyof typeof EmployeeAttendanceStatus;
    employeeId?: string;
}
export declare class AttendanceMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    timeIn?: keyof typeof SortOrder;
    timeOut?: keyof typeof SortOrder;
    reason?: keyof typeof SortOrder;
    latePenalty?: keyof typeof SortOrder;
    absentPenalty?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    imageUrl?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class AttendanceMinAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    timeIn?: true;
    timeOut?: true;
    reason?: true;
    latePenalty?: true;
    absentPenalty?: true;
    overtimeBonus?: true;
    createdAt?: true;
    updatedAt?: true;
    imageUrl?: true;
    status?: true;
    employeeId?: true;
}
export declare class AttendanceMinAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    timeIn?: Date | string;
    timeOut?: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status?: keyof typeof EmployeeAttendanceStatus;
    employeeId?: string;
}
export declare class AttendanceMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    timeIn?: keyof typeof SortOrder;
    timeOut?: keyof typeof SortOrder;
    reason?: keyof typeof SortOrder;
    latePenalty?: keyof typeof SortOrder;
    absentPenalty?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    imageUrl?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class AttendanceOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class AttendanceOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    timeIn?: keyof typeof SortOrder;
    timeOut?: keyof typeof SortOrder;
    reason?: InstanceType<typeof SortOrderInput>;
    latePenalty?: InstanceType<typeof SortOrderInput>;
    absentPenalty?: InstanceType<typeof SortOrderInput>;
    overtimeBonus?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    imageUrl?: InstanceType<typeof SortOrderInput>;
    status?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof AttendanceCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof AttendanceAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof AttendanceMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof AttendanceMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof AttendanceSumOrderByAggregateInput>;
}
export declare class AttendanceOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    timeIn?: keyof typeof SortOrder;
    timeOut?: keyof typeof SortOrder;
    reason?: InstanceType<typeof SortOrderInput>;
    latePenalty?: InstanceType<typeof SortOrderInput>;
    absentPenalty?: InstanceType<typeof SortOrderInput>;
    overtimeBonus?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    imageUrl?: InstanceType<typeof SortOrderInput>;
    status?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
    image?: InstanceType<typeof ImageOrderByWithRelationInput>;
    employee?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
}
export declare class AttendanceScalarWhereWithAggregatesInput {
    AND?: Array<AttendanceScalarWhereWithAggregatesInput>;
    OR?: Array<AttendanceScalarWhereWithAggregatesInput>;
    NOT?: Array<AttendanceScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    latitude?: InstanceType<typeof FloatWithAggregatesFilter>;
    longitude?: InstanceType<typeof FloatWithAggregatesFilter>;
    timeIn?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    timeOut?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    reason?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    latePenalty?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    absentPenalty?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    imageUrl?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusWithAggregatesFilter>;
    employeeId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class AttendanceScalarWhereInput {
    AND?: Array<AttendanceScalarWhereInput>;
    OR?: Array<AttendanceScalarWhereInput>;
    NOT?: Array<AttendanceScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    timeIn?: InstanceType<typeof DateTimeFilter>;
    timeOut?: InstanceType<typeof DateTimeFilter>;
    reason?: InstanceType<typeof StringNullableFilter>;
    latePenalty?: InstanceType<typeof FloatNullableFilter>;
    absentPenalty?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    imageUrl?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
}
export declare class AttendanceSumAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    latePenalty?: true;
    absentPenalty?: true;
    overtimeBonus?: true;
}
export declare class AttendanceSumAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
}
export declare class AttendanceSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    latePenalty?: keyof typeof SortOrder;
    absentPenalty?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
}
export declare class AttendanceUncheckedCreateNestedManyWithoutEmployeeInput {
    create?: Array<AttendanceCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
}
export declare class AttendanceUncheckedCreateNestedManyWithoutImageInput {
    create?: Array<AttendanceCreateWithoutImageInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
}
export declare class AttendanceUncheckedCreateWithoutEmployeeInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status: keyof typeof EmployeeAttendanceStatus;
}
export declare class AttendanceUncheckedCreateWithoutImageInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
}
export declare class AttendanceUncheckedCreateInput {
    id?: number;
    latitude: number;
    longitude: number;
    timeIn: Date | string;
    timeOut: Date | string;
    reason?: string;
    latePenalty?: number;
    absentPenalty?: number;
    overtimeBonus?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    imageUrl?: string;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
}
export declare class AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput {
    create?: Array<AttendanceCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<AttendanceUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    update?: Array<AttendanceUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<AttendanceUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<AttendanceScalarWhereInput>;
}
export declare class AttendanceUncheckedUpdateManyWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
}
export declare class AttendanceUncheckedUpdateManyWithoutImageNestedInput {
    create?: Array<AttendanceCreateWithoutImageInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutImageInput>;
    upsert?: Array<AttendanceUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    update?: Array<AttendanceUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<AttendanceUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<AttendanceScalarWhereInput>;
}
export declare class AttendanceUncheckedUpdateManyWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AttendanceUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AttendanceUncheckedUpdateWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
}
export declare class AttendanceUncheckedUpdateWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AttendanceUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageUrl?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class AttendanceUpdateManyMutationInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
}
export declare class AttendanceUpdateManyWithWhereWithoutEmployeeInput {
    where: InstanceType<typeof AttendanceScalarWhereInput>;
    data: InstanceType<typeof AttendanceUpdateManyMutationInput>;
}
export declare class AttendanceUpdateManyWithWhereWithoutImageInput {
    where: InstanceType<typeof AttendanceScalarWhereInput>;
    data: InstanceType<typeof AttendanceUpdateManyMutationInput>;
}
export declare class AttendanceUpdateManyWithoutEmployeeNestedInput {
    create?: Array<AttendanceCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<AttendanceUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    update?: Array<AttendanceUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<AttendanceUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<AttendanceScalarWhereInput>;
}
export declare class AttendanceUpdateManyWithoutImageNestedInput {
    create?: Array<AttendanceCreateWithoutImageInput>;
    connectOrCreate?: Array<AttendanceCreateOrConnectWithoutImageInput>;
    upsert?: Array<AttendanceUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof AttendanceCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>>;
    update?: Array<AttendanceUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<AttendanceUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<AttendanceScalarWhereInput>;
}
export declare class AttendanceUpdateWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AttendanceUpdateWithoutEmployeeInput>;
}
export declare class AttendanceUpdateWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof AttendanceUpdateWithoutImageInput>;
}
export declare class AttendanceUpdateWithoutEmployeeInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneWithoutAttendancesNestedInput>;
}
export declare class AttendanceUpdateWithoutImageInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    employee?: InstanceType<typeof EmployeeUpdateOneRequiredWithoutAttendancesNestedInput>;
}
export declare class AttendanceUpdateInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    timeIn?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    timeOut?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reason?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    latePenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    absentPenalty?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneWithoutAttendancesNestedInput>;
    employee?: InstanceType<typeof EmployeeUpdateOneRequiredWithoutAttendancesNestedInput>;
}
export declare class AttendanceUpsertWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AttendanceUpdateWithoutEmployeeInput>;
    create: InstanceType<typeof AttendanceCreateWithoutEmployeeInput>;
}
export declare class AttendanceUpsertWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof AttendanceUpdateWithoutImageInput>;
    create: InstanceType<typeof AttendanceCreateWithoutImageInput>;
}
export declare class AttendanceWhereUniqueInput {
    id?: number;
    AND?: Array<AttendanceWhereInput>;
    OR?: Array<AttendanceWhereInput>;
    NOT?: Array<AttendanceWhereInput>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    timeIn?: InstanceType<typeof DateTimeFilter>;
    timeOut?: InstanceType<typeof DateTimeFilter>;
    reason?: InstanceType<typeof StringNullableFilter>;
    latePenalty?: InstanceType<typeof FloatNullableFilter>;
    absentPenalty?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    imageUrl?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
    image?: InstanceType<typeof ImageNullableRelationFilter>;
    employee?: InstanceType<typeof EmployeeRelationFilter>;
}
export declare class AttendanceWhereInput {
    AND?: Array<AttendanceWhereInput>;
    OR?: Array<AttendanceWhereInput>;
    NOT?: Array<AttendanceWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    timeIn?: InstanceType<typeof DateTimeFilter>;
    timeOut?: InstanceType<typeof DateTimeFilter>;
    reason?: InstanceType<typeof StringNullableFilter>;
    latePenalty?: InstanceType<typeof FloatNullableFilter>;
    absentPenalty?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    imageUrl?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumEmployeeAttendanceStatusFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
    image?: InstanceType<typeof ImageNullableRelationFilter>;
    employee?: InstanceType<typeof EmployeeRelationFilter>;
}
export declare class Attendance {
    id: number;
    latitude: number;
    longitude: number;
    timeIn: Date;
    timeOut: Date;
    reason: string | null;
    latePenalty: number | null;
    absentPenalty: number | null;
    overtimeBonus: number | null;
    createdAt: Date;
    updatedAt: Date;
    imageUrl: string | null;
    status: keyof typeof EmployeeAttendanceStatus;
    employeeId: string;
    image?: InstanceType<typeof Image> | null;
    employee?: InstanceType<typeof Employee>;
}
export declare class CreateManyAttendanceArgs {
    data: Array<AttendanceCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneAttendanceArgs {
    data: InstanceType<typeof AttendanceCreateInput>;
}
export declare class DeleteManyAttendanceArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
}
export declare class DeleteOneAttendanceArgs {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
}
export declare class FindFirstAttendanceOrThrowArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
    orderBy?: Array<AttendanceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AttendanceScalarFieldEnum>;
}
export declare class FindFirstAttendanceArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
    orderBy?: Array<AttendanceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AttendanceScalarFieldEnum>;
}
export declare class FindManyAttendanceArgs {
    where?: InstanceType<typeof AttendanceWhereInput>;
    orderBy?: Array<AttendanceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof AttendanceScalarFieldEnum>;
}
export declare class FindUniqueAttendanceOrThrowArgs {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
}
export declare class FindUniqueAttendanceArgs {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
}
export declare class UpdateManyAttendanceArgs {
    data: InstanceType<typeof AttendanceUpdateManyMutationInput>;
    where?: InstanceType<typeof AttendanceWhereInput>;
}
export declare class UpdateOneAttendanceArgs {
    data: InstanceType<typeof AttendanceUpdateInput>;
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
}
export declare class UpsertOneAttendanceArgs {
    where: Prisma.AtLeast<AttendanceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof AttendanceCreateInput>;
    update: InstanceType<typeof AttendanceUpdateInput>;
}
export declare class AggregateBusinessHour {
    _count?: InstanceType<typeof BusinessHourCountAggregate>;
    _avg?: InstanceType<typeof BusinessHourAvgAggregate>;
    _sum?: InstanceType<typeof BusinessHourSumAggregate>;
    _min?: InstanceType<typeof BusinessHourMinAggregate>;
    _max?: InstanceType<typeof BusinessHourMaxAggregate>;
}
export declare class BusinessHourAggregateArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
    orderBy?: Array<BusinessHourOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof BusinessHourCountAggregateInput>;
    _avg?: InstanceType<typeof BusinessHourAvgAggregateInput>;
    _sum?: InstanceType<typeof BusinessHourSumAggregateInput>;
    _min?: InstanceType<typeof BusinessHourMinAggregateInput>;
    _max?: InstanceType<typeof BusinessHourMaxAggregateInput>;
}
export declare class BusinessHourAvgAggregateInput {
    id?: true;
}
export declare class BusinessHourAvgAggregate {
    id?: number;
}
export declare class BusinessHourAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class BusinessHourCountAggregateInput {
    id?: true;
    openTime?: true;
    closeTime?: true;
    day?: true;
    _all?: true;
}
export declare class BusinessHourCountAggregate {
    id: number;
    openTime: number;
    closeTime: number;
    day: number;
    _all: number;
}
export declare class BusinessHourCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    day?: keyof typeof SortOrder;
}
export declare class BusinessHourCount {
    outlet?: number;
}
export declare class BusinessHourCreateManyInput {
    id?: number;
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
}
export declare class BusinessHourCreateNestedManyWithoutOutletInput {
    create?: Array<BusinessHourCreateWithoutOutletInput>;
    connectOrCreate?: Array<BusinessHourCreateOrConnectWithoutOutletInput>;
    connect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
}
export declare class BusinessHourCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    create: InstanceType<typeof BusinessHourCreateWithoutOutletInput>;
}
export declare class BusinessHourCreateWithoutOutletInput {
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
}
export declare class BusinessHourCreateInput {
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
    outlet?: InstanceType<typeof OutletCreateNestedManyWithoutBussinessHoursInput>;
}
export declare class BusinessHourGroupByArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
    orderBy?: Array<BusinessHourOrderByWithAggregationInput>;
    by: Array<keyof typeof BusinessHourScalarFieldEnum>;
    having?: InstanceType<typeof BusinessHourScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof BusinessHourCountAggregateInput>;
    _avg?: InstanceType<typeof BusinessHourAvgAggregateInput>;
    _sum?: InstanceType<typeof BusinessHourSumAggregateInput>;
    _min?: InstanceType<typeof BusinessHourMinAggregateInput>;
    _max?: InstanceType<typeof BusinessHourMaxAggregateInput>;
}
export declare class BusinessHourGroupBy {
    id: number;
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
    _count?: InstanceType<typeof BusinessHourCountAggregate>;
    _avg?: InstanceType<typeof BusinessHourAvgAggregate>;
    _sum?: InstanceType<typeof BusinessHourSumAggregate>;
    _min?: InstanceType<typeof BusinessHourMinAggregate>;
    _max?: InstanceType<typeof BusinessHourMaxAggregate>;
}
export declare class BusinessHourListRelationFilter {
    every?: InstanceType<typeof BusinessHourWhereInput>;
    some?: InstanceType<typeof BusinessHourWhereInput>;
    none?: InstanceType<typeof BusinessHourWhereInput>;
}
export declare class BusinessHourMaxAggregateInput {
    id?: true;
    openTime?: true;
    closeTime?: true;
    day?: true;
}
export declare class BusinessHourMaxAggregate {
    id?: number;
    openTime?: Date | string;
    closeTime?: Date | string;
    day?: keyof typeof Day;
}
export declare class BusinessHourMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    day?: keyof typeof SortOrder;
}
export declare class BusinessHourMinAggregateInput {
    id?: true;
    openTime?: true;
    closeTime?: true;
    day?: true;
}
export declare class BusinessHourMinAggregate {
    id?: number;
    openTime?: Date | string;
    closeTime?: Date | string;
    day?: keyof typeof Day;
}
export declare class BusinessHourMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    day?: keyof typeof SortOrder;
}
export declare class BusinessHourOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class BusinessHourOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    day?: keyof typeof SortOrder;
    _count?: InstanceType<typeof BusinessHourCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof BusinessHourAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof BusinessHourMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof BusinessHourMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof BusinessHourSumOrderByAggregateInput>;
}
export declare class BusinessHourOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    day?: keyof typeof SortOrder;
    outlet?: InstanceType<typeof OutletOrderByRelationAggregateInput>;
}
export declare class BusinessHourScalarWhereWithAggregatesInput {
    AND?: Array<BusinessHourScalarWhereWithAggregatesInput>;
    OR?: Array<BusinessHourScalarWhereWithAggregatesInput>;
    NOT?: Array<BusinessHourScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    openTime?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    closeTime?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    day?: InstanceType<typeof EnumDayWithAggregatesFilter>;
}
export declare class BusinessHourScalarWhereInput {
    AND?: Array<BusinessHourScalarWhereInput>;
    OR?: Array<BusinessHourScalarWhereInput>;
    NOT?: Array<BusinessHourScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    openTime?: InstanceType<typeof DateTimeFilter>;
    closeTime?: InstanceType<typeof DateTimeFilter>;
    day?: InstanceType<typeof EnumDayFilter>;
}
export declare class BusinessHourSumAggregateInput {
    id?: true;
}
export declare class BusinessHourSumAggregate {
    id?: number;
}
export declare class BusinessHourSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class BusinessHourUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<BusinessHourCreateWithoutOutletInput>;
    connectOrCreate?: Array<BusinessHourCreateOrConnectWithoutOutletInput>;
    connect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
}
export declare class BusinessHourUncheckedCreateWithoutOutletInput {
    id?: number;
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
}
export declare class BusinessHourUncheckedCreateInput {
    id?: number;
    openTime: Date | string;
    closeTime: Date | string;
    day: keyof typeof Day;
    outlet?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutBussinessHoursInput>;
}
export declare class BusinessHourUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<BusinessHourCreateWithoutOutletInput>;
    connectOrCreate?: Array<BusinessHourCreateOrConnectWithoutOutletInput>;
    upsert?: Array<BusinessHourUpsertWithWhereUniqueWithoutOutletInput>;
    set?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    update?: Array<BusinessHourUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<BusinessHourUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<BusinessHourScalarWhereInput>;
}
export declare class BusinessHourUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
}
export declare class BusinessHourUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
}
export declare class BusinessHourUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
}
export declare class BusinessHourUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUncheckedUpdateManyWithoutBussinessHoursNestedInput>;
}
export declare class BusinessHourUpdateManyMutationInput {
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
}
export declare class BusinessHourUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof BusinessHourScalarWhereInput>;
    data: InstanceType<typeof BusinessHourUpdateManyMutationInput>;
}
export declare class BusinessHourUpdateManyWithoutOutletNestedInput {
    create?: Array<BusinessHourCreateWithoutOutletInput>;
    connectOrCreate?: Array<BusinessHourCreateOrConnectWithoutOutletInput>;
    upsert?: Array<BusinessHourUpsertWithWhereUniqueWithoutOutletInput>;
    set?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>>;
    update?: Array<BusinessHourUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<BusinessHourUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<BusinessHourScalarWhereInput>;
}
export declare class BusinessHourUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    data: InstanceType<typeof BusinessHourUpdateWithoutOutletInput>;
}
export declare class BusinessHourUpdateWithoutOutletInput {
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
}
export declare class BusinessHourUpdateInput {
    openTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    day?: InstanceType<typeof EnumDayFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateManyWithoutBussinessHoursNestedInput>;
}
export declare class BusinessHourUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    update: InstanceType<typeof BusinessHourUpdateWithoutOutletInput>;
    create: InstanceType<typeof BusinessHourCreateWithoutOutletInput>;
}
export declare class BusinessHourWhereUniqueInput {
    id?: number;
    AND?: Array<BusinessHourWhereInput>;
    OR?: Array<BusinessHourWhereInput>;
    NOT?: Array<BusinessHourWhereInput>;
    openTime?: InstanceType<typeof DateTimeFilter>;
    closeTime?: InstanceType<typeof DateTimeFilter>;
    day?: InstanceType<typeof EnumDayFilter>;
    outlet?: InstanceType<typeof OutletListRelationFilter>;
}
export declare class BusinessHourWhereInput {
    AND?: Array<BusinessHourWhereInput>;
    OR?: Array<BusinessHourWhereInput>;
    NOT?: Array<BusinessHourWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    openTime?: InstanceType<typeof DateTimeFilter>;
    closeTime?: InstanceType<typeof DateTimeFilter>;
    day?: InstanceType<typeof EnumDayFilter>;
    outlet?: InstanceType<typeof OutletListRelationFilter>;
}
export declare class BusinessHour {
    id: number;
    openTime: Date;
    closeTime: Date;
    day: keyof typeof Day;
    outlet?: Array<Outlet>;
    _count?: InstanceType<typeof BusinessHourCount>;
}
export declare class CreateManyBusinessHourArgs {
    data: Array<BusinessHourCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneBusinessHourArgs {
    data: InstanceType<typeof BusinessHourCreateInput>;
}
export declare class DeleteManyBusinessHourArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
}
export declare class DeleteOneBusinessHourArgs {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
}
export declare class FindFirstBusinessHourOrThrowArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
    orderBy?: Array<BusinessHourOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof BusinessHourScalarFieldEnum>;
}
export declare class FindFirstBusinessHourArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
    orderBy?: Array<BusinessHourOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof BusinessHourScalarFieldEnum>;
}
export declare class FindManyBusinessHourArgs {
    where?: InstanceType<typeof BusinessHourWhereInput>;
    orderBy?: Array<BusinessHourOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof BusinessHourScalarFieldEnum>;
}
export declare class FindUniqueBusinessHourOrThrowArgs {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
}
export declare class FindUniqueBusinessHourArgs {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
}
export declare class UpdateManyBusinessHourArgs {
    data: InstanceType<typeof BusinessHourUpdateManyMutationInput>;
    where?: InstanceType<typeof BusinessHourWhereInput>;
}
export declare class UpdateOneBusinessHourArgs {
    data: InstanceType<typeof BusinessHourUpdateInput>;
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
}
export declare class UpsertOneBusinessHourArgs {
    where: Prisma.AtLeast<BusinessHourWhereUniqueInput, 'id'>;
    create: InstanceType<typeof BusinessHourCreateInput>;
    update: InstanceType<typeof BusinessHourUpdateInput>;
}
export declare class AggregateCart {
    _count?: InstanceType<typeof CartCountAggregate>;
    _avg?: InstanceType<typeof CartAvgAggregate>;
    _sum?: InstanceType<typeof CartSumAggregate>;
    _min?: InstanceType<typeof CartMinAggregate>;
    _max?: InstanceType<typeof CartMaxAggregate>;
}
export declare class CartAggregateArgs {
    where?: InstanceType<typeof CartWhereInput>;
    orderBy?: Array<CartOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CartCountAggregateInput>;
    _avg?: InstanceType<typeof CartAvgAggregateInput>;
    _sum?: InstanceType<typeof CartSumAggregateInput>;
    _min?: InstanceType<typeof CartMinAggregateInput>;
    _max?: InstanceType<typeof CartMaxAggregateInput>;
}
export declare class CartAvgAggregateInput {
    id?: true;
    quantity?: true;
    price?: true;
    cost?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    outletLaundryItemServiceId?: true;
}
export declare class CartAvgAggregate {
    id?: number;
    quantity?: number;
    price?: number;
    cost?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
    outletLaundryItemServiceId?: number;
}
export declare class CartAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    outletLaundryItemServiceId?: keyof typeof SortOrder;
}
export declare class CartCountAggregateInput {
    id?: true;
    quantity?: true;
    price?: true;
    cost?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    platformItemId?: true;
    outletLaundryItemServiceId?: true;
    _all?: true;
}
export declare class CartCountAggregate {
    id: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt: number;
    updatedAt: number;
    serviceOrderId: number;
    platformOrderId: number;
    platformItemId: number;
    outletLaundryItemServiceId: number;
    _all: number;
}
export declare class CartCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    outletLaundryItemServiceId?: keyof typeof SortOrder;
}
export declare class CartCreateManyOutletLaundryItemServiceInputEnvelope {
    data: Array<CartCreateManyOutletLaundryItemServiceInput>;
    skipDuplicates?: boolean;
}
export declare class CartCreateManyOutletLaundryItemServiceInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
}
export declare class CartCreateManyPlatformItemInputEnvelope {
    data: Array<CartCreateManyPlatformItemInput>;
    skipDuplicates?: boolean;
}
export declare class CartCreateManyPlatformItemInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    outletLaundryItemServiceId?: number;
}
export declare class CartCreateManyPlatformOrderInputEnvelope {
    data: Array<CartCreateManyPlatformOrderInput>;
    skipDuplicates?: boolean;
}
export declare class CartCreateManyPlatformOrderInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartCreateManyServiceOrderInputEnvelope {
    data: Array<CartCreateManyServiceOrderInput>;
    skipDuplicates?: boolean;
}
export declare class CartCreateManyServiceOrderInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartCreateManyInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartCreateNestedManyWithoutOutletLaundryItemServiceInput {
    create?: Array<CartCreateWithoutOutletLaundryItemServiceInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutOutletLaundryItemServiceInput>;
    createMany?: InstanceType<typeof CartCreateManyOutletLaundryItemServiceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartCreateNestedManyWithoutPlatformItemInput {
    create?: Array<CartCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<CartCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartCreateNestedManyWithoutServiceOrderInput {
    create?: Array<CartCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartCreateOrConnectWithoutOutletLaundryItemServiceInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CartCreateWithoutOutletLaundryItemServiceInput>;
}
export declare class CartCreateOrConnectWithoutPlatformItemInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CartCreateWithoutPlatformItemInput>;
}
export declare class CartCreateOrConnectWithoutPlatformOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CartCreateWithoutPlatformOrderInput>;
}
export declare class CartCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CartCreateWithoutServiceOrderInput>;
}
export declare class CartCreateWithoutOutletLaundryItemServiceInput {
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutCartInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutCartsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutCartsInput>;
}
export declare class CartCreateWithoutPlatformItemInput {
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutCartInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutCartsInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceCreateNestedOneWithoutCartInput>;
}
export declare class CartCreateWithoutPlatformOrderInput {
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutCartInput>;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutCartsInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceCreateNestedOneWithoutCartInput>;
}
export declare class CartCreateWithoutServiceOrderInput {
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    PlatformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutCartsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutCartsInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceCreateNestedOneWithoutCartInput>;
}
export declare class CartCreateInput {
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutCartInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutCartsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutCartsInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceCreateNestedOneWithoutCartInput>;
}
export declare class CartGroupByArgs {
    where?: InstanceType<typeof CartWhereInput>;
    orderBy?: Array<CartOrderByWithAggregationInput>;
    by: Array<keyof typeof CartScalarFieldEnum>;
    having?: InstanceType<typeof CartScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CartCountAggregateInput>;
    _avg?: InstanceType<typeof CartAvgAggregateInput>;
    _sum?: InstanceType<typeof CartSumAggregateInput>;
    _min?: InstanceType<typeof CartMinAggregateInput>;
    _max?: InstanceType<typeof CartMaxAggregateInput>;
}
export declare class CartGroupBy {
    id: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
    _count?: InstanceType<typeof CartCountAggregate>;
    _avg?: InstanceType<typeof CartAvgAggregate>;
    _sum?: InstanceType<typeof CartSumAggregate>;
    _min?: InstanceType<typeof CartMinAggregate>;
    _max?: InstanceType<typeof CartMaxAggregate>;
}
export declare class CartListRelationFilter {
    every?: InstanceType<typeof CartWhereInput>;
    some?: InstanceType<typeof CartWhereInput>;
    none?: InstanceType<typeof CartWhereInput>;
}
export declare class CartMaxAggregateInput {
    id?: true;
    quantity?: true;
    price?: true;
    cost?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    platformItemId?: true;
    outletLaundryItemServiceId?: true;
}
export declare class CartMaxAggregate {
    id?: number;
    quantity?: number;
    price?: number;
    cost?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    outletLaundryItemServiceId?: keyof typeof SortOrder;
}
export declare class CartMinAggregateInput {
    id?: true;
    quantity?: true;
    price?: true;
    cost?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    platformItemId?: true;
    outletLaundryItemServiceId?: true;
}
export declare class CartMinAggregate {
    id?: number;
    quantity?: number;
    price?: number;
    cost?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    outletLaundryItemServiceId?: keyof typeof SortOrder;
}
export declare class CartOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class CartOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    outletLaundryItemServiceId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof CartCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof CartAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof CartMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof CartMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof CartSumOrderByAggregateInput>;
}
export declare class CartOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    outletLaundryItemServiceId?: InstanceType<typeof SortOrderInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderOrderByWithRelationInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderOrderByWithRelationInput>;
    PlatformItem?: InstanceType<typeof PlatformItemOrderByWithRelationInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceOrderByWithRelationInput>;
}
export declare class CartScalarWhereWithAggregatesInput {
    AND?: Array<CartScalarWhereWithAggregatesInput>;
    OR?: Array<CartScalarWhereWithAggregatesInput>;
    NOT?: Array<CartScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    quantity?: InstanceType<typeof IntWithAggregatesFilter>;
    price?: InstanceType<typeof FloatWithAggregatesFilter>;
    cost?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    platformOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    platformItemId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    outletLaundryItemServiceId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class CartScalarWhereInput {
    AND?: Array<CartScalarWhereInput>;
    OR?: Array<CartScalarWhereInput>;
    NOT?: Array<CartScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    price?: InstanceType<typeof FloatFilter>;
    cost?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    outletLaundryItemServiceId?: InstanceType<typeof IntNullableFilter>;
}
export declare class CartSumAggregateInput {
    id?: true;
    quantity?: true;
    price?: true;
    cost?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    outletLaundryItemServiceId?: true;
}
export declare class CartSumAggregate {
    id?: number;
    quantity?: number;
    price?: number;
    cost?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
    outletLaundryItemServiceId?: number;
}
export declare class CartSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    outletLaundryItemServiceId?: keyof typeof SortOrder;
}
export declare class CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput {
    create?: Array<CartCreateWithoutOutletLaundryItemServiceInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutOutletLaundryItemServiceInput>;
    createMany?: InstanceType<typeof CartCreateManyOutletLaundryItemServiceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartUncheckedCreateNestedManyWithoutPlatformItemInput {
    create?: Array<CartCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartUncheckedCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<CartCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartUncheckedCreateNestedManyWithoutServiceOrderInput {
    create?: Array<CartCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
}
export declare class CartUncheckedCreateWithoutOutletLaundryItemServiceInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
}
export declare class CartUncheckedCreateWithoutPlatformItemInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    outletLaundryItemServiceId?: number;
}
export declare class CartUncheckedCreateWithoutPlatformOrderInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartUncheckedCreateInput {
    id?: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    platformItemId?: string;
    outletLaundryItemServiceId?: number;
}
export declare class CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput {
    create?: Array<CartCreateWithoutOutletLaundryItemServiceInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutOutletLaundryItemServiceInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutOutletLaundryItemServiceInput>;
    createMany?: InstanceType<typeof CartCreateManyOutletLaundryItemServiceInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutOutletLaundryItemServiceInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutOutletLaundryItemServiceInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUncheckedUpdateManyWithoutOutletLaundryItemServiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<CartCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUncheckedUpdateManyWithoutPlatformItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<CartCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUncheckedUpdateManyWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<CartCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUncheckedUpdateManyWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateWithoutOutletLaundryItemServiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateWithoutPlatformItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    outletLaundryItemServiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class CartUpdateManyMutationInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CartUpdateManyWithWhereWithoutOutletLaundryItemServiceInput {
    where: InstanceType<typeof CartScalarWhereInput>;
    data: InstanceType<typeof CartUpdateManyMutationInput>;
}
export declare class CartUpdateManyWithWhereWithoutPlatformItemInput {
    where: InstanceType<typeof CartScalarWhereInput>;
    data: InstanceType<typeof CartUpdateManyMutationInput>;
}
export declare class CartUpdateManyWithWhereWithoutPlatformOrderInput {
    where: InstanceType<typeof CartScalarWhereInput>;
    data: InstanceType<typeof CartUpdateManyMutationInput>;
}
export declare class CartUpdateManyWithWhereWithoutServiceOrderInput {
    where: InstanceType<typeof CartScalarWhereInput>;
    data: InstanceType<typeof CartUpdateManyMutationInput>;
}
export declare class CartUpdateManyWithoutOutletLaundryItemServiceNestedInput {
    create?: Array<CartCreateWithoutOutletLaundryItemServiceInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutOutletLaundryItemServiceInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutOutletLaundryItemServiceInput>;
    createMany?: InstanceType<typeof CartCreateManyOutletLaundryItemServiceInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutOutletLaundryItemServiceInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutOutletLaundryItemServiceInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<CartCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<CartCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<CartCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<CartCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<CartUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof CartCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CartWhereUniqueInput, 'id'>>;
    update?: Array<CartUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<CartUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<CartScalarWhereInput>;
}
export declare class CartUpdateWithWhereUniqueWithoutOutletLaundryItemServiceInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CartUpdateWithoutOutletLaundryItemServiceInput>;
}
export declare class CartUpdateWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CartUpdateWithoutPlatformItemInput>;
}
export declare class CartUpdateWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CartUpdateWithoutPlatformOrderInput>;
}
export declare class CartUpdateWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CartUpdateWithoutServiceOrderInput>;
}
export declare class CartUpdateWithoutOutletLaundryItemServiceInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutCartNestedInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutCartsNestedInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutCartsNestedInput>;
}
export declare class CartUpdateWithoutPlatformItemInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutCartNestedInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutCartsNestedInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceUpdateOneWithoutCartNestedInput>;
}
export declare class CartUpdateWithoutPlatformOrderInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutCartNestedInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutCartsNestedInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceUpdateOneWithoutCartNestedInput>;
}
export declare class CartUpdateWithoutServiceOrderInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutCartsNestedInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutCartsNestedInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceUpdateOneWithoutCartNestedInput>;
}
export declare class CartUpdateInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutCartNestedInput>;
    PlatformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutCartsNestedInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutCartsNestedInput>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceUpdateOneWithoutCartNestedInput>;
}
export declare class CartUpsertWithWhereUniqueWithoutOutletLaundryItemServiceInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CartUpdateWithoutOutletLaundryItemServiceInput>;
    create: InstanceType<typeof CartCreateWithoutOutletLaundryItemServiceInput>;
}
export declare class CartUpsertWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CartUpdateWithoutPlatformItemInput>;
    create: InstanceType<typeof CartCreateWithoutPlatformItemInput>;
}
export declare class CartUpsertWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CartUpdateWithoutPlatformOrderInput>;
    create: InstanceType<typeof CartCreateWithoutPlatformOrderInput>;
}
export declare class CartUpsertWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CartUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof CartCreateWithoutServiceOrderInput>;
}
export declare class CartWhereUniqueInput {
    id?: number;
    AND?: Array<CartWhereInput>;
    OR?: Array<CartWhereInput>;
    NOT?: Array<CartWhereInput>;
    quantity?: InstanceType<typeof IntFilter>;
    price?: InstanceType<typeof FloatFilter>;
    cost?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    outletLaundryItemServiceId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    PlatformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    PlatformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceNullableRelationFilter>;
}
export declare class CartWhereInput {
    AND?: Array<CartWhereInput>;
    OR?: Array<CartWhereInput>;
    NOT?: Array<CartWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    price?: InstanceType<typeof FloatFilter>;
    cost?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    outletLaundryItemServiceId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    PlatformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    PlatformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemServiceNullableRelationFilter>;
}
export declare class Cart {
    id: number;
    quantity: number;
    price: number;
    cost: number;
    createdAt: Date;
    updatedAt: Date;
    serviceOrderId: number | null;
    platformOrderId: number | null;
    platformItemId: string | null;
    outletLaundryItemServiceId: number | null;
    serviceOrder?: InstanceType<typeof ServiceOrder> | null;
    PlatformOrder?: InstanceType<typeof PlatformOrder> | null;
    PlatformItem?: InstanceType<typeof PlatformItem> | null;
    OutletLaundryItemService?: InstanceType<typeof OutletLaundryItemService> | null;
}
export declare class CreateManyCartArgs {
    data: Array<CartCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneCartArgs {
    data: InstanceType<typeof CartCreateInput>;
}
export declare class DeleteManyCartArgs {
    where?: InstanceType<typeof CartWhereInput>;
}
export declare class DeleteOneCartArgs {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
}
export declare class FindFirstCartOrThrowArgs {
    where?: InstanceType<typeof CartWhereInput>;
    orderBy?: Array<CartOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CartScalarFieldEnum>;
}
export declare class FindFirstCartArgs {
    where?: InstanceType<typeof CartWhereInput>;
    orderBy?: Array<CartOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CartScalarFieldEnum>;
}
export declare class FindManyCartArgs {
    where?: InstanceType<typeof CartWhereInput>;
    orderBy?: Array<CartOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CartScalarFieldEnum>;
}
export declare class FindUniqueCartOrThrowArgs {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
}
export declare class FindUniqueCartArgs {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
}
export declare class UpdateManyCartArgs {
    data: InstanceType<typeof CartUpdateManyMutationInput>;
    where?: InstanceType<typeof CartWhereInput>;
}
export declare class UpdateOneCartArgs {
    data: InstanceType<typeof CartUpdateInput>;
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
}
export declare class UpsertOneCartArgs {
    where: Prisma.AtLeast<CartWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CartCreateInput>;
    update: InstanceType<typeof CartUpdateInput>;
}
export declare class AggregateChatRoom {
    _count?: InstanceType<typeof ChatRoomCountAggregate>;
    _avg?: InstanceType<typeof ChatRoomAvgAggregate>;
    _sum?: InstanceType<typeof ChatRoomSumAggregate>;
    _min?: InstanceType<typeof ChatRoomMinAggregate>;
    _max?: InstanceType<typeof ChatRoomMaxAggregate>;
}
export declare class ChatRoomAggregateArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    orderBy?: Array<ChatRoomOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ChatRoomCountAggregateInput>;
    _avg?: InstanceType<typeof ChatRoomAvgAggregateInput>;
    _sum?: InstanceType<typeof ChatRoomSumAggregateInput>;
    _min?: InstanceType<typeof ChatRoomMinAggregateInput>;
    _max?: InstanceType<typeof ChatRoomMaxAggregateInput>;
}
export declare class ChatRoomAvgAggregateInput {
    id?: true;
}
export declare class ChatRoomAvgAggregate {
    id?: number;
}
export declare class ChatRoomAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class ChatRoomCountAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    endedAt?: true;
    _all?: true;
}
export declare class ChatRoomCountAggregate {
    id: number;
    name: number;
    createdAt: number;
    updatedAt: number;
    endedAt: number;
    _all: number;
}
export declare class ChatRoomCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    endedAt?: keyof typeof SortOrder;
}
export declare class ChatRoomCount {
    participants?: number;
    messages?: number;
}
export declare class ChatRoomCreateManyInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
}
export declare class ChatRoomCreateNestedOneWithoutMessagesInput {
    create?: InstanceType<typeof ChatRoomCreateWithoutMessagesInput>;
    connectOrCreate?: InstanceType<typeof ChatRoomCreateOrConnectWithoutMessagesInput>;
    connect?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class ChatRoomCreateNestedOneWithoutParticipantsInput {
    create?: InstanceType<typeof ChatRoomCreateWithoutParticipantsInput>;
    connectOrCreate?: InstanceType<typeof ChatRoomCreateOrConnectWithoutParticipantsInput>;
    connect?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class ChatRoomCreateOrConnectWithoutMessagesInput {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ChatRoomCreateWithoutMessagesInput>;
}
export declare class ChatRoomCreateOrConnectWithoutParticipantsInput {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ChatRoomCreateWithoutParticipantsInput>;
}
export declare class ChatRoomCreateWithoutMessagesInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    participants?: InstanceType<typeof UserCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomCreateWithoutParticipantsInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomCreateInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    participants?: InstanceType<typeof UserCreateNestedManyWithoutChatRoomInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomGroupByArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    orderBy?: Array<ChatRoomOrderByWithAggregationInput>;
    by: Array<keyof typeof ChatRoomScalarFieldEnum>;
    having?: InstanceType<typeof ChatRoomScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ChatRoomCountAggregateInput>;
    _avg?: InstanceType<typeof ChatRoomAvgAggregateInput>;
    _sum?: InstanceType<typeof ChatRoomSumAggregateInput>;
    _min?: InstanceType<typeof ChatRoomMinAggregateInput>;
    _max?: InstanceType<typeof ChatRoomMaxAggregateInput>;
}
export declare class ChatRoomGroupBy {
    id: number;
    name: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    endedAt?: Date | string;
    _count?: InstanceType<typeof ChatRoomCountAggregate>;
    _avg?: InstanceType<typeof ChatRoomAvgAggregate>;
    _sum?: InstanceType<typeof ChatRoomSumAggregate>;
    _min?: InstanceType<typeof ChatRoomMinAggregate>;
    _max?: InstanceType<typeof ChatRoomMaxAggregate>;
}
export declare class ChatRoomMaxAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    endedAt?: true;
}
export declare class ChatRoomMaxAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
}
export declare class ChatRoomMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    endedAt?: keyof typeof SortOrder;
}
export declare class ChatRoomMinAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    endedAt?: true;
}
export declare class ChatRoomMinAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
}
export declare class ChatRoomMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    endedAt?: keyof typeof SortOrder;
}
export declare class ChatRoomNullableRelationFilter {
    is?: InstanceType<typeof ChatRoomWhereInput>;
    isNot?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class ChatRoomOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    endedAt?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof ChatRoomCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ChatRoomAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ChatRoomMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ChatRoomMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ChatRoomSumOrderByAggregateInput>;
}
export declare class ChatRoomOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    endedAt?: InstanceType<typeof SortOrderInput>;
    participants?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    messages?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
}
export declare class ChatRoomRelationFilter {
    is?: InstanceType<typeof ChatRoomWhereInput>;
    isNot?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class ChatRoomScalarWhereWithAggregatesInput {
    AND?: Array<ChatRoomScalarWhereWithAggregatesInput>;
    OR?: Array<ChatRoomScalarWhereWithAggregatesInput>;
    NOT?: Array<ChatRoomScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    endedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
}
export declare class ChatRoomSumAggregateInput {
    id?: true;
}
export declare class ChatRoomSumAggregate {
    id?: number;
}
export declare class ChatRoomSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class ChatRoomUncheckedCreateWithoutMessagesInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    participants?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomUncheckedCreateWithoutParticipantsInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomUncheckedCreateInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    endedAt?: Date | string;
    participants?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutChatRoomInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutChatRoomInput>;
}
export declare class ChatRoomUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
}
export declare class ChatRoomUncheckedUpdateWithoutMessagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    participants?: InstanceType<typeof UserUncheckedUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUncheckedUpdateWithoutParticipantsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    participants?: InstanceType<typeof UserUncheckedUpdateManyWithoutChatRoomNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
}
export declare class ChatRoomUpdateOneRequiredWithoutMessagesNestedInput {
    create?: InstanceType<typeof ChatRoomCreateWithoutMessagesInput>;
    connectOrCreate?: InstanceType<typeof ChatRoomCreateOrConnectWithoutMessagesInput>;
    upsert?: InstanceType<typeof ChatRoomUpsertWithoutMessagesInput>;
    connect?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ChatRoomUpdateToOneWithWhereWithoutMessagesInput>;
}
export declare class ChatRoomUpdateOneWithoutParticipantsNestedInput {
    create?: InstanceType<typeof ChatRoomCreateWithoutParticipantsInput>;
    connectOrCreate?: InstanceType<typeof ChatRoomCreateOrConnectWithoutParticipantsInput>;
    upsert?: InstanceType<typeof ChatRoomUpsertWithoutParticipantsInput>;
    disconnect?: InstanceType<typeof ChatRoomWhereInput>;
    delete?: InstanceType<typeof ChatRoomWhereInput>;
    connect?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ChatRoomUpdateToOneWithWhereWithoutParticipantsInput>;
}
export declare class ChatRoomUpdateToOneWithWhereWithoutMessagesInput {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    data: InstanceType<typeof ChatRoomUpdateWithoutMessagesInput>;
}
export declare class ChatRoomUpdateToOneWithWhereWithoutParticipantsInput {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    data: InstanceType<typeof ChatRoomUpdateWithoutParticipantsInput>;
}
export declare class ChatRoomUpdateWithoutMessagesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    participants?: InstanceType<typeof UserUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUpdateWithoutParticipantsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    participants?: InstanceType<typeof UserUpdateManyWithoutChatRoomNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutChatRoomNestedInput>;
}
export declare class ChatRoomUpsertWithoutMessagesInput {
    update: InstanceType<typeof ChatRoomUpdateWithoutMessagesInput>;
    create: InstanceType<typeof ChatRoomCreateWithoutMessagesInput>;
    where?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class ChatRoomUpsertWithoutParticipantsInput {
    update: InstanceType<typeof ChatRoomUpdateWithoutParticipantsInput>;
    create: InstanceType<typeof ChatRoomCreateWithoutParticipantsInput>;
    where?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class ChatRoomWhereUniqueInput {
    id?: number;
    AND?: Array<ChatRoomWhereInput>;
    OR?: Array<ChatRoomWhereInput>;
    NOT?: Array<ChatRoomWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    endedAt?: InstanceType<typeof DateTimeNullableFilter>;
    participants?: InstanceType<typeof UserListRelationFilter>;
    messages?: InstanceType<typeof MessageListRelationFilter>;
}
export declare class ChatRoomWhereInput {
    AND?: Array<ChatRoomWhereInput>;
    OR?: Array<ChatRoomWhereInput>;
    NOT?: Array<ChatRoomWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    endedAt?: InstanceType<typeof DateTimeNullableFilter>;
    participants?: InstanceType<typeof UserListRelationFilter>;
    messages?: InstanceType<typeof MessageListRelationFilter>;
}
export declare class ChatRoom {
    id: number;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    endedAt: Date | null;
    participants?: Array<User>;
    messages?: Array<Message>;
    _count?: InstanceType<typeof ChatRoomCount>;
}
export declare class CreateManyChatRoomArgs {
    data: Array<ChatRoomCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneChatRoomArgs {
    data: InstanceType<typeof ChatRoomCreateInput>;
}
export declare class DeleteManyChatRoomArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class DeleteOneChatRoomArgs {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class FindFirstChatRoomOrThrowArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    orderBy?: Array<ChatRoomOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ChatRoomScalarFieldEnum>;
}
export declare class FindFirstChatRoomArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    orderBy?: Array<ChatRoomOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ChatRoomScalarFieldEnum>;
}
export declare class FindManyChatRoomArgs {
    where?: InstanceType<typeof ChatRoomWhereInput>;
    orderBy?: Array<ChatRoomOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ChatRoomScalarFieldEnum>;
}
export declare class FindUniqueChatRoomOrThrowArgs {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class FindUniqueChatRoomArgs {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class UpdateManyChatRoomArgs {
    data: InstanceType<typeof ChatRoomUpdateManyMutationInput>;
    where?: InstanceType<typeof ChatRoomWhereInput>;
}
export declare class UpdateOneChatRoomArgs {
    data: InstanceType<typeof ChatRoomUpdateInput>;
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
}
export declare class UpsertOneChatRoomArgs {
    where: Prisma.AtLeast<ChatRoomWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ChatRoomCreateInput>;
    update: InstanceType<typeof ChatRoomUpdateInput>;
}
export declare class AggregateCity {
    _count?: InstanceType<typeof CityCountAggregate>;
    _avg?: InstanceType<typeof CityAvgAggregate>;
    _sum?: InstanceType<typeof CitySumAggregate>;
    _min?: InstanceType<typeof CityMinAggregate>;
    _max?: InstanceType<typeof CityMaxAggregate>;
}
export declare class CityAggregateArgs {
    where?: InstanceType<typeof CityWhereInput>;
    orderBy?: Array<CityOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CityCountAggregateInput>;
    _avg?: InstanceType<typeof CityAvgAggregateInput>;
    _sum?: InstanceType<typeof CitySumAggregateInput>;
    _min?: InstanceType<typeof CityMinAggregateInput>;
    _max?: InstanceType<typeof CityMaxAggregateInput>;
}
export declare class CityAvgAggregateInput {
    id?: true;
    provinceId?: true;
}
export declare class CityAvgAggregate {
    id?: number;
    provinceId?: number;
}
export declare class CityAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
}
export declare class CityCountAggregateInput {
    id?: true;
    name?: true;
    provinceId?: true;
    _all?: true;
}
export declare class CityCountAggregate {
    id: number;
    name: number;
    provinceId: number;
    _all: number;
}
export declare class CityCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
}
export declare class CityCount {
    districts?: number;
    voucherSettings?: number;
}
export declare class CityCreateManyProvinceInputEnvelope {
    data: Array<CityCreateManyProvinceInput>;
    skipDuplicates?: boolean;
}
export declare class CityCreateManyProvinceInput {
    id?: number;
    name: string;
}
export declare class CityCreateManyInput {
    id?: number;
    name: string;
    provinceId: number;
}
export declare class CityCreateNestedManyWithoutProvinceInput {
    create?: Array<CityCreateWithoutProvinceInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutProvinceInput>;
    createMany?: InstanceType<typeof CityCreateManyProvinceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
}
export declare class CityCreateNestedManyWithoutVoucherSettingsInput {
    create?: Array<CityCreateWithoutVoucherSettingsInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutVoucherSettingsInput>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
}
export declare class CityCreateNestedOneWithoutDistrictsInput {
    create?: InstanceType<typeof CityCreateWithoutDistrictsInput>;
    connectOrCreate?: InstanceType<typeof CityCreateOrConnectWithoutDistrictsInput>;
    connect?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
}
export declare class CityCreateOrConnectWithoutDistrictsInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CityCreateWithoutDistrictsInput>;
}
export declare class CityCreateOrConnectWithoutProvinceInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CityCreateWithoutProvinceInput>;
}
export declare class CityCreateOrConnectWithoutVoucherSettingsInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CityCreateWithoutVoucherSettingsInput>;
}
export declare class CityCreateWithoutDistrictsInput {
    name: string;
    province: InstanceType<typeof ProvinceCreateNestedOneWithoutCitiesInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityCreateWithoutProvinceInput {
    name: string;
    districts?: InstanceType<typeof DistrictCreateNestedManyWithoutCityInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityCreateWithoutVoucherSettingsInput {
    name: string;
    province: InstanceType<typeof ProvinceCreateNestedOneWithoutCitiesInput>;
    districts?: InstanceType<typeof DistrictCreateNestedManyWithoutCityInput>;
}
export declare class CityCreateInput {
    name: string;
    province: InstanceType<typeof ProvinceCreateNestedOneWithoutCitiesInput>;
    districts?: InstanceType<typeof DistrictCreateNestedManyWithoutCityInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityGroupByArgs {
    where?: InstanceType<typeof CityWhereInput>;
    orderBy?: Array<CityOrderByWithAggregationInput>;
    by: Array<keyof typeof CityScalarFieldEnum>;
    having?: InstanceType<typeof CityScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CityCountAggregateInput>;
    _avg?: InstanceType<typeof CityAvgAggregateInput>;
    _sum?: InstanceType<typeof CitySumAggregateInput>;
    _min?: InstanceType<typeof CityMinAggregateInput>;
    _max?: InstanceType<typeof CityMaxAggregateInput>;
}
export declare class CityGroupBy {
    id: number;
    name: string;
    provinceId: number;
    _count?: InstanceType<typeof CityCountAggregate>;
    _avg?: InstanceType<typeof CityAvgAggregate>;
    _sum?: InstanceType<typeof CitySumAggregate>;
    _min?: InstanceType<typeof CityMinAggregate>;
    _max?: InstanceType<typeof CityMaxAggregate>;
}
export declare class CityListRelationFilter {
    every?: InstanceType<typeof CityWhereInput>;
    some?: InstanceType<typeof CityWhereInput>;
    none?: InstanceType<typeof CityWhereInput>;
}
export declare class CityMaxAggregateInput {
    id?: true;
    name?: true;
    provinceId?: true;
}
export declare class CityMaxAggregate {
    id?: number;
    name?: string;
    provinceId?: number;
}
export declare class CityMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
}
export declare class CityMinAggregateInput {
    id?: true;
    name?: true;
    provinceId?: true;
}
export declare class CityMinAggregate {
    id?: number;
    name?: string;
    provinceId?: number;
}
export declare class CityMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
}
export declare class CityOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class CityOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof CityCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof CityAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof CityMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof CityMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof CitySumOrderByAggregateInput>;
}
export declare class CityOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
    province?: InstanceType<typeof ProvinceOrderByWithRelationInput>;
    districts?: InstanceType<typeof DistrictOrderByRelationAggregateInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingOrderByRelationAggregateInput>;
}
export declare class CityRelationFilter {
    is?: InstanceType<typeof CityWhereInput>;
    isNot?: InstanceType<typeof CityWhereInput>;
}
export declare class CityScalarWhereWithAggregatesInput {
    AND?: Array<CityScalarWhereWithAggregatesInput>;
    OR?: Array<CityScalarWhereWithAggregatesInput>;
    NOT?: Array<CityScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    provinceId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class CityScalarWhereInput {
    AND?: Array<CityScalarWhereInput>;
    OR?: Array<CityScalarWhereInput>;
    NOT?: Array<CityScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    provinceId?: InstanceType<typeof IntFilter>;
}
export declare class CitySumAggregateInput {
    id?: true;
    provinceId?: true;
}
export declare class CitySumAggregate {
    id?: number;
    provinceId?: number;
}
export declare class CitySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    provinceId?: keyof typeof SortOrder;
}
export declare class CityUncheckedCreateNestedManyWithoutProvinceInput {
    create?: Array<CityCreateWithoutProvinceInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutProvinceInput>;
    createMany?: InstanceType<typeof CityCreateManyProvinceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
}
export declare class CityUncheckedCreateNestedManyWithoutVoucherSettingsInput {
    create?: Array<CityCreateWithoutVoucherSettingsInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutVoucherSettingsInput>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
}
export declare class CityUncheckedCreateWithoutDistrictsInput {
    id?: number;
    name: string;
    provinceId: number;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityUncheckedCreateWithoutProvinceInput {
    id?: number;
    name: string;
    districts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutCityInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityUncheckedCreateWithoutVoucherSettingsInput {
    id?: number;
    name: string;
    provinceId: number;
    districts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutCityInput>;
}
export declare class CityUncheckedCreateInput {
    id?: number;
    name: string;
    provinceId: number;
    districts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutCityInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToCitiesInput>;
}
export declare class CityUncheckedUpdateManyWithoutProvinceNestedInput {
    create?: Array<CityCreateWithoutProvinceInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutProvinceInput>;
    upsert?: Array<CityUpsertWithWhereUniqueWithoutProvinceInput>;
    createMany?: InstanceType<typeof CityCreateManyProvinceInputEnvelope>;
    set?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    update?: Array<CityUpdateWithWhereUniqueWithoutProvinceInput>;
    updateMany?: Array<CityUpdateManyWithWhereWithoutProvinceInput>;
    deleteMany?: Array<CityScalarWhereInput>;
}
export declare class CityUncheckedUpdateManyWithoutProvinceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput {
    create?: Array<CityCreateWithoutVoucherSettingsInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutVoucherSettingsInput>;
    upsert?: Array<CityUpsertWithWhereUniqueWithoutVoucherSettingsInput>;
    set?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    update?: Array<CityUpdateWithWhereUniqueWithoutVoucherSettingsInput>;
    updateMany?: Array<CityUpdateManyWithWhereWithoutVoucherSettingsInput>;
    deleteMany?: Array<CityScalarWhereInput>;
}
export declare class CityUncheckedUpdateManyWithoutVoucherSettingsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provinceId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class CityUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provinceId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class CityUncheckedUpdateWithoutDistrictsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provinceId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUncheckedUpdateWithoutProvinceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    districts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutCityNestedInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUncheckedUpdateWithoutVoucherSettingsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provinceId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    districts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutCityNestedInput>;
}
export declare class CityUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provinceId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    districts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutCityNestedInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class CityUpdateManyWithWhereWithoutProvinceInput {
    where: InstanceType<typeof CityScalarWhereInput>;
    data: InstanceType<typeof CityUpdateManyMutationInput>;
}
export declare class CityUpdateManyWithWhereWithoutVoucherSettingsInput {
    where: InstanceType<typeof CityScalarWhereInput>;
    data: InstanceType<typeof CityUpdateManyMutationInput>;
}
export declare class CityUpdateManyWithoutProvinceNestedInput {
    create?: Array<CityCreateWithoutProvinceInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutProvinceInput>;
    upsert?: Array<CityUpsertWithWhereUniqueWithoutProvinceInput>;
    createMany?: InstanceType<typeof CityCreateManyProvinceInputEnvelope>;
    set?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    update?: Array<CityUpdateWithWhereUniqueWithoutProvinceInput>;
    updateMany?: Array<CityUpdateManyWithWhereWithoutProvinceInput>;
    deleteMany?: Array<CityScalarWhereInput>;
}
export declare class CityUpdateManyWithoutVoucherSettingsNestedInput {
    create?: Array<CityCreateWithoutVoucherSettingsInput>;
    connectOrCreate?: Array<CityCreateOrConnectWithoutVoucherSettingsInput>;
    upsert?: Array<CityUpsertWithWhereUniqueWithoutVoucherSettingsInput>;
    set?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<CityWhereUniqueInput, 'id'>>;
    update?: Array<CityUpdateWithWhereUniqueWithoutVoucherSettingsInput>;
    updateMany?: Array<CityUpdateManyWithWhereWithoutVoucherSettingsInput>;
    deleteMany?: Array<CityScalarWhereInput>;
}
export declare class CityUpdateOneRequiredWithoutDistrictsNestedInput {
    create?: InstanceType<typeof CityCreateWithoutDistrictsInput>;
    connectOrCreate?: InstanceType<typeof CityCreateOrConnectWithoutDistrictsInput>;
    upsert?: InstanceType<typeof CityUpsertWithoutDistrictsInput>;
    connect?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof CityUpdateToOneWithWhereWithoutDistrictsInput>;
}
export declare class CityUpdateToOneWithWhereWithoutDistrictsInput {
    where?: InstanceType<typeof CityWhereInput>;
    data: InstanceType<typeof CityUpdateWithoutDistrictsInput>;
}
export declare class CityUpdateWithWhereUniqueWithoutProvinceInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CityUpdateWithoutProvinceInput>;
}
export declare class CityUpdateWithWhereUniqueWithoutVoucherSettingsInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    data: InstanceType<typeof CityUpdateWithoutVoucherSettingsInput>;
}
export declare class CityUpdateWithoutDistrictsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    province?: InstanceType<typeof ProvinceUpdateOneRequiredWithoutCitiesNestedInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUpdateWithoutProvinceInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    districts?: InstanceType<typeof DistrictUpdateManyWithoutCityNestedInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUpdateWithoutVoucherSettingsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    province?: InstanceType<typeof ProvinceUpdateOneRequiredWithoutCitiesNestedInput>;
    districts?: InstanceType<typeof DistrictUpdateManyWithoutCityNestedInput>;
}
export declare class CityUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    province?: InstanceType<typeof ProvinceUpdateOneRequiredWithoutCitiesNestedInput>;
    districts?: InstanceType<typeof DistrictUpdateManyWithoutCityNestedInput>;
    voucherSettings?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToCitiesNestedInput>;
}
export declare class CityUpsertWithWhereUniqueWithoutProvinceInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CityUpdateWithoutProvinceInput>;
    create: InstanceType<typeof CityCreateWithoutProvinceInput>;
}
export declare class CityUpsertWithWhereUniqueWithoutVoucherSettingsInput {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    update: InstanceType<typeof CityUpdateWithoutVoucherSettingsInput>;
    create: InstanceType<typeof CityCreateWithoutVoucherSettingsInput>;
}
export declare class CityUpsertWithoutDistrictsInput {
    update: InstanceType<typeof CityUpdateWithoutDistrictsInput>;
    create: InstanceType<typeof CityCreateWithoutDistrictsInput>;
    where?: InstanceType<typeof CityWhereInput>;
}
export declare class CityWhereUniqueInput {
    id?: number;
    AND?: Array<CityWhereInput>;
    OR?: Array<CityWhereInput>;
    NOT?: Array<CityWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    provinceId?: InstanceType<typeof IntFilter>;
    province?: InstanceType<typeof ProvinceRelationFilter>;
    districts?: InstanceType<typeof DistrictListRelationFilter>;
    voucherSettings?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class CityWhereInput {
    AND?: Array<CityWhereInput>;
    OR?: Array<CityWhereInput>;
    NOT?: Array<CityWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    provinceId?: InstanceType<typeof IntFilter>;
    province?: InstanceType<typeof ProvinceRelationFilter>;
    districts?: InstanceType<typeof DistrictListRelationFilter>;
    voucherSettings?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class City {
    id: number;
    name: string;
    provinceId: number;
    province?: InstanceType<typeof Province>;
    districts?: Array<District>;
    voucherSettings?: Array<VoucherSetting>;
    _count?: InstanceType<typeof CityCount>;
}
export declare class CreateManyCityArgs {
    data: Array<CityCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneCityArgs {
    data: InstanceType<typeof CityCreateInput>;
}
export declare class DeleteManyCityArgs {
    where?: InstanceType<typeof CityWhereInput>;
}
export declare class DeleteOneCityArgs {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
}
export declare class FindFirstCityOrThrowArgs {
    where?: InstanceType<typeof CityWhereInput>;
    orderBy?: Array<CityOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CityScalarFieldEnum>;
}
export declare class FindFirstCityArgs {
    where?: InstanceType<typeof CityWhereInput>;
    orderBy?: Array<CityOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CityScalarFieldEnum>;
}
export declare class FindManyCityArgs {
    where?: InstanceType<typeof CityWhereInput>;
    orderBy?: Array<CityOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CityScalarFieldEnum>;
}
export declare class FindUniqueCityOrThrowArgs {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
}
export declare class FindUniqueCityArgs {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
}
export declare class UpdateManyCityArgs {
    data: InstanceType<typeof CityUpdateManyMutationInput>;
    where?: InstanceType<typeof CityWhereInput>;
}
export declare class UpdateOneCityArgs {
    data: InstanceType<typeof CityUpdateInput>;
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
}
export declare class UpsertOneCityArgs {
    where: Prisma.AtLeast<CityWhereUniqueInput, 'id'>;
    create: InstanceType<typeof CityCreateInput>;
    update: InstanceType<typeof CityUpdateInput>;
}
export declare class AggregateComplain {
    _count?: InstanceType<typeof ComplainCountAggregate>;
    _avg?: InstanceType<typeof ComplainAvgAggregate>;
    _sum?: InstanceType<typeof ComplainSumAggregate>;
    _min?: InstanceType<typeof ComplainMinAggregate>;
    _max?: InstanceType<typeof ComplainMaxAggregate>;
}
export declare class ComplainAggregateArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
    orderBy?: Array<ComplainOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ComplainCountAggregateInput>;
    _avg?: InstanceType<typeof ComplainAvgAggregateInput>;
    _sum?: InstanceType<typeof ComplainSumAggregateInput>;
    _min?: InstanceType<typeof ComplainMinAggregateInput>;
    _max?: InstanceType<typeof ComplainMaxAggregateInput>;
}
export declare class ComplainAvgAggregateInput {
    id?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class ComplainAvgAggregate {
    id?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class ComplainCountAggregateInput {
    id?: true;
    complain?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    _all?: true;
}
export declare class ComplainCountAggregate {
    id: number;
    complain: number;
    createdAt: number;
    updatedAt: number;
    serviceOrderId: number;
    platformOrderId: number;
    _all: number;
}
export declare class ComplainCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    complain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class ComplainCreateManyPlatformOrderInputEnvelope {
    data: Array<ComplainCreateManyPlatformOrderInput>;
    skipDuplicates?: boolean;
}
export declare class ComplainCreateManyPlatformOrderInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
}
export declare class ComplainCreateManyServiceOrderInputEnvelope {
    data: Array<ComplainCreateManyServiceOrderInput>;
    skipDuplicates?: boolean;
}
export declare class ComplainCreateManyServiceOrderInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    platformOrderId?: number;
}
export declare class ComplainCreateManyInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<ComplainCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
}
export declare class ComplainCreateNestedManyWithoutServiceOrderInput {
    create?: Array<ComplainCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
}
export declare class ComplainCreateOrConnectWithoutPlatformOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ComplainCreateWithoutPlatformOrderInput>;
}
export declare class ComplainCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ComplainCreateWithoutServiceOrderInput>;
}
export declare class ComplainCreateWithoutPlatformOrderInput {
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutComplainInput>;
}
export declare class ComplainCreateWithoutServiceOrderInput {
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutComplainInput>;
}
export declare class ComplainCreateInput {
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutComplainInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutComplainInput>;
}
export declare class ComplainGroupByArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
    orderBy?: Array<ComplainOrderByWithAggregationInput>;
    by: Array<keyof typeof ComplainScalarFieldEnum>;
    having?: InstanceType<typeof ComplainScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ComplainCountAggregateInput>;
    _avg?: InstanceType<typeof ComplainAvgAggregateInput>;
    _sum?: InstanceType<typeof ComplainSumAggregateInput>;
    _min?: InstanceType<typeof ComplainMinAggregateInput>;
    _max?: InstanceType<typeof ComplainMaxAggregateInput>;
}
export declare class ComplainGroupBy {
    id: number;
    complain: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
    _count?: InstanceType<typeof ComplainCountAggregate>;
    _avg?: InstanceType<typeof ComplainAvgAggregate>;
    _sum?: InstanceType<typeof ComplainSumAggregate>;
    _min?: InstanceType<typeof ComplainMinAggregate>;
    _max?: InstanceType<typeof ComplainMaxAggregate>;
}
export declare class ComplainListRelationFilter {
    every?: InstanceType<typeof ComplainWhereInput>;
    some?: InstanceType<typeof ComplainWhereInput>;
    none?: InstanceType<typeof ComplainWhereInput>;
}
export declare class ComplainMaxAggregateInput {
    id?: true;
    complain?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class ComplainMaxAggregate {
    id?: number;
    complain?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    complain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class ComplainMinAggregateInput {
    id?: true;
    complain?: true;
    createdAt?: true;
    updatedAt?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class ComplainMinAggregate {
    id?: number;
    complain?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    complain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class ComplainOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class ComplainOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    complain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof ComplainCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ComplainAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ComplainMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ComplainMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ComplainSumOrderByAggregateInput>;
}
export declare class ComplainOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    complain?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderOrderByWithRelationInput>;
    platformOrder?: InstanceType<typeof PlatformOrderOrderByWithRelationInput>;
}
export declare class ComplainScalarWhereWithAggregatesInput {
    AND?: Array<ComplainScalarWhereWithAggregatesInput>;
    OR?: Array<ComplainScalarWhereWithAggregatesInput>;
    NOT?: Array<ComplainScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    complain?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    platformOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class ComplainScalarWhereInput {
    AND?: Array<ComplainScalarWhereInput>;
    OR?: Array<ComplainScalarWhereInput>;
    NOT?: Array<ComplainScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    complain?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
}
export declare class ComplainSumAggregateInput {
    id?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class ComplainSumAggregate {
    id?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<ComplainCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
}
export declare class ComplainUncheckedCreateNestedManyWithoutServiceOrderInput {
    create?: Array<ComplainCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
}
export declare class ComplainUncheckedCreateWithoutPlatformOrderInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
}
export declare class ComplainUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    platformOrderId?: number;
}
export declare class ComplainUncheckedCreateInput {
    id?: number;
    complain: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<ComplainCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<ComplainUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    update?: Array<ComplainUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<ComplainUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<ComplainScalarWhereInput>;
}
export declare class ComplainUncheckedUpdateManyWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<ComplainCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<ComplainUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    update?: Array<ComplainUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<ComplainUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<ComplainScalarWhereInput>;
}
export declare class ComplainUncheckedUpdateManyWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUncheckedUpdateWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ComplainUpdateManyMutationInput {
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ComplainUpdateManyWithWhereWithoutPlatformOrderInput {
    where: InstanceType<typeof ComplainScalarWhereInput>;
    data: InstanceType<typeof ComplainUpdateManyMutationInput>;
}
export declare class ComplainUpdateManyWithWhereWithoutServiceOrderInput {
    where: InstanceType<typeof ComplainScalarWhereInput>;
    data: InstanceType<typeof ComplainUpdateManyMutationInput>;
}
export declare class ComplainUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<ComplainCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<ComplainUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    update?: Array<ComplainUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<ComplainUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<ComplainScalarWhereInput>;
}
export declare class ComplainUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<ComplainCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<ComplainCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<ComplainUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof ComplainCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>>;
    update?: Array<ComplainUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<ComplainUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<ComplainScalarWhereInput>;
}
export declare class ComplainUpdateWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ComplainUpdateWithoutPlatformOrderInput>;
}
export declare class ComplainUpdateWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ComplainUpdateWithoutServiceOrderInput>;
}
export declare class ComplainUpdateWithoutPlatformOrderInput {
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutComplainNestedInput>;
}
export declare class ComplainUpdateWithoutServiceOrderInput {
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutComplainNestedInput>;
}
export declare class ComplainUpdateInput {
    complain?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutComplainNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutComplainNestedInput>;
}
export declare class ComplainUpsertWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ComplainUpdateWithoutPlatformOrderInput>;
    create: InstanceType<typeof ComplainCreateWithoutPlatformOrderInput>;
}
export declare class ComplainUpsertWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ComplainUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof ComplainCreateWithoutServiceOrderInput>;
}
export declare class ComplainWhereUniqueInput {
    id?: number;
    AND?: Array<ComplainWhereInput>;
    OR?: Array<ComplainWhereInput>;
    NOT?: Array<ComplainWhereInput>;
    complain?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
}
export declare class ComplainWhereInput {
    AND?: Array<ComplainWhereInput>;
    OR?: Array<ComplainWhereInput>;
    NOT?: Array<ComplainWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    complain?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
}
export declare class Complain {
    id: number;
    complain: string;
    createdAt: Date;
    updatedAt: Date;
    serviceOrderId: number | null;
    platformOrderId: number | null;
    serviceOrder?: InstanceType<typeof ServiceOrder> | null;
    platformOrder?: InstanceType<typeof PlatformOrder> | null;
}
export declare class CreateManyComplainArgs {
    data: Array<ComplainCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneComplainArgs {
    data: InstanceType<typeof ComplainCreateInput>;
}
export declare class DeleteManyComplainArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
}
export declare class DeleteOneComplainArgs {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
}
export declare class FindFirstComplainOrThrowArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
    orderBy?: Array<ComplainOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ComplainScalarFieldEnum>;
}
export declare class FindFirstComplainArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
    orderBy?: Array<ComplainOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ComplainScalarFieldEnum>;
}
export declare class FindManyComplainArgs {
    where?: InstanceType<typeof ComplainWhereInput>;
    orderBy?: Array<ComplainOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ComplainScalarFieldEnum>;
}
export declare class FindUniqueComplainOrThrowArgs {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
}
export declare class FindUniqueComplainArgs {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
}
export declare class UpdateManyComplainArgs {
    data: InstanceType<typeof ComplainUpdateManyMutationInput>;
    where?: InstanceType<typeof ComplainWhereInput>;
}
export declare class UpdateOneComplainArgs {
    data: InstanceType<typeof ComplainUpdateInput>;
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
}
export declare class UpsertOneComplainArgs {
    where: Prisma.AtLeast<ComplainWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ComplainCreateInput>;
    update: InstanceType<typeof ComplainUpdateInput>;
}
export declare class AggregateCreditCard {
    _count?: InstanceType<typeof CreditCardCountAggregate>;
    _avg?: InstanceType<typeof CreditCardAvgAggregate>;
    _sum?: InstanceType<typeof CreditCardSumAggregate>;
    _min?: InstanceType<typeof CreditCardMinAggregate>;
    _max?: InstanceType<typeof CreditCardMaxAggregate>;
}
export declare class CreateManyCreditCardArgs {
    data: Array<CreditCardCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneCreditCardArgs {
    data: InstanceType<typeof CreditCardCreateInput>;
}
export declare class CreditCardAggregateArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
    orderBy?: Array<CreditCardOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CreditCardCountAggregateInput>;
    _avg?: InstanceType<typeof CreditCardAvgAggregateInput>;
    _sum?: InstanceType<typeof CreditCardSumAggregateInput>;
    _min?: InstanceType<typeof CreditCardMinAggregateInput>;
    _max?: InstanceType<typeof CreditCardMaxAggregateInput>;
}
export declare class CreditCardAvgAggregateInput {
    id?: true;
    expMonth?: true;
    expYear?: true;
}
export declare class CreditCardAvgAggregate {
    id?: number;
    expMonth?: number;
    expYear?: number;
}
export declare class CreditCardAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
}
export declare class CreditCardCountAggregateInput {
    id?: true;
    isAccepted?: true;
    lastChecked?: true;
    cardHolderName?: true;
    customerId?: true;
    ownerId?: true;
    cardNumber?: true;
    expMonth?: true;
    expYear?: true;
    cvv?: true;
    createdAt?: true;
    updatedAt?: true;
    _all?: true;
}
export declare class CreditCardCountAggregate {
    id: number;
    isAccepted: number;
    lastChecked: number;
    cardHolderName: number;
    customerId: number;
    ownerId: number;
    cardNumber: number;
    expMonth: number;
    expYear: number;
    cvv: number;
    createdAt: number;
    updatedAt: number;
    _all: number;
}
export declare class CreditCardCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    isAccepted?: keyof typeof SortOrder;
    lastChecked?: keyof typeof SortOrder;
    cardHolderName?: keyof typeof SortOrder;
    customerId?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    cardNumber?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
    cvv?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class CreditCardCreateManyCustomerInputEnvelope {
    data: Array<CreditCardCreateManyCustomerInput>;
    skipDuplicates?: boolean;
}
export declare class CreditCardCreateManyCustomerInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    ownerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardCreateManyOwnerInputEnvelope {
    data: Array<CreditCardCreateManyOwnerInput>;
    skipDuplicates?: boolean;
}
export declare class CreditCardCreateManyOwnerInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    customerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardCreateManyInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    customerId?: string;
    ownerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardCreateNestedManyWithoutCustomerInput {
    create?: Array<CreditCardCreateWithoutCustomerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutCustomerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyCustomerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
}
export declare class CreditCardCreateNestedManyWithoutOwnerInput {
    create?: Array<CreditCardCreateWithoutOwnerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutOwnerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyOwnerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
}
export declare class CreditCardCreateOrConnectWithoutCustomerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    create: InstanceType<typeof CreditCardCreateWithoutCustomerInput>;
}
export declare class CreditCardCreateOrConnectWithoutOwnerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    create: InstanceType<typeof CreditCardCreateWithoutOwnerInput>;
}
export declare class CreditCardCreateWithoutCustomerInput {
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    owner?: InstanceType<typeof OwnerCreateNestedOneWithoutCreditCardInput>;
}
export declare class CreditCardCreateWithoutOwnerInput {
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    customer?: InstanceType<typeof CustomerCreateNestedOneWithoutCreditCardsInput>;
}
export declare class CreditCardCreateInput {
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    customer?: InstanceType<typeof CustomerCreateNestedOneWithoutCreditCardsInput>;
    owner?: InstanceType<typeof OwnerCreateNestedOneWithoutCreditCardInput>;
}
export declare class CreditCardGroupByArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
    orderBy?: Array<CreditCardOrderByWithAggregationInput>;
    by: Array<keyof typeof CreditCardScalarFieldEnum>;
    having?: InstanceType<typeof CreditCardScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CreditCardCountAggregateInput>;
    _avg?: InstanceType<typeof CreditCardAvgAggregateInput>;
    _sum?: InstanceType<typeof CreditCardSumAggregateInput>;
    _min?: InstanceType<typeof CreditCardMinAggregateInput>;
    _max?: InstanceType<typeof CreditCardMaxAggregateInput>;
}
export declare class CreditCardGroupBy {
    id: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    customerId?: string;
    ownerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    _count?: InstanceType<typeof CreditCardCountAggregate>;
    _avg?: InstanceType<typeof CreditCardAvgAggregate>;
    _sum?: InstanceType<typeof CreditCardSumAggregate>;
    _min?: InstanceType<typeof CreditCardMinAggregate>;
    _max?: InstanceType<typeof CreditCardMaxAggregate>;
}
export declare class CreditCardListRelationFilter {
    every?: InstanceType<typeof CreditCardWhereInput>;
    some?: InstanceType<typeof CreditCardWhereInput>;
    none?: InstanceType<typeof CreditCardWhereInput>;
}
export declare class CreditCardMaxAggregateInput {
    id?: true;
    isAccepted?: true;
    lastChecked?: true;
    cardHolderName?: true;
    customerId?: true;
    ownerId?: true;
    cardNumber?: true;
    expMonth?: true;
    expYear?: true;
    cvv?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class CreditCardMaxAggregate {
    id?: number;
    isAccepted?: boolean;
    lastChecked?: Date | string;
    cardHolderName?: string;
    customerId?: string;
    ownerId?: string;
    cardNumber?: string;
    expMonth?: number;
    expYear?: number;
    cvv?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    isAccepted?: keyof typeof SortOrder;
    lastChecked?: keyof typeof SortOrder;
    cardHolderName?: keyof typeof SortOrder;
    customerId?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    cardNumber?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
    cvv?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class CreditCardMinAggregateInput {
    id?: true;
    isAccepted?: true;
    lastChecked?: true;
    cardHolderName?: true;
    customerId?: true;
    ownerId?: true;
    cardNumber?: true;
    expMonth?: true;
    expYear?: true;
    cvv?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class CreditCardMinAggregate {
    id?: number;
    isAccepted?: boolean;
    lastChecked?: Date | string;
    cardHolderName?: string;
    customerId?: string;
    ownerId?: string;
    cardNumber?: string;
    expMonth?: number;
    expYear?: number;
    cvv?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    isAccepted?: keyof typeof SortOrder;
    lastChecked?: keyof typeof SortOrder;
    cardHolderName?: keyof typeof SortOrder;
    customerId?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    cardNumber?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
    cvv?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class CreditCardOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class CreditCardOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    isAccepted?: keyof typeof SortOrder;
    lastChecked?: InstanceType<typeof SortOrderInput>;
    cardHolderName?: keyof typeof SortOrder;
    customerId?: InstanceType<typeof SortOrderInput>;
    ownerId?: InstanceType<typeof SortOrderInput>;
    cardNumber?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
    cvv?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    _count?: InstanceType<typeof CreditCardCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof CreditCardAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof CreditCardMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof CreditCardMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof CreditCardSumOrderByAggregateInput>;
}
export declare class CreditCardOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    isAccepted?: keyof typeof SortOrder;
    lastChecked?: InstanceType<typeof SortOrderInput>;
    cardHolderName?: keyof typeof SortOrder;
    customerId?: InstanceType<typeof SortOrderInput>;
    ownerId?: InstanceType<typeof SortOrderInput>;
    cardNumber?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
    cvv?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    customer?: InstanceType<typeof CustomerOrderByWithRelationInput>;
    owner?: InstanceType<typeof OwnerOrderByWithRelationInput>;
}
export declare class CreditCardScalarWhereWithAggregatesInput {
    AND?: Array<CreditCardScalarWhereWithAggregatesInput>;
    OR?: Array<CreditCardScalarWhereWithAggregatesInput>;
    NOT?: Array<CreditCardScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    isAccepted?: InstanceType<typeof BoolWithAggregatesFilter>;
    lastChecked?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    cardHolderName?: InstanceType<typeof StringWithAggregatesFilter>;
    customerId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    ownerId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    cardNumber?: InstanceType<typeof StringWithAggregatesFilter>;
    expMonth?: InstanceType<typeof IntWithAggregatesFilter>;
    expYear?: InstanceType<typeof IntWithAggregatesFilter>;
    cvv?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}
export declare class CreditCardScalarWhereInput {
    AND?: Array<CreditCardScalarWhereInput>;
    OR?: Array<CreditCardScalarWhereInput>;
    NOT?: Array<CreditCardScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    isAccepted?: InstanceType<typeof BoolFilter>;
    lastChecked?: InstanceType<typeof DateTimeNullableFilter>;
    cardHolderName?: InstanceType<typeof StringFilter>;
    customerId?: InstanceType<typeof StringNullableFilter>;
    ownerId?: InstanceType<typeof StringNullableFilter>;
    cardNumber?: InstanceType<typeof StringFilter>;
    expMonth?: InstanceType<typeof IntFilter>;
    expYear?: InstanceType<typeof IntFilter>;
    cvv?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}
export declare class CreditCardSumAggregateInput {
    id?: true;
    expMonth?: true;
    expYear?: true;
}
export declare class CreditCardSumAggregate {
    id?: number;
    expMonth?: number;
    expYear?: number;
}
export declare class CreditCardSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    expMonth?: keyof typeof SortOrder;
    expYear?: keyof typeof SortOrder;
}
export declare class CreditCardUncheckedCreateNestedManyWithoutCustomerInput {
    create?: Array<CreditCardCreateWithoutCustomerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutCustomerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyCustomerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
}
export declare class CreditCardUncheckedCreateNestedManyWithoutOwnerInput {
    create?: Array<CreditCardCreateWithoutOwnerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutOwnerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyOwnerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
}
export declare class CreditCardUncheckedCreateWithoutCustomerInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    ownerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardUncheckedCreateWithoutOwnerInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    customerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardUncheckedCreateInput {
    id?: number;
    isAccepted: boolean;
    lastChecked?: Date | string;
    cardHolderName: string;
    customerId?: string;
    ownerId?: string;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class CreditCardUncheckedUpdateManyWithoutCustomerNestedInput {
    create?: Array<CreditCardCreateWithoutCustomerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutCustomerInput>;
    upsert?: Array<CreditCardUpsertWithWhereUniqueWithoutCustomerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyCustomerInputEnvelope>;
    set?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    disconnect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    delete?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    update?: Array<CreditCardUpdateWithWhereUniqueWithoutCustomerInput>;
    updateMany?: Array<CreditCardUpdateManyWithWhereWithoutCustomerInput>;
    deleteMany?: Array<CreditCardScalarWhereInput>;
}
export declare class CreditCardUncheckedUpdateManyWithoutCustomerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUncheckedUpdateManyWithoutOwnerNestedInput {
    create?: Array<CreditCardCreateWithoutOwnerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutOwnerInput>;
    upsert?: Array<CreditCardUpsertWithWhereUniqueWithoutOwnerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyOwnerInputEnvelope>;
    set?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    disconnect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    delete?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    update?: Array<CreditCardUpdateWithWhereUniqueWithoutOwnerInput>;
    updateMany?: Array<CreditCardUpdateManyWithWhereWithoutOwnerInput>;
    deleteMany?: Array<CreditCardScalarWhereInput>;
}
export declare class CreditCardUncheckedUpdateManyWithoutOwnerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUncheckedUpdateWithoutCustomerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUncheckedUpdateWithoutOwnerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUpdateManyMutationInput {
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class CreditCardUpdateManyWithWhereWithoutCustomerInput {
    where: InstanceType<typeof CreditCardScalarWhereInput>;
    data: InstanceType<typeof CreditCardUpdateManyMutationInput>;
}
export declare class CreditCardUpdateManyWithWhereWithoutOwnerInput {
    where: InstanceType<typeof CreditCardScalarWhereInput>;
    data: InstanceType<typeof CreditCardUpdateManyMutationInput>;
}
export declare class CreditCardUpdateManyWithoutCustomerNestedInput {
    create?: Array<CreditCardCreateWithoutCustomerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutCustomerInput>;
    upsert?: Array<CreditCardUpsertWithWhereUniqueWithoutCustomerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyCustomerInputEnvelope>;
    set?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    disconnect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    delete?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    update?: Array<CreditCardUpdateWithWhereUniqueWithoutCustomerInput>;
    updateMany?: Array<CreditCardUpdateManyWithWhereWithoutCustomerInput>;
    deleteMany?: Array<CreditCardScalarWhereInput>;
}
export declare class CreditCardUpdateManyWithoutOwnerNestedInput {
    create?: Array<CreditCardCreateWithoutOwnerInput>;
    connectOrCreate?: Array<CreditCardCreateOrConnectWithoutOwnerInput>;
    upsert?: Array<CreditCardUpsertWithWhereUniqueWithoutOwnerInput>;
    createMany?: InstanceType<typeof CreditCardCreateManyOwnerInputEnvelope>;
    set?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    disconnect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    delete?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    connect?: Array<Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>>;
    update?: Array<CreditCardUpdateWithWhereUniqueWithoutOwnerInput>;
    updateMany?: Array<CreditCardUpdateManyWithWhereWithoutOwnerInput>;
    deleteMany?: Array<CreditCardScalarWhereInput>;
}
export declare class CreditCardUpdateWithWhereUniqueWithoutCustomerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    data: InstanceType<typeof CreditCardUpdateWithoutCustomerInput>;
}
export declare class CreditCardUpdateWithWhereUniqueWithoutOwnerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    data: InstanceType<typeof CreditCardUpdateWithoutOwnerInput>;
}
export declare class CreditCardUpdateWithoutCustomerInput {
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneWithoutCreditCardNestedInput>;
}
export declare class CreditCardUpdateWithoutOwnerInput {
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    customer?: InstanceType<typeof CustomerUpdateOneWithoutCreditCardsNestedInput>;
}
export declare class CreditCardUpdateInput {
    isAccepted?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastChecked?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    cardHolderName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cardNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expMonth?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    expYear?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cvv?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    customer?: InstanceType<typeof CustomerUpdateOneWithoutCreditCardsNestedInput>;
    owner?: InstanceType<typeof OwnerUpdateOneWithoutCreditCardNestedInput>;
}
export declare class CreditCardUpsertWithWhereUniqueWithoutCustomerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    update: InstanceType<typeof CreditCardUpdateWithoutCustomerInput>;
    create: InstanceType<typeof CreditCardCreateWithoutCustomerInput>;
}
export declare class CreditCardUpsertWithWhereUniqueWithoutOwnerInput {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    update: InstanceType<typeof CreditCardUpdateWithoutOwnerInput>;
    create: InstanceType<typeof CreditCardCreateWithoutOwnerInput>;
}
export declare class CreditCardWhereUniqueInput {
    id?: number;
    cardNumber?: string;
    AND?: Array<CreditCardWhereInput>;
    OR?: Array<CreditCardWhereInput>;
    NOT?: Array<CreditCardWhereInput>;
    isAccepted?: InstanceType<typeof BoolFilter>;
    lastChecked?: InstanceType<typeof DateTimeNullableFilter>;
    cardHolderName?: InstanceType<typeof StringFilter>;
    customerId?: InstanceType<typeof StringNullableFilter>;
    ownerId?: InstanceType<typeof StringNullableFilter>;
    expMonth?: InstanceType<typeof IntFilter>;
    expYear?: InstanceType<typeof IntFilter>;
    cvv?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    customer?: InstanceType<typeof CustomerNullableRelationFilter>;
    owner?: InstanceType<typeof OwnerNullableRelationFilter>;
}
export declare class CreditCardWhereInput {
    AND?: Array<CreditCardWhereInput>;
    OR?: Array<CreditCardWhereInput>;
    NOT?: Array<CreditCardWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    isAccepted?: InstanceType<typeof BoolFilter>;
    lastChecked?: InstanceType<typeof DateTimeNullableFilter>;
    cardHolderName?: InstanceType<typeof StringFilter>;
    customerId?: InstanceType<typeof StringNullableFilter>;
    ownerId?: InstanceType<typeof StringNullableFilter>;
    cardNumber?: InstanceType<typeof StringFilter>;
    expMonth?: InstanceType<typeof IntFilter>;
    expYear?: InstanceType<typeof IntFilter>;
    cvv?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    customer?: InstanceType<typeof CustomerNullableRelationFilter>;
    owner?: InstanceType<typeof OwnerNullableRelationFilter>;
}
export declare class CreditCard {
    id: number;
    isAccepted: boolean;
    lastChecked: Date | null;
    cardHolderName: string;
    customerId: string | null;
    ownerId: string | null;
    cardNumber: string;
    expMonth: number;
    expYear: number;
    cvv: string;
    createdAt: Date;
    updatedAt: Date;
    customer?: InstanceType<typeof Customer> | null;
    owner?: InstanceType<typeof Owner> | null;
}
export declare class DeleteManyCreditCardArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
}
export declare class DeleteOneCreditCardArgs {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
}
export declare class FindFirstCreditCardOrThrowArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
    orderBy?: Array<CreditCardOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CreditCardScalarFieldEnum>;
}
export declare class FindFirstCreditCardArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
    orderBy?: Array<CreditCardOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CreditCardScalarFieldEnum>;
}
export declare class FindManyCreditCardArgs {
    where?: InstanceType<typeof CreditCardWhereInput>;
    orderBy?: Array<CreditCardOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CreditCardScalarFieldEnum>;
}
export declare class FindUniqueCreditCardOrThrowArgs {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
}
export declare class FindUniqueCreditCardArgs {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
}
export declare class UpdateManyCreditCardArgs {
    data: InstanceType<typeof CreditCardUpdateManyMutationInput>;
    where?: InstanceType<typeof CreditCardWhereInput>;
}
export declare class UpdateOneCreditCardArgs {
    data: InstanceType<typeof CreditCardUpdateInput>;
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
}
export declare class UpsertOneCreditCardArgs {
    where: Prisma.AtLeast<CreditCardWhereUniqueInput, 'id' | 'cardNumber'>;
    create: InstanceType<typeof CreditCardCreateInput>;
    update: InstanceType<typeof CreditCardUpdateInput>;
}
export declare class AggregateCustomer {
    _count?: InstanceType<typeof CustomerCountAggregate>;
    _min?: InstanceType<typeof CustomerMinAggregate>;
    _max?: InstanceType<typeof CustomerMaxAggregate>;
}
export declare class CreateManyCustomerArgs {
    data: Array<CustomerCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneCustomerArgs {
    data: InstanceType<typeof CustomerCreateInput>;
}
export declare class CustomerAggregateArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
    orderBy?: Array<CustomerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CustomerCountAggregateInput>;
    _min?: InstanceType<typeof CustomerMinAggregateInput>;
    _max?: InstanceType<typeof CustomerMaxAggregateInput>;
}
export declare class CustomerCountAggregateInput {
    userId?: true;
    createdAt?: true;
    updatedAt?: true;
    referralCode?: true;
    referredById?: true;
    _all?: true;
}
export declare class CustomerCountAggregate {
    userId: number;
    createdAt: number;
    updatedAt: number;
    referralCode: number;
    referredById: number;
    _all: number;
}
export declare class CustomerCountOrderByAggregateInput {
    userId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    referralCode?: keyof typeof SortOrder;
    referredById?: keyof typeof SortOrder;
}
export declare class CustomerCount {
    orders?: number;
    favoriteOutletes?: number;
    reviews?: number;
    creditCards?: number;
    referredUsers?: number;
    vouchers?: number;
}
export declare class CustomerCreateManyReferredByInputEnvelope {
    data: Array<CustomerCreateManyReferredByInput>;
    skipDuplicates?: boolean;
}
export declare class CustomerCreateManyReferredByInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
}
export declare class CustomerCreateManyInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
}
export declare class CustomerCreateNestedManyWithoutFavoriteOutletesInput {
    create?: Array<CustomerCreateWithoutFavoriteOutletesInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutFavoriteOutletesInput>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerCreateNestedManyWithoutReferredByInput {
    create?: Array<CustomerCreateWithoutReferredByInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutReferredByInput>;
    createMany?: InstanceType<typeof CustomerCreateManyReferredByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerCreateNestedManyWithoutVouchersInput {
    create?: Array<CustomerCreateWithoutVouchersInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutVouchersInput>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerCreateNestedOneWithoutCreditCardsInput {
    create?: InstanceType<typeof CustomerCreateWithoutCreditCardsInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutCreditCardsInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerCreateNestedOneWithoutOrdersInput {
    create?: InstanceType<typeof CustomerCreateWithoutOrdersInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutOrdersInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerCreateNestedOneWithoutReferredUsersInput {
    create?: InstanceType<typeof CustomerCreateWithoutReferredUsersInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutReferredUsersInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerCreateNestedOneWithoutReviewsInput {
    create?: InstanceType<typeof CustomerCreateWithoutReviewsInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutReviewsInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof CustomerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerCreateOrConnectWithoutCreditCardsInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutCreditCardsInput>;
}
export declare class CustomerCreateOrConnectWithoutFavoriteOutletesInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutFavoriteOutletesInput>;
}
export declare class CustomerCreateOrConnectWithoutOrdersInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutOrdersInput>;
}
export declare class CustomerCreateOrConnectWithoutReferredByInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutReferredByInput>;
}
export declare class CustomerCreateOrConnectWithoutReferredUsersInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutReferredUsersInput>;
}
export declare class CustomerCreateOrConnectWithoutReviewsInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutReviewsInput>;
}
export declare class CustomerCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutUserInput>;
}
export declare class CustomerCreateOrConnectWithoutVouchersInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateWithoutVouchersInput>;
}
export declare class CustomerCreateWithoutCreditCardsInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutFavoriteOutletesInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutOrdersInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutReferredByInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutReferredUsersInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutReviewsInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutUserInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerCreateWithoutVouchersInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
}
export declare class CustomerCreateInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    user: InstanceType<typeof UserCreateNestedOneWithoutCustomerInfoInput>;
    referredBy?: InstanceType<typeof CustomerCreateNestedOneWithoutReferredUsersInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerGroupByArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
    orderBy?: Array<CustomerOrderByWithAggregationInput>;
    by: Array<keyof typeof CustomerScalarFieldEnum>;
    having?: InstanceType<typeof CustomerScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof CustomerCountAggregateInput>;
    _min?: InstanceType<typeof CustomerMinAggregateInput>;
    _max?: InstanceType<typeof CustomerMaxAggregateInput>;
}
export declare class CustomerGroupBy {
    userId: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    _count?: InstanceType<typeof CustomerCountAggregate>;
    _min?: InstanceType<typeof CustomerMinAggregate>;
    _max?: InstanceType<typeof CustomerMaxAggregate>;
}
export declare class CustomerListRelationFilter {
    every?: InstanceType<typeof CustomerWhereInput>;
    some?: InstanceType<typeof CustomerWhereInput>;
    none?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerMaxAggregateInput {
    userId?: true;
    createdAt?: true;
    updatedAt?: true;
    referralCode?: true;
    referredById?: true;
}
export declare class CustomerMaxAggregate {
    userId?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    referralCode?: string;
    referredById?: string;
}
export declare class CustomerMaxOrderByAggregateInput {
    userId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    referralCode?: keyof typeof SortOrder;
    referredById?: keyof typeof SortOrder;
}
export declare class CustomerMinAggregateInput {
    userId?: true;
    createdAt?: true;
    updatedAt?: true;
    referralCode?: true;
    referredById?: true;
}
export declare class CustomerMinAggregate {
    userId?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    referralCode?: string;
    referredById?: string;
}
export declare class CustomerMinOrderByAggregateInput {
    userId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    referralCode?: keyof typeof SortOrder;
    referredById?: keyof typeof SortOrder;
}
export declare class CustomerNullableRelationFilter {
    is?: InstanceType<typeof CustomerWhereInput>;
    isNot?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class CustomerOrderByWithAggregationInput {
    userId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    referralCode?: keyof typeof SortOrder;
    referredById?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof CustomerCountOrderByAggregateInput>;
    _max?: InstanceType<typeof CustomerMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof CustomerMinOrderByAggregateInput>;
}
export declare class CustomerOrderByWithRelationInput {
    userId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    referralCode?: keyof typeof SortOrder;
    referredById?: InstanceType<typeof SortOrderInput>;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
    referredBy?: InstanceType<typeof CustomerOrderByWithRelationInput>;
    orders?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
    favoriteOutletes?: InstanceType<typeof OutletOrderByRelationAggregateInput>;
    reviews?: InstanceType<typeof ReviewOrderByRelationAggregateInput>;
    creditCards?: InstanceType<typeof CreditCardOrderByRelationAggregateInput>;
    referredUsers?: InstanceType<typeof CustomerOrderByRelationAggregateInput>;
    vouchers?: InstanceType<typeof OutletVoucherOrderByRelationAggregateInput>;
}
export declare class CustomerRelationFilter {
    is?: InstanceType<typeof CustomerWhereInput>;
    isNot?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerScalarWhereWithAggregatesInput {
    AND?: Array<CustomerScalarWhereWithAggregatesInput>;
    OR?: Array<CustomerScalarWhereWithAggregatesInput>;
    NOT?: Array<CustomerScalarWhereWithAggregatesInput>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    referralCode?: InstanceType<typeof StringWithAggregatesFilter>;
    referredById?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}
export declare class CustomerScalarWhereInput {
    AND?: Array<CustomerScalarWhereInput>;
    OR?: Array<CustomerScalarWhereInput>;
    NOT?: Array<CustomerScalarWhereInput>;
    userId?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    referralCode?: InstanceType<typeof StringFilter>;
    referredById?: InstanceType<typeof StringNullableFilter>;
}
export declare class CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput {
    create?: Array<CustomerCreateWithoutFavoriteOutletesInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutFavoriteOutletesInput>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerUncheckedCreateNestedManyWithoutReferredByInput {
    create?: Array<CustomerCreateWithoutReferredByInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutReferredByInput>;
    createMany?: InstanceType<typeof CustomerCreateManyReferredByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerUncheckedCreateNestedManyWithoutVouchersInput {
    create?: Array<CustomerCreateWithoutVouchersInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutVouchersInput>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
}
export declare class CustomerUncheckedCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof CustomerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class CustomerUncheckedCreateWithoutCreditCardsInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutFavoriteOutletesInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutOrdersInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutReferredByInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutReferredUsersInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutReviewsInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutUserInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedCreateWithoutVouchersInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
}
export declare class CustomerUncheckedCreateInput {
    userId: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    referralCode: string;
    referredById?: string;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutCustomersInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutReviewByInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutCustomerInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutReferredByInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput {
    create?: Array<CustomerCreateWithoutFavoriteOutletesInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutFavoriteOutletesInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutFavoriteOutletesInput>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutFavoriteOutletesInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutFavoriteOutletesInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutFavoriteOutletesInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutReferredByNestedInput {
    create?: Array<CustomerCreateWithoutReferredByInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutReferredByInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutReferredByInput>;
    createMany?: InstanceType<typeof CustomerCreateManyReferredByInputEnvelope>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutReferredByInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutReferredByInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutReferredByInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutVouchersNestedInput {
    create?: Array<CustomerCreateWithoutVouchersInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutVouchersInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutVouchersInput>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutVouchersInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutVouchersInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUncheckedUpdateManyWithoutVouchersInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class CustomerUncheckedUpdateManyInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class CustomerUncheckedUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof CustomerWhereInput>;
    delete?: InstanceType<typeof CustomerWhereInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutUserInput>;
}
export declare class CustomerUncheckedUpdateWithoutCreditCardsInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutFavoriteOutletesInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutOrdersInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutReferredByInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutReferredUsersInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutReviewsInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutUserInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUncheckedUpdateWithoutVouchersInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
}
export declare class CustomerUncheckedUpdateInput {
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class CustomerUpdateManyWithWhereWithoutFavoriteOutletesInput {
    where: InstanceType<typeof CustomerScalarWhereInput>;
    data: InstanceType<typeof CustomerUpdateManyMutationInput>;
}
export declare class CustomerUpdateManyWithWhereWithoutReferredByInput {
    where: InstanceType<typeof CustomerScalarWhereInput>;
    data: InstanceType<typeof CustomerUpdateManyMutationInput>;
}
export declare class CustomerUpdateManyWithWhereWithoutVouchersInput {
    where: InstanceType<typeof CustomerScalarWhereInput>;
    data: InstanceType<typeof CustomerUpdateManyMutationInput>;
}
export declare class CustomerUpdateManyWithoutFavoriteOutletesNestedInput {
    create?: Array<CustomerCreateWithoutFavoriteOutletesInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutFavoriteOutletesInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutFavoriteOutletesInput>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutFavoriteOutletesInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutFavoriteOutletesInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUpdateManyWithoutReferredByNestedInput {
    create?: Array<CustomerCreateWithoutReferredByInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutReferredByInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutReferredByInput>;
    createMany?: InstanceType<typeof CustomerCreateManyReferredByInputEnvelope>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutReferredByInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutReferredByInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUpdateManyWithoutVouchersNestedInput {
    create?: Array<CustomerCreateWithoutVouchersInput>;
    connectOrCreate?: Array<CustomerCreateOrConnectWithoutVouchersInput>;
    upsert?: Array<CustomerUpsertWithWhereUniqueWithoutVouchersInput>;
    set?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    disconnect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    delete?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    connect?: Array<Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>>;
    update?: Array<CustomerUpdateWithWhereUniqueWithoutVouchersInput>;
    updateMany?: Array<CustomerUpdateManyWithWhereWithoutVouchersInput>;
    deleteMany?: Array<CustomerScalarWhereInput>;
}
export declare class CustomerUpdateOneRequiredWithoutOrdersNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutOrdersInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutOrdersInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutOrdersInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutOrdersInput>;
}
export declare class CustomerUpdateOneRequiredWithoutReviewsNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutReviewsInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutReviewsInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutReviewsInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutReviewsInput>;
}
export declare class CustomerUpdateOneWithoutCreditCardsNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutCreditCardsInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutCreditCardsInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutCreditCardsInput>;
    disconnect?: InstanceType<typeof CustomerWhereInput>;
    delete?: InstanceType<typeof CustomerWhereInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutCreditCardsInput>;
}
export declare class CustomerUpdateOneWithoutReferredUsersNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutReferredUsersInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutReferredUsersInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutReferredUsersInput>;
    disconnect?: InstanceType<typeof CustomerWhereInput>;
    delete?: InstanceType<typeof CustomerWhereInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutReferredUsersInput>;
}
export declare class CustomerUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof CustomerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof CustomerCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof CustomerUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof CustomerWhereInput>;
    delete?: InstanceType<typeof CustomerWhereInput>;
    connect?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update?: InstanceType<typeof CustomerUpdateToOneWithWhereWithoutUserInput>;
}
export declare class CustomerUpdateToOneWithWhereWithoutCreditCardsInput {
    where?: InstanceType<typeof CustomerWhereInput>;
    data: InstanceType<typeof CustomerUpdateWithoutCreditCardsInput>;
}
export declare class CustomerUpdateToOneWithWhereWithoutOrdersInput {
    where?: InstanceType<typeof CustomerWhereInput>;
    data: InstanceType<typeof CustomerUpdateWithoutOrdersInput>;
}
export declare class CustomerUpdateToOneWithWhereWithoutReferredUsersInput {
    where?: InstanceType<typeof CustomerWhereInput>;
    data: InstanceType<typeof CustomerUpdateWithoutReferredUsersInput>;
}
export declare class CustomerUpdateToOneWithWhereWithoutReviewsInput {
    where?: InstanceType<typeof CustomerWhereInput>;
    data: InstanceType<typeof CustomerUpdateWithoutReviewsInput>;
}
export declare class CustomerUpdateToOneWithWhereWithoutUserInput {
    where?: InstanceType<typeof CustomerWhereInput>;
    data: InstanceType<typeof CustomerUpdateWithoutUserInput>;
}
export declare class CustomerUpdateWithWhereUniqueWithoutFavoriteOutletesInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    data: InstanceType<typeof CustomerUpdateWithoutFavoriteOutletesInput>;
}
export declare class CustomerUpdateWithWhereUniqueWithoutReferredByInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    data: InstanceType<typeof CustomerUpdateWithoutReferredByInput>;
}
export declare class CustomerUpdateWithWhereUniqueWithoutVouchersInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    data: InstanceType<typeof CustomerUpdateWithoutVouchersInput>;
}
export declare class CustomerUpdateWithoutCreditCardsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutFavoriteOutletesInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutOrdersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutReferredByInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutReferredUsersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutReviewsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutUserInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpdateWithoutVouchersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
}
export declare class CustomerUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    referralCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutCustomerInfoNestedInput>;
    referredBy?: InstanceType<typeof CustomerUpdateOneWithoutReferredUsersNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOrderByNestedInput>;
    favoriteOutletes?: InstanceType<typeof OutletUpdateManyWithoutCustomersNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutReviewByNestedInput>;
    creditCards?: InstanceType<typeof CreditCardUpdateManyWithoutCustomerNestedInput>;
    referredUsers?: InstanceType<typeof CustomerUpdateManyWithoutReferredByNestedInput>;
    vouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutCustomersNestedInput>;
}
export declare class CustomerUpsertWithWhereUniqueWithoutFavoriteOutletesInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update: InstanceType<typeof CustomerUpdateWithoutFavoriteOutletesInput>;
    create: InstanceType<typeof CustomerCreateWithoutFavoriteOutletesInput>;
}
export declare class CustomerUpsertWithWhereUniqueWithoutReferredByInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update: InstanceType<typeof CustomerUpdateWithoutReferredByInput>;
    create: InstanceType<typeof CustomerCreateWithoutReferredByInput>;
}
export declare class CustomerUpsertWithWhereUniqueWithoutVouchersInput {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    update: InstanceType<typeof CustomerUpdateWithoutVouchersInput>;
    create: InstanceType<typeof CustomerCreateWithoutVouchersInput>;
}
export declare class CustomerUpsertWithoutCreditCardsInput {
    update: InstanceType<typeof CustomerUpdateWithoutCreditCardsInput>;
    create: InstanceType<typeof CustomerCreateWithoutCreditCardsInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerUpsertWithoutOrdersInput {
    update: InstanceType<typeof CustomerUpdateWithoutOrdersInput>;
    create: InstanceType<typeof CustomerCreateWithoutOrdersInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerUpsertWithoutReferredUsersInput {
    update: InstanceType<typeof CustomerUpdateWithoutReferredUsersInput>;
    create: InstanceType<typeof CustomerCreateWithoutReferredUsersInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerUpsertWithoutReviewsInput {
    update: InstanceType<typeof CustomerUpdateWithoutReviewsInput>;
    create: InstanceType<typeof CustomerCreateWithoutReviewsInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerUpsertWithoutUserInput {
    update: InstanceType<typeof CustomerUpdateWithoutUserInput>;
    create: InstanceType<typeof CustomerCreateWithoutUserInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class CustomerWhereUniqueInput {
    userId?: string;
    referralCode?: string;
    AND?: Array<CustomerWhereInput>;
    OR?: Array<CustomerWhereInput>;
    NOT?: Array<CustomerWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    referredById?: InstanceType<typeof StringNullableFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    referredBy?: InstanceType<typeof CustomerNullableRelationFilter>;
    orders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    favoriteOutletes?: InstanceType<typeof OutletListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    creditCards?: InstanceType<typeof CreditCardListRelationFilter>;
    referredUsers?: InstanceType<typeof CustomerListRelationFilter>;
    vouchers?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class CustomerWhereInput {
    AND?: Array<CustomerWhereInput>;
    OR?: Array<CustomerWhereInput>;
    NOT?: Array<CustomerWhereInput>;
    userId?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    referralCode?: InstanceType<typeof StringFilter>;
    referredById?: InstanceType<typeof StringNullableFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    referredBy?: InstanceType<typeof CustomerNullableRelationFilter>;
    orders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    favoriteOutletes?: InstanceType<typeof OutletListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    creditCards?: InstanceType<typeof CreditCardListRelationFilter>;
    referredUsers?: InstanceType<typeof CustomerListRelationFilter>;
    vouchers?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class Customer {
    userId: string;
    createdAt: Date;
    updatedAt: Date;
    referralCode: string;
    referredById: string | null;
    user?: InstanceType<typeof User>;
    referredBy?: InstanceType<typeof Customer> | null;
    orders?: Array<ServiceOrder>;
    favoriteOutletes?: Array<Outlet>;
    reviews?: Array<Review>;
    creditCards?: Array<CreditCard>;
    referredUsers?: Array<Customer>;
    vouchers?: Array<OutletVoucher>;
    _count?: InstanceType<typeof CustomerCount>;
}
export declare class DeleteManyCustomerArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class DeleteOneCustomerArgs {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class FindFirstCustomerOrThrowArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
    orderBy?: Array<CustomerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CustomerScalarFieldEnum>;
}
export declare class FindFirstCustomerArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
    orderBy?: Array<CustomerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CustomerScalarFieldEnum>;
}
export declare class FindManyCustomerArgs {
    where?: InstanceType<typeof CustomerWhereInput>;
    orderBy?: Array<CustomerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof CustomerScalarFieldEnum>;
}
export declare class FindUniqueCustomerOrThrowArgs {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class FindUniqueCustomerArgs {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class UpdateManyCustomerArgs {
    data: InstanceType<typeof CustomerUpdateManyMutationInput>;
    where?: InstanceType<typeof CustomerWhereInput>;
}
export declare class UpdateOneCustomerArgs {
    data: InstanceType<typeof CustomerUpdateInput>;
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
}
export declare class UpsertOneCustomerArgs {
    where: Prisma.AtLeast<CustomerWhereUniqueInput, 'userId' | 'referralCode'>;
    create: InstanceType<typeof CustomerCreateInput>;
    update: InstanceType<typeof CustomerUpdateInput>;
}
export declare class AggregateDelivery {
    _count?: InstanceType<typeof DeliveryCountAggregate>;
    _avg?: InstanceType<typeof DeliveryAvgAggregate>;
    _sum?: InstanceType<typeof DeliverySumAggregate>;
    _min?: InstanceType<typeof DeliveryMinAggregate>;
    _max?: InstanceType<typeof DeliveryMaxAggregate>;
}
export declare class CreateManyDeliveryArgs {
    data: Array<DeliveryCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneDeliveryArgs {
    data: InstanceType<typeof DeliveryCreateInput>;
}
export declare class DeleteManyDeliveryArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeleteOneDeliveryArgs {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class DeliveryAggregateArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
    orderBy?: Array<DeliveryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliverySumAggregateInput>;
    _min?: InstanceType<typeof DeliveryMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryMaxAggregateInput>;
}
export declare class DeliveryAvgAggregateInput {
    id?: true;
    deliveryStatusId?: true;
}
export declare class DeliveryAvgAggregate {
    id?: number;
    deliveryStatusId?: number;
}
export declare class DeliveryAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
}
export declare class DeliveryCountAggregateInput {
    id?: true;
    pickupTime?: true;
    deliveryTime?: true;
    pickupMessage?: true;
    deliveryMessage?: true;
    instructions?: true;
    createdAt?: true;
    updatedAt?: true;
    deliveryStatusId?: true;
    assignedDriverId?: true;
    _all?: true;
}
export declare class DeliveryCountAggregate {
    id: number;
    pickupTime: number;
    deliveryTime: number;
    pickupMessage: number;
    deliveryMessage: number;
    instructions: number;
    createdAt: number;
    updatedAt: number;
    deliveryStatusId: number;
    assignedDriverId: number;
    _all: number;
}
export declare class DeliveryCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    pickupTime?: keyof typeof SortOrder;
    deliveryTime?: keyof typeof SortOrder;
    pickupMessage?: keyof typeof SortOrder;
    deliveryMessage?: keyof typeof SortOrder;
    instructions?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
    assignedDriverId?: keyof typeof SortOrder;
}
export declare class DeliveryCount {
    ServiceOrder?: number;
    locationHistory?: number;
}
export declare class DeliveryCreateManyAssignedDriverInputEnvelope {
    data: Array<DeliveryCreateManyAssignedDriverInput>;
    skipDuplicates?: boolean;
}
export declare class DeliveryCreateManyAssignedDriverInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
}
export declare class DeliveryCreateManyStatusInputEnvelope {
    data: Array<DeliveryCreateManyStatusInput>;
    skipDuplicates?: boolean;
}
export declare class DeliveryCreateManyStatusInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    assignedDriverId?: string;
}
export declare class DeliveryCreateManyInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
    assignedDriverId?: string;
}
export declare class DeliveryCreateNestedManyWithoutAssignedDriverInput {
    create?: Array<DeliveryCreateWithoutAssignedDriverInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutAssignedDriverInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyAssignedDriverInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryCreateNestedManyWithoutStatusInput {
    create?: Array<DeliveryCreateWithoutStatusInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutStatusInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyStatusInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryCreateNestedOneWithoutLocationHistoryInput {
    create?: InstanceType<typeof DeliveryCreateWithoutLocationHistoryInput>;
    connectOrCreate?: InstanceType<typeof DeliveryCreateOrConnectWithoutLocationHistoryInput>;
    connect?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class DeliveryCreateNestedOneWithoutServiceOrderInput {
    create?: InstanceType<typeof DeliveryCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof DeliveryCreateOrConnectWithoutServiceOrderInput>;
    connect?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class DeliveryCreateOrConnectWithoutAssignedDriverInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryCreateWithoutAssignedDriverInput>;
}
export declare class DeliveryCreateOrConnectWithoutLocationHistoryInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryCreateWithoutLocationHistoryInput>;
}
export declare class DeliveryCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryCreateWithoutServiceOrderInput>;
}
export declare class DeliveryCreateOrConnectWithoutStatusInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryCreateWithoutStatusInput>;
}
export declare class DeliveryCreateWithoutAssignedDriverInput {
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: InstanceType<typeof DeliveryStatusCreateNestedOneWithoutDeliveryInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryCreateWithoutLocationHistoryInput {
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: InstanceType<typeof DeliveryStatusCreateNestedOneWithoutDeliveryInput>;
    assignedDriver?: InstanceType<typeof EmployeeCreateNestedOneWithoutDeliveriesInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryCreateWithoutServiceOrderInput {
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: InstanceType<typeof DeliveryStatusCreateNestedOneWithoutDeliveryInput>;
    assignedDriver?: InstanceType<typeof EmployeeCreateNestedOneWithoutDeliveriesInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryCreateWithoutStatusInput {
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    assignedDriver?: InstanceType<typeof EmployeeCreateNestedOneWithoutDeliveriesInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryCreateInput {
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: InstanceType<typeof DeliveryStatusCreateNestedOneWithoutDeliveryInput>;
    assignedDriver?: InstanceType<typeof EmployeeCreateNestedOneWithoutDeliveriesInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryGroupByArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
    orderBy?: Array<DeliveryOrderByWithAggregationInput>;
    by: Array<keyof typeof DeliveryScalarFieldEnum>;
    having?: InstanceType<typeof DeliveryScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliverySumAggregateInput>;
    _min?: InstanceType<typeof DeliveryMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryMaxAggregateInput>;
}
export declare class DeliveryGroupBy {
    id: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    deliveryStatusId: number;
    assignedDriverId?: string;
    _count?: InstanceType<typeof DeliveryCountAggregate>;
    _avg?: InstanceType<typeof DeliveryAvgAggregate>;
    _sum?: InstanceType<typeof DeliverySumAggregate>;
    _min?: InstanceType<typeof DeliveryMinAggregate>;
    _max?: InstanceType<typeof DeliveryMaxAggregate>;
}
export declare class DeliveryListRelationFilter {
    every?: InstanceType<typeof DeliveryWhereInput>;
    some?: InstanceType<typeof DeliveryWhereInput>;
    none?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeliveryMaxAggregateInput {
    id?: true;
    pickupTime?: true;
    deliveryTime?: true;
    pickupMessage?: true;
    deliveryMessage?: true;
    instructions?: true;
    createdAt?: true;
    updatedAt?: true;
    deliveryStatusId?: true;
    assignedDriverId?: true;
}
export declare class DeliveryMaxAggregate {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId?: number;
    assignedDriverId?: string;
}
export declare class DeliveryMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    pickupTime?: keyof typeof SortOrder;
    deliveryTime?: keyof typeof SortOrder;
    pickupMessage?: keyof typeof SortOrder;
    deliveryMessage?: keyof typeof SortOrder;
    instructions?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
    assignedDriverId?: keyof typeof SortOrder;
}
export declare class DeliveryMinAggregateInput {
    id?: true;
    pickupTime?: true;
    deliveryTime?: true;
    pickupMessage?: true;
    deliveryMessage?: true;
    instructions?: true;
    createdAt?: true;
    updatedAt?: true;
    deliveryStatusId?: true;
    assignedDriverId?: true;
}
export declare class DeliveryMinAggregate {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId?: number;
    assignedDriverId?: string;
}
export declare class DeliveryMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    pickupTime?: keyof typeof SortOrder;
    deliveryTime?: keyof typeof SortOrder;
    pickupMessage?: keyof typeof SortOrder;
    deliveryMessage?: keyof typeof SortOrder;
    instructions?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
    assignedDriverId?: keyof typeof SortOrder;
}
export declare class DeliveryNullableRelationFilter {
    is?: InstanceType<typeof DeliveryWhereInput>;
    isNot?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeliveryOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class DeliveryOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    pickupTime?: InstanceType<typeof SortOrderInput>;
    deliveryTime?: InstanceType<typeof SortOrderInput>;
    pickupMessage?: InstanceType<typeof SortOrderInput>;
    deliveryMessage?: InstanceType<typeof SortOrderInput>;
    instructions?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
    assignedDriverId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof DeliveryCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof DeliveryAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof DeliveryMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof DeliveryMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof DeliverySumOrderByAggregateInput>;
}
export declare class DeliveryOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    pickupTime?: InstanceType<typeof SortOrderInput>;
    deliveryTime?: InstanceType<typeof SortOrderInput>;
    pickupMessage?: InstanceType<typeof SortOrderInput>;
    deliveryMessage?: InstanceType<typeof SortOrderInput>;
    instructions?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
    assignedDriverId?: InstanceType<typeof SortOrderInput>;
    status?: InstanceType<typeof DeliveryStatusOrderByWithRelationInput>;
    assignedDriver?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryOrderByRelationAggregateInput>;
}
export declare class DeliveryRelationFilter {
    is?: InstanceType<typeof DeliveryWhereInput>;
    isNot?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeliveryScalarWhereWithAggregatesInput {
    AND?: Array<DeliveryScalarWhereWithAggregatesInput>;
    OR?: Array<DeliveryScalarWhereWithAggregatesInput>;
    NOT?: Array<DeliveryScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    pickupTime?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    deliveryTime?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    pickupMessage?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    deliveryMessage?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    instructions?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    deliveryStatusId?: InstanceType<typeof IntWithAggregatesFilter>;
    assignedDriverId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}
export declare class DeliveryScalarWhereInput {
    AND?: Array<DeliveryScalarWhereInput>;
    OR?: Array<DeliveryScalarWhereInput>;
    NOT?: Array<DeliveryScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    pickupTime?: InstanceType<typeof DateTimeNullableFilter>;
    deliveryTime?: InstanceType<typeof DateTimeNullableFilter>;
    pickupMessage?: InstanceType<typeof StringNullableFilter>;
    deliveryMessage?: InstanceType<typeof StringNullableFilter>;
    instructions?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deliveryStatusId?: InstanceType<typeof IntFilter>;
    assignedDriverId?: InstanceType<typeof StringNullableFilter>;
}
export declare class DeliverySumAggregateInput {
    id?: true;
    deliveryStatusId?: true;
}
export declare class DeliverySumAggregate {
    id?: number;
    deliveryStatusId?: number;
}
export declare class DeliverySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    deliveryStatusId?: keyof typeof SortOrder;
}
export declare class DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput {
    create?: Array<DeliveryCreateWithoutAssignedDriverInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutAssignedDriverInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyAssignedDriverInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryUncheckedCreateNestedManyWithoutStatusInput {
    create?: Array<DeliveryCreateWithoutStatusInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutStatusInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyStatusInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryUncheckedCreateWithoutAssignedDriverInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryUncheckedCreateWithoutLocationHistoryInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
    assignedDriverId?: string;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
    assignedDriverId?: string;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryUncheckedCreateWithoutStatusInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    assignedDriverId?: string;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryUncheckedCreateInput {
    id?: number;
    pickupTime?: Date | string;
    deliveryTime?: Date | string;
    pickupMessage?: string;
    deliveryMessage?: string;
    instructions?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deliveryStatusId: number;
    assignedDriverId?: string;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutDeliveryInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedCreateNestedManyWithoutDeliveryInput>;
}
export declare class DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput {
    create?: Array<DeliveryCreateWithoutAssignedDriverInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutAssignedDriverInput>;
    upsert?: Array<DeliveryUpsertWithWhereUniqueWithoutAssignedDriverInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyAssignedDriverInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryUpdateWithWhereUniqueWithoutAssignedDriverInput>;
    updateMany?: Array<DeliveryUpdateManyWithWhereWithoutAssignedDriverInput>;
    deleteMany?: Array<DeliveryScalarWhereInput>;
}
export declare class DeliveryUncheckedUpdateManyWithoutAssignedDriverInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DeliveryUncheckedUpdateManyWithoutStatusNestedInput {
    create?: Array<DeliveryCreateWithoutStatusInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutStatusInput>;
    upsert?: Array<DeliveryUpsertWithWhereUniqueWithoutStatusInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyStatusInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryUpdateWithWhereUniqueWithoutStatusInput>;
    updateMany?: Array<DeliveryUpdateManyWithWhereWithoutStatusInput>;
    deleteMany?: Array<DeliveryScalarWhereInput>;
}
export declare class DeliveryUncheckedUpdateManyWithoutStatusInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class DeliveryUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class DeliveryUncheckedUpdateWithoutAssignedDriverInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUncheckedUpdateWithoutLocationHistoryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUncheckedUpdateWithoutStatusInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryStatusId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    assignedDriverId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpdateManyMutationInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class DeliveryUpdateManyWithWhereWithoutAssignedDriverInput {
    where: InstanceType<typeof DeliveryScalarWhereInput>;
    data: InstanceType<typeof DeliveryUpdateManyMutationInput>;
}
export declare class DeliveryUpdateManyWithWhereWithoutStatusInput {
    where: InstanceType<typeof DeliveryScalarWhereInput>;
    data: InstanceType<typeof DeliveryUpdateManyMutationInput>;
}
export declare class DeliveryUpdateManyWithoutAssignedDriverNestedInput {
    create?: Array<DeliveryCreateWithoutAssignedDriverInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutAssignedDriverInput>;
    upsert?: Array<DeliveryUpsertWithWhereUniqueWithoutAssignedDriverInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyAssignedDriverInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryUpdateWithWhereUniqueWithoutAssignedDriverInput>;
    updateMany?: Array<DeliveryUpdateManyWithWhereWithoutAssignedDriverInput>;
    deleteMany?: Array<DeliveryScalarWhereInput>;
}
export declare class DeliveryUpdateManyWithoutStatusNestedInput {
    create?: Array<DeliveryCreateWithoutStatusInput>;
    connectOrCreate?: Array<DeliveryCreateOrConnectWithoutStatusInput>;
    upsert?: Array<DeliveryUpsertWithWhereUniqueWithoutStatusInput>;
    createMany?: InstanceType<typeof DeliveryCreateManyStatusInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryUpdateWithWhereUniqueWithoutStatusInput>;
    updateMany?: Array<DeliveryUpdateManyWithWhereWithoutStatusInput>;
    deleteMany?: Array<DeliveryScalarWhereInput>;
}
export declare class DeliveryUpdateOneRequiredWithoutLocationHistoryNestedInput {
    create?: InstanceType<typeof DeliveryCreateWithoutLocationHistoryInput>;
    connectOrCreate?: InstanceType<typeof DeliveryCreateOrConnectWithoutLocationHistoryInput>;
    upsert?: InstanceType<typeof DeliveryUpsertWithoutLocationHistoryInput>;
    connect?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof DeliveryUpdateToOneWithWhereWithoutLocationHistoryInput>;
}
export declare class DeliveryUpdateOneWithoutServiceOrderNestedInput {
    create?: InstanceType<typeof DeliveryCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof DeliveryCreateOrConnectWithoutServiceOrderInput>;
    upsert?: InstanceType<typeof DeliveryUpsertWithoutServiceOrderInput>;
    disconnect?: InstanceType<typeof DeliveryWhereInput>;
    delete?: InstanceType<typeof DeliveryWhereInput>;
    connect?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof DeliveryUpdateToOneWithWhereWithoutServiceOrderInput>;
}
export declare class DeliveryUpdateToOneWithWhereWithoutLocationHistoryInput {
    where?: InstanceType<typeof DeliveryWhereInput>;
    data: InstanceType<typeof DeliveryUpdateWithoutLocationHistoryInput>;
}
export declare class DeliveryUpdateToOneWithWhereWithoutServiceOrderInput {
    where?: InstanceType<typeof DeliveryWhereInput>;
    data: InstanceType<typeof DeliveryUpdateWithoutServiceOrderInput>;
}
export declare class DeliveryUpdateWithWhereUniqueWithoutAssignedDriverInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DeliveryUpdateWithoutAssignedDriverInput>;
}
export declare class DeliveryUpdateWithWhereUniqueWithoutStatusInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DeliveryUpdateWithoutStatusInput>;
}
export declare class DeliveryUpdateWithoutAssignedDriverInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof DeliveryStatusUpdateOneRequiredWithoutDeliveryNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpdateWithoutLocationHistoryInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof DeliveryStatusUpdateOneRequiredWithoutDeliveryNestedInput>;
    assignedDriver?: InstanceType<typeof EmployeeUpdateOneWithoutDeliveriesNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpdateWithoutServiceOrderInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof DeliveryStatusUpdateOneRequiredWithoutDeliveryNestedInput>;
    assignedDriver?: InstanceType<typeof EmployeeUpdateOneWithoutDeliveriesNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpdateWithoutStatusInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    assignedDriver?: InstanceType<typeof EmployeeUpdateOneWithoutDeliveriesNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpdateInput {
    pickupTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    deliveryTime?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    pickupMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryMessage?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    instructions?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof DeliveryStatusUpdateOneRequiredWithoutDeliveryNestedInput>;
    assignedDriver?: InstanceType<typeof EmployeeUpdateOneWithoutDeliveriesNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutDeliveryNestedInput>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryUpdateManyWithoutDeliveryNestedInput>;
}
export declare class DeliveryUpsertWithWhereUniqueWithoutAssignedDriverInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DeliveryUpdateWithoutAssignedDriverInput>;
    create: InstanceType<typeof DeliveryCreateWithoutAssignedDriverInput>;
}
export declare class DeliveryUpsertWithWhereUniqueWithoutStatusInput {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DeliveryUpdateWithoutStatusInput>;
    create: InstanceType<typeof DeliveryCreateWithoutStatusInput>;
}
export declare class DeliveryUpsertWithoutLocationHistoryInput {
    update: InstanceType<typeof DeliveryUpdateWithoutLocationHistoryInput>;
    create: InstanceType<typeof DeliveryCreateWithoutLocationHistoryInput>;
    where?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeliveryUpsertWithoutServiceOrderInput {
    update: InstanceType<typeof DeliveryUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof DeliveryCreateWithoutServiceOrderInput>;
    where?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class DeliveryWhereUniqueInput {
    id?: number;
    AND?: Array<DeliveryWhereInput>;
    OR?: Array<DeliveryWhereInput>;
    NOT?: Array<DeliveryWhereInput>;
    pickupTime?: InstanceType<typeof DateTimeNullableFilter>;
    deliveryTime?: InstanceType<typeof DateTimeNullableFilter>;
    pickupMessage?: InstanceType<typeof StringNullableFilter>;
    deliveryMessage?: InstanceType<typeof StringNullableFilter>;
    instructions?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deliveryStatusId?: InstanceType<typeof IntFilter>;
    assignedDriverId?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof DeliveryStatusRelationFilter>;
    assignedDriver?: InstanceType<typeof EmployeeNullableRelationFilter>;
    ServiceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryListRelationFilter>;
}
export declare class DeliveryWhereInput {
    AND?: Array<DeliveryWhereInput>;
    OR?: Array<DeliveryWhereInput>;
    NOT?: Array<DeliveryWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    pickupTime?: InstanceType<typeof DateTimeNullableFilter>;
    deliveryTime?: InstanceType<typeof DateTimeNullableFilter>;
    pickupMessage?: InstanceType<typeof StringNullableFilter>;
    deliveryMessage?: InstanceType<typeof StringNullableFilter>;
    instructions?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deliveryStatusId?: InstanceType<typeof IntFilter>;
    assignedDriverId?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof DeliveryStatusRelationFilter>;
    assignedDriver?: InstanceType<typeof EmployeeNullableRelationFilter>;
    ServiceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
    locationHistory?: InstanceType<typeof DeliveryLocationHistoryListRelationFilter>;
}
export declare class Delivery {
    id: number;
    pickupTime: Date | null;
    deliveryTime: Date | null;
    pickupMessage: string | null;
    deliveryMessage: string | null;
    instructions: string | null;
    createdAt: Date;
    updatedAt: Date;
    deliveryStatusId: number;
    assignedDriverId: string | null;
    status?: InstanceType<typeof DeliveryStatus>;
    assignedDriver?: InstanceType<typeof Employee> | null;
    ServiceOrder?: Array<ServiceOrder>;
    locationHistory?: Array<DeliveryLocationHistory>;
    _count?: InstanceType<typeof DeliveryCount>;
}
export declare class FindFirstDeliveryOrThrowArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
    orderBy?: Array<DeliveryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryScalarFieldEnum>;
}
export declare class FindFirstDeliveryArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
    orderBy?: Array<DeliveryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryScalarFieldEnum>;
}
export declare class FindManyDeliveryArgs {
    where?: InstanceType<typeof DeliveryWhereInput>;
    orderBy?: Array<DeliveryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryScalarFieldEnum>;
}
export declare class FindUniqueDeliveryOrThrowArgs {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class FindUniqueDeliveryArgs {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class UpdateManyDeliveryArgs {
    data: InstanceType<typeof DeliveryUpdateManyMutationInput>;
    where?: InstanceType<typeof DeliveryWhereInput>;
}
export declare class UpdateOneDeliveryArgs {
    data: InstanceType<typeof DeliveryUpdateInput>;
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
}
export declare class UpsertOneDeliveryArgs {
    where: Prisma.AtLeast<DeliveryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryCreateInput>;
    update: InstanceType<typeof DeliveryUpdateInput>;
}
export declare class AggregateDeliveryLocationHistory {
    _count?: InstanceType<typeof DeliveryLocationHistoryCountAggregate>;
    _avg?: InstanceType<typeof DeliveryLocationHistoryAvgAggregate>;
    _sum?: InstanceType<typeof DeliveryLocationHistorySumAggregate>;
    _min?: InstanceType<typeof DeliveryLocationHistoryMinAggregate>;
    _max?: InstanceType<typeof DeliveryLocationHistoryMaxAggregate>;
}
export declare class CreateManyDeliveryLocationHistoryArgs {
    data: Array<DeliveryLocationHistoryCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneDeliveryLocationHistoryArgs {
    data: InstanceType<typeof DeliveryLocationHistoryCreateInput>;
}
export declare class DeleteManyDeliveryLocationHistoryArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
}
export declare class DeleteOneDeliveryLocationHistoryArgs {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
}
export declare class DeliveryLocationHistoryAggregateArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    orderBy?: Array<DeliveryLocationHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryLocationHistoryCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryLocationHistoryAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliveryLocationHistorySumAggregateInput>;
    _min?: InstanceType<typeof DeliveryLocationHistoryMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryLocationHistoryMaxAggregateInput>;
}
export declare class DeliveryLocationHistoryAvgAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    deliveryId?: true;
}
export declare class DeliveryLocationHistoryAvgAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    deliveryId?: number;
}
export declare class DeliveryLocationHistoryAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryCountAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    createdAt?: true;
    deliveryId?: true;
    _all?: true;
}
export declare class DeliveryLocationHistoryCountAggregate {
    id: number;
    latitude: number;
    longitude: number;
    createdAt: number;
    deliveryId: number;
    _all: number;
}
export declare class DeliveryLocationHistoryCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryCreateManyDeliveryInputEnvelope {
    data: Array<DeliveryLocationHistoryCreateManyDeliveryInput>;
    skipDuplicates?: boolean;
}
export declare class DeliveryLocationHistoryCreateManyDeliveryInput {
    id?: number;
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
}
export declare class DeliveryLocationHistoryCreateManyInput {
    id?: number;
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
    deliveryId: number;
}
export declare class DeliveryLocationHistoryCreateNestedManyWithoutDeliveryInput {
    create?: Array<DeliveryLocationHistoryCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<DeliveryLocationHistoryCreateOrConnectWithoutDeliveryInput>;
    createMany?: InstanceType<typeof DeliveryLocationHistoryCreateManyDeliveryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryLocationHistoryCreateOrConnectWithoutDeliveryInput {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryLocationHistoryCreateWithoutDeliveryInput>;
}
export declare class DeliveryLocationHistoryCreateWithoutDeliveryInput {
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
}
export declare class DeliveryLocationHistoryCreateInput {
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
    delivery: InstanceType<typeof DeliveryCreateNestedOneWithoutLocationHistoryInput>;
}
export declare class DeliveryLocationHistoryGroupByArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    orderBy?: Array<DeliveryLocationHistoryOrderByWithAggregationInput>;
    by: Array<keyof typeof DeliveryLocationHistoryScalarFieldEnum>;
    having?: InstanceType<typeof DeliveryLocationHistoryScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryLocationHistoryCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryLocationHistoryAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliveryLocationHistorySumAggregateInput>;
    _min?: InstanceType<typeof DeliveryLocationHistoryMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryLocationHistoryMaxAggregateInput>;
}
export declare class DeliveryLocationHistoryGroupBy {
    id: number;
    latitude: number;
    longitude: number;
    createdAt: Date | string;
    deliveryId: number;
    _count?: InstanceType<typeof DeliveryLocationHistoryCountAggregate>;
    _avg?: InstanceType<typeof DeliveryLocationHistoryAvgAggregate>;
    _sum?: InstanceType<typeof DeliveryLocationHistorySumAggregate>;
    _min?: InstanceType<typeof DeliveryLocationHistoryMinAggregate>;
    _max?: InstanceType<typeof DeliveryLocationHistoryMaxAggregate>;
}
export declare class DeliveryLocationHistoryListRelationFilter {
    every?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    some?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    none?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
}
export declare class DeliveryLocationHistoryMaxAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    createdAt?: true;
    deliveryId?: true;
}
export declare class DeliveryLocationHistoryMaxAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    createdAt?: Date | string;
    deliveryId?: number;
}
export declare class DeliveryLocationHistoryMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryMinAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    createdAt?: true;
    deliveryId?: true;
}
export declare class DeliveryLocationHistoryMinAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    createdAt?: Date | string;
    deliveryId?: number;
}
export declare class DeliveryLocationHistoryMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof DeliveryLocationHistoryCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof DeliveryLocationHistoryAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof DeliveryLocationHistoryMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof DeliveryLocationHistoryMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof DeliveryLocationHistorySumOrderByAggregateInput>;
}
export declare class DeliveryLocationHistoryOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    delivery?: InstanceType<typeof DeliveryOrderByWithRelationInput>;
}
export declare class DeliveryLocationHistoryScalarWhereWithAggregatesInput {
    AND?: Array<DeliveryLocationHistoryScalarWhereWithAggregatesInput>;
    OR?: Array<DeliveryLocationHistoryScalarWhereWithAggregatesInput>;
    NOT?: Array<DeliveryLocationHistoryScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    latitude?: InstanceType<typeof FloatWithAggregatesFilter>;
    longitude?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    deliveryId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class DeliveryLocationHistoryScalarWhereInput {
    AND?: Array<DeliveryLocationHistoryScalarWhereInput>;
    OR?: Array<DeliveryLocationHistoryScalarWhereInput>;
    NOT?: Array<DeliveryLocationHistoryScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    deliveryId?: InstanceType<typeof IntFilter>;
}
export declare class DeliveryLocationHistorySumAggregateInput {
    id?: true;
    latitude?: true;
    longitude?: true;
    deliveryId?: true;
}
export declare class DeliveryLocationHistorySumAggregate {
    id?: number;
    latitude?: number;
    longitude?: number;
    deliveryId?: number;
}
export declare class DeliveryLocationHistorySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    latitude?: keyof typeof SortOrder;
    longitude?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
}
export declare class DeliveryLocationHistoryUncheckedCreateNestedManyWithoutDeliveryInput {
    create?: Array<DeliveryLocationHistoryCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<DeliveryLocationHistoryCreateOrConnectWithoutDeliveryInput>;
    createMany?: InstanceType<typeof DeliveryLocationHistoryCreateManyDeliveryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
}
export declare class DeliveryLocationHistoryUncheckedCreateWithoutDeliveryInput {
    id?: number;
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
}
export declare class DeliveryLocationHistoryUncheckedCreateInput {
    id?: number;
    latitude: number;
    longitude: number;
    createdAt?: Date | string;
    deliveryId: number;
}
export declare class DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryNestedInput {
    create?: Array<DeliveryLocationHistoryCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<DeliveryLocationHistoryCreateOrConnectWithoutDeliveryInput>;
    upsert?: Array<DeliveryLocationHistoryUpsertWithWhereUniqueWithoutDeliveryInput>;
    createMany?: InstanceType<typeof DeliveryLocationHistoryCreateManyDeliveryInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryLocationHistoryUpdateWithWhereUniqueWithoutDeliveryInput>;
    updateMany?: Array<DeliveryLocationHistoryUpdateManyWithWhereWithoutDeliveryInput>;
    deleteMany?: Array<DeliveryLocationHistoryScalarWhereInput>;
}
export declare class DeliveryLocationHistoryUncheckedUpdateManyWithoutDeliveryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUncheckedUpdateWithoutDeliveryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUpdateManyMutationInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUpdateManyWithWhereWithoutDeliveryInput {
    where: InstanceType<typeof DeliveryLocationHistoryScalarWhereInput>;
    data: InstanceType<typeof DeliveryLocationHistoryUpdateManyMutationInput>;
}
export declare class DeliveryLocationHistoryUpdateManyWithoutDeliveryNestedInput {
    create?: Array<DeliveryLocationHistoryCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<DeliveryLocationHistoryCreateOrConnectWithoutDeliveryInput>;
    upsert?: Array<DeliveryLocationHistoryUpsertWithWhereUniqueWithoutDeliveryInput>;
    createMany?: InstanceType<typeof DeliveryLocationHistoryCreateManyDeliveryInputEnvelope>;
    set?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>>;
    update?: Array<DeliveryLocationHistoryUpdateWithWhereUniqueWithoutDeliveryInput>;
    updateMany?: Array<DeliveryLocationHistoryUpdateManyWithWhereWithoutDeliveryInput>;
    deleteMany?: Array<DeliveryLocationHistoryScalarWhereInput>;
}
export declare class DeliveryLocationHistoryUpdateWithWhereUniqueWithoutDeliveryInput {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DeliveryLocationHistoryUpdateWithoutDeliveryInput>;
}
export declare class DeliveryLocationHistoryUpdateWithoutDeliveryInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class DeliveryLocationHistoryUpdateInput {
    latitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    longitude?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneRequiredWithoutLocationHistoryNestedInput>;
}
export declare class DeliveryLocationHistoryUpsertWithWhereUniqueWithoutDeliveryInput {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DeliveryLocationHistoryUpdateWithoutDeliveryInput>;
    create: InstanceType<typeof DeliveryLocationHistoryCreateWithoutDeliveryInput>;
}
export declare class DeliveryLocationHistoryWhereUniqueInput {
    id?: number;
    AND?: Array<DeliveryLocationHistoryWhereInput>;
    OR?: Array<DeliveryLocationHistoryWhereInput>;
    NOT?: Array<DeliveryLocationHistoryWhereInput>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    deliveryId?: InstanceType<typeof IntFilter>;
    delivery?: InstanceType<typeof DeliveryRelationFilter>;
}
export declare class DeliveryLocationHistoryWhereInput {
    AND?: Array<DeliveryLocationHistoryWhereInput>;
    OR?: Array<DeliveryLocationHistoryWhereInput>;
    NOT?: Array<DeliveryLocationHistoryWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    latitude?: InstanceType<typeof FloatFilter>;
    longitude?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    deliveryId?: InstanceType<typeof IntFilter>;
    delivery?: InstanceType<typeof DeliveryRelationFilter>;
}
export declare class DeliveryLocationHistory {
    id: number;
    latitude: number;
    longitude: number;
    createdAt: Date;
    deliveryId: number;
    delivery?: InstanceType<typeof Delivery>;
}
export declare class FindFirstDeliveryLocationHistoryOrThrowArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    orderBy?: Array<DeliveryLocationHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryLocationHistoryScalarFieldEnum>;
}
export declare class FindFirstDeliveryLocationHistoryArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    orderBy?: Array<DeliveryLocationHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryLocationHistoryScalarFieldEnum>;
}
export declare class FindManyDeliveryLocationHistoryArgs {
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
    orderBy?: Array<DeliveryLocationHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryLocationHistoryScalarFieldEnum>;
}
export declare class FindUniqueDeliveryLocationHistoryOrThrowArgs {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
}
export declare class FindUniqueDeliveryLocationHistoryArgs {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
}
export declare class UpdateManyDeliveryLocationHistoryArgs {
    data: InstanceType<typeof DeliveryLocationHistoryUpdateManyMutationInput>;
    where?: InstanceType<typeof DeliveryLocationHistoryWhereInput>;
}
export declare class UpdateOneDeliveryLocationHistoryArgs {
    data: InstanceType<typeof DeliveryLocationHistoryUpdateInput>;
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
}
export declare class UpsertOneDeliveryLocationHistoryArgs {
    where: Prisma.AtLeast<DeliveryLocationHistoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryLocationHistoryCreateInput>;
    update: InstanceType<typeof DeliveryLocationHistoryUpdateInput>;
}
export declare class AggregateDeliveryStatus {
    _count?: InstanceType<typeof DeliveryStatusCountAggregate>;
    _avg?: InstanceType<typeof DeliveryStatusAvgAggregate>;
    _sum?: InstanceType<typeof DeliveryStatusSumAggregate>;
    _min?: InstanceType<typeof DeliveryStatusMinAggregate>;
    _max?: InstanceType<typeof DeliveryStatusMaxAggregate>;
}
export declare class CreateManyDeliveryStatusArgs {
    data: Array<DeliveryStatusCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneDeliveryStatusArgs {
    data: InstanceType<typeof DeliveryStatusCreateInput>;
}
export declare class DeleteManyDeliveryStatusArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
}
export declare class DeleteOneDeliveryStatusArgs {
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
}
export declare class DeliveryStatusAggregateArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    orderBy?: Array<DeliveryStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryStatusCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryStatusAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliveryStatusSumAggregateInput>;
    _min?: InstanceType<typeof DeliveryStatusMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryStatusMaxAggregateInput>;
}
export declare class DeliveryStatusAvgAggregateInput {
    id?: true;
}
export declare class DeliveryStatusAvgAggregate {
    id?: number;
}
export declare class DeliveryStatusAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class DeliveryStatusCountAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
    _all?: true;
}
export declare class DeliveryStatusCountAggregate {
    id: number;
    createdAt: number;
    status: number;
    _all: number;
}
export declare class DeliveryStatusCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
}
export declare class DeliveryStatusCount {
    Delivery?: number;
}
export declare class DeliveryStatusCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof DeliveryStatusType;
}
export declare class DeliveryStatusCreateNestedOneWithoutDeliveryInput {
    create?: InstanceType<typeof DeliveryStatusCreateWithoutDeliveryInput>;
    connectOrCreate?: InstanceType<typeof DeliveryStatusCreateOrConnectWithoutDeliveryInput>;
    connect?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
}
export declare class DeliveryStatusCreateOrConnectWithoutDeliveryInput {
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryStatusCreateWithoutDeliveryInput>;
}
export declare class DeliveryStatusCreateWithoutDeliveryInput {
    createdAt?: Date | string;
    status: keyof typeof DeliveryStatusType;
}
export declare class DeliveryStatusCreateInput {
    createdAt?: Date | string;
    status: keyof typeof DeliveryStatusType;
    Delivery?: InstanceType<typeof DeliveryCreateNestedManyWithoutStatusInput>;
}
export declare class DeliveryStatusGroupByArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    orderBy?: Array<DeliveryStatusOrderByWithAggregationInput>;
    by: Array<keyof typeof DeliveryStatusScalarFieldEnum>;
    having?: InstanceType<typeof DeliveryStatusScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DeliveryStatusCountAggregateInput>;
    _avg?: InstanceType<typeof DeliveryStatusAvgAggregateInput>;
    _sum?: InstanceType<typeof DeliveryStatusSumAggregateInput>;
    _min?: InstanceType<typeof DeliveryStatusMinAggregateInput>;
    _max?: InstanceType<typeof DeliveryStatusMaxAggregateInput>;
}
export declare class DeliveryStatusGroupBy {
    id: number;
    createdAt: Date | string;
    status: keyof typeof DeliveryStatusType;
    _count?: InstanceType<typeof DeliveryStatusCountAggregate>;
    _avg?: InstanceType<typeof DeliveryStatusAvgAggregate>;
    _sum?: InstanceType<typeof DeliveryStatusSumAggregate>;
    _min?: InstanceType<typeof DeliveryStatusMinAggregate>;
    _max?: InstanceType<typeof DeliveryStatusMaxAggregate>;
}
export declare class DeliveryStatusMaxAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
}
export declare class DeliveryStatusMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    status?: keyof typeof DeliveryStatusType;
}
export declare class DeliveryStatusMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
}
export declare class DeliveryStatusMinAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
}
export declare class DeliveryStatusMinAggregate {
    id?: number;
    createdAt?: Date | string;
    status?: keyof typeof DeliveryStatusType;
}
export declare class DeliveryStatusMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
}
export declare class DeliveryStatusOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    _count?: InstanceType<typeof DeliveryStatusCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof DeliveryStatusAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof DeliveryStatusMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof DeliveryStatusMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof DeliveryStatusSumOrderByAggregateInput>;
}
export declare class DeliveryStatusOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    Delivery?: InstanceType<typeof DeliveryOrderByRelationAggregateInput>;
}
export declare class DeliveryStatusRelationFilter {
    is?: InstanceType<typeof DeliveryStatusWhereInput>;
    isNot?: InstanceType<typeof DeliveryStatusWhereInput>;
}
export declare class DeliveryStatusScalarWhereWithAggregatesInput {
    AND?: Array<DeliveryStatusScalarWhereWithAggregatesInput>;
    OR?: Array<DeliveryStatusScalarWhereWithAggregatesInput>;
    NOT?: Array<DeliveryStatusScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeWithAggregatesFilter>;
}
export declare class DeliveryStatusSumAggregateInput {
    id?: true;
}
export declare class DeliveryStatusSumAggregate {
    id?: number;
}
export declare class DeliveryStatusSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class DeliveryStatusUncheckedCreateWithoutDeliveryInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof DeliveryStatusType;
}
export declare class DeliveryStatusUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof DeliveryStatusType;
    Delivery?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutStatusInput>;
}
export declare class DeliveryStatusUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
}
export declare class DeliveryStatusUncheckedUpdateWithoutDeliveryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
}
export declare class DeliveryStatusUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
    Delivery?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutStatusNestedInput>;
}
export declare class DeliveryStatusUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
}
export declare class DeliveryStatusUpdateOneRequiredWithoutDeliveryNestedInput {
    create?: InstanceType<typeof DeliveryStatusCreateWithoutDeliveryInput>;
    connectOrCreate?: InstanceType<typeof DeliveryStatusCreateOrConnectWithoutDeliveryInput>;
    upsert?: InstanceType<typeof DeliveryStatusUpsertWithoutDeliveryInput>;
    connect?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof DeliveryStatusUpdateToOneWithWhereWithoutDeliveryInput>;
}
export declare class DeliveryStatusUpdateToOneWithWhereWithoutDeliveryInput {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    data: InstanceType<typeof DeliveryStatusUpdateWithoutDeliveryInput>;
}
export declare class DeliveryStatusUpdateWithoutDeliveryInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
}
export declare class DeliveryStatusUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFieldUpdateOperationsInput>;
    Delivery?: InstanceType<typeof DeliveryUpdateManyWithoutStatusNestedInput>;
}
export declare class DeliveryStatusUpsertWithoutDeliveryInput {
    update: InstanceType<typeof DeliveryStatusUpdateWithoutDeliveryInput>;
    create: InstanceType<typeof DeliveryStatusCreateWithoutDeliveryInput>;
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
}
export declare class DeliveryStatusWhereUniqueInput {
    id?: number;
    AND?: Array<DeliveryStatusWhereInput>;
    OR?: Array<DeliveryStatusWhereInput>;
    NOT?: Array<DeliveryStatusWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFilter>;
    Delivery?: InstanceType<typeof DeliveryListRelationFilter>;
}
export declare class DeliveryStatusWhereInput {
    AND?: Array<DeliveryStatusWhereInput>;
    OR?: Array<DeliveryStatusWhereInput>;
    NOT?: Array<DeliveryStatusWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumDeliveryStatusTypeFilter>;
    Delivery?: InstanceType<typeof DeliveryListRelationFilter>;
}
export declare class DeliveryStatus {
    id: number;
    createdAt: Date;
    status: keyof typeof DeliveryStatusType;
    Delivery?: Array<Delivery>;
    _count?: InstanceType<typeof DeliveryStatusCount>;
}
export declare class FindFirstDeliveryStatusOrThrowArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    orderBy?: Array<DeliveryStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryStatusScalarFieldEnum>;
}
export declare class FindFirstDeliveryStatusArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    orderBy?: Array<DeliveryStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryStatusScalarFieldEnum>;
}
export declare class FindManyDeliveryStatusArgs {
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
    orderBy?: Array<DeliveryStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DeliveryStatusScalarFieldEnum>;
}
export declare class FindUniqueDeliveryStatusOrThrowArgs {
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
}
export declare class FindUniqueDeliveryStatusArgs {
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
}
export declare class UpdateManyDeliveryStatusArgs {
    data: InstanceType<typeof DeliveryStatusUpdateManyMutationInput>;
    where?: InstanceType<typeof DeliveryStatusWhereInput>;
}
export declare class UpdateOneDeliveryStatusArgs {
    data: InstanceType<typeof DeliveryStatusUpdateInput>;
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
}
export declare class UpsertOneDeliveryStatusArgs {
    where: Prisma.AtLeast<DeliveryStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DeliveryStatusCreateInput>;
    update: InstanceType<typeof DeliveryStatusUpdateInput>;
}
export declare class AggregateDistrict {
    _count?: InstanceType<typeof DistrictCountAggregate>;
    _avg?: InstanceType<typeof DistrictAvgAggregate>;
    _sum?: InstanceType<typeof DistrictSumAggregate>;
    _min?: InstanceType<typeof DistrictMinAggregate>;
    _max?: InstanceType<typeof DistrictMaxAggregate>;
}
export declare class CreateManyDistrictArgs {
    data: Array<DistrictCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneDistrictArgs {
    data: InstanceType<typeof DistrictCreateInput>;
}
export declare class DeleteManyDistrictArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
}
export declare class DeleteOneDistrictArgs {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
}
export declare class DistrictAggregateArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
    orderBy?: Array<DistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DistrictCountAggregateInput>;
    _avg?: InstanceType<typeof DistrictAvgAggregateInput>;
    _sum?: InstanceType<typeof DistrictSumAggregateInput>;
    _min?: InstanceType<typeof DistrictMinAggregateInput>;
    _max?: InstanceType<typeof DistrictMaxAggregateInput>;
}
export declare class DistrictAvgAggregateInput {
    id?: true;
    cityId?: true;
}
export declare class DistrictAvgAggregate {
    id?: number;
    cityId?: number;
}
export declare class DistrictAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
}
export declare class DistrictCountAggregateInput {
    id?: true;
    name?: true;
    cityId?: true;
    _all?: true;
}
export declare class DistrictCountAggregate {
    id: number;
    name: number;
    cityId: number;
    _all: number;
}
export declare class DistrictCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
}
export declare class DistrictCount {
    subdistricts?: number;
    onOutletLaundryItemServiceArea?: number;
    onVoucherSetting?: number;
}
export declare class DistrictCreateManyCityInputEnvelope {
    data: Array<DistrictCreateManyCityInput>;
    skipDuplicates?: boolean;
}
export declare class DistrictCreateManyCityInput {
    id?: number;
    name: string;
}
export declare class DistrictCreateManyInput {
    id?: number;
    name: string;
    cityId: number;
}
export declare class DistrictCreateNestedManyWithoutCityInput {
    create?: Array<DistrictCreateWithoutCityInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutCityInput>;
    createMany?: InstanceType<typeof DistrictCreateManyCityInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput {
    create?: Array<DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnOutletLaundryItemServiceAreaInput>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictCreateNestedManyWithoutOnVoucherSettingInput {
    create?: Array<DistrictCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictCreateNestedOneWithoutSubdistrictsInput {
    create?: InstanceType<typeof DistrictCreateWithoutSubdistrictsInput>;
    connectOrCreate?: InstanceType<typeof DistrictCreateOrConnectWithoutSubdistrictsInput>;
    connect?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
}
export declare class DistrictCreateOrConnectWithoutCityInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DistrictCreateWithoutCityInput>;
}
export declare class DistrictCreateOrConnectWithoutOnOutletLaundryItemServiceAreaInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
}
export declare class DistrictCreateOrConnectWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DistrictCreateWithoutOnVoucherSettingInput>;
}
export declare class DistrictCreateOrConnectWithoutSubdistrictsInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DistrictCreateWithoutSubdistrictsInput>;
}
export declare class DistrictCreateWithoutCityInput {
    name: string;
    subdistricts?: InstanceType<typeof SubdistrictCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput {
    name: string;
    city: InstanceType<typeof CityCreateNestedOneWithoutDistrictsInput>;
    subdistricts?: InstanceType<typeof SubdistrictCreateNestedManyWithoutDistrictInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictCreateWithoutOnVoucherSettingInput {
    name: string;
    city: InstanceType<typeof CityCreateNestedOneWithoutDistrictsInput>;
    subdistricts?: InstanceType<typeof SubdistrictCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutDistrictAreasInput>;
}
export declare class DistrictCreateWithoutSubdistrictsInput {
    name: string;
    city: InstanceType<typeof CityCreateNestedOneWithoutDistrictsInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictCreateInput {
    name: string;
    city: InstanceType<typeof CityCreateNestedOneWithoutDistrictsInput>;
    subdistricts?: InstanceType<typeof SubdistrictCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictGroupByArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
    orderBy?: Array<DistrictOrderByWithAggregationInput>;
    by: Array<keyof typeof DistrictScalarFieldEnum>;
    having?: InstanceType<typeof DistrictScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof DistrictCountAggregateInput>;
    _avg?: InstanceType<typeof DistrictAvgAggregateInput>;
    _sum?: InstanceType<typeof DistrictSumAggregateInput>;
    _min?: InstanceType<typeof DistrictMinAggregateInput>;
    _max?: InstanceType<typeof DistrictMaxAggregateInput>;
}
export declare class DistrictGroupBy {
    id: number;
    name: string;
    cityId: number;
    _count?: InstanceType<typeof DistrictCountAggregate>;
    _avg?: InstanceType<typeof DistrictAvgAggregate>;
    _sum?: InstanceType<typeof DistrictSumAggregate>;
    _min?: InstanceType<typeof DistrictMinAggregate>;
    _max?: InstanceType<typeof DistrictMaxAggregate>;
}
export declare class DistrictListRelationFilter {
    every?: InstanceType<typeof DistrictWhereInput>;
    some?: InstanceType<typeof DistrictWhereInput>;
    none?: InstanceType<typeof DistrictWhereInput>;
}
export declare class DistrictMaxAggregateInput {
    id?: true;
    name?: true;
    cityId?: true;
}
export declare class DistrictMaxAggregate {
    id?: number;
    name?: string;
    cityId?: number;
}
export declare class DistrictMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
}
export declare class DistrictMinAggregateInput {
    id?: true;
    name?: true;
    cityId?: true;
}
export declare class DistrictMinAggregate {
    id?: number;
    name?: string;
    cityId?: number;
}
export declare class DistrictMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
}
export declare class DistrictOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class DistrictOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof DistrictCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof DistrictAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof DistrictMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof DistrictMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof DistrictSumOrderByAggregateInput>;
}
export declare class DistrictOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
    city?: InstanceType<typeof CityOrderByWithRelationInput>;
    subdistricts?: InstanceType<typeof SubdistrictOrderByRelationAggregateInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceOrderByRelationAggregateInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingOrderByRelationAggregateInput>;
}
export declare class DistrictRelationFilter {
    is?: InstanceType<typeof DistrictWhereInput>;
    isNot?: InstanceType<typeof DistrictWhereInput>;
}
export declare class DistrictScalarWhereWithAggregatesInput {
    AND?: Array<DistrictScalarWhereWithAggregatesInput>;
    OR?: Array<DistrictScalarWhereWithAggregatesInput>;
    NOT?: Array<DistrictScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    cityId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class DistrictScalarWhereInput {
    AND?: Array<DistrictScalarWhereInput>;
    OR?: Array<DistrictScalarWhereInput>;
    NOT?: Array<DistrictScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    cityId?: InstanceType<typeof IntFilter>;
}
export declare class DistrictSumAggregateInput {
    id?: true;
    cityId?: true;
}
export declare class DistrictSumAggregate {
    id?: number;
    cityId?: number;
}
export declare class DistrictSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    cityId?: keyof typeof SortOrder;
}
export declare class DistrictUncheckedCreateNestedManyWithoutCityInput {
    create?: Array<DistrictCreateWithoutCityInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutCityInput>;
    createMany?: InstanceType<typeof DistrictCreateManyCityInputEnvelope>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput {
    create?: Array<DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnOutletLaundryItemServiceAreaInput>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput {
    create?: Array<DistrictCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
}
export declare class DistrictUncheckedCreateWithoutCityInput {
    id?: number;
    name: string;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictUncheckedCreateWithoutOnOutletLaundryItemServiceAreaInput {
    id?: number;
    name: string;
    cityId: number;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedCreateNestedManyWithoutDistrictInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictUncheckedCreateWithoutOnVoucherSettingInput {
    id?: number;
    name: string;
    cityId: number;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutDistrictAreasInput>;
}
export declare class DistrictUncheckedCreateWithoutSubdistrictsInput {
    id?: number;
    name: string;
    cityId: number;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictUncheckedCreateInput {
    id?: number;
    name: string;
    cityId: number;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedCreateNestedManyWithoutDistrictInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutDistrictAreasInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToDistrictsInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutCityNestedInput {
    create?: Array<DistrictCreateWithoutCityInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutCityInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutCityInput>;
    createMany?: InstanceType<typeof DistrictCreateManyCityInputEnvelope>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutCityInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutCityInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutCityInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput {
    create?: Array<DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnOutletLaundryItemServiceAreaInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutOnOutletLaundryItemServiceAreaInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput {
    create?: Array<DistrictCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnVoucherSettingInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutOnVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutOnVoucherSettingInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutOnVoucherSettingInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUncheckedUpdateManyWithoutOnVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DistrictUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class DistrictUncheckedUpdateWithoutCityInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUncheckedUpdateWithoutOnOutletLaundryItemServiceAreaInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedUpdateManyWithoutDistrictNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUncheckedUpdateWithoutOnVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasNestedInput>;
}
export declare class DistrictUncheckedUpdateWithoutSubdistrictsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cityId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    subdistricts?: InstanceType<typeof SubdistrictUncheckedUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class DistrictUpdateManyWithWhereWithoutCityInput {
    where: InstanceType<typeof DistrictScalarWhereInput>;
    data: InstanceType<typeof DistrictUpdateManyMutationInput>;
}
export declare class DistrictUpdateManyWithWhereWithoutOnOutletLaundryItemServiceAreaInput {
    where: InstanceType<typeof DistrictScalarWhereInput>;
    data: InstanceType<typeof DistrictUpdateManyMutationInput>;
}
export declare class DistrictUpdateManyWithWhereWithoutOnVoucherSettingInput {
    where: InstanceType<typeof DistrictScalarWhereInput>;
    data: InstanceType<typeof DistrictUpdateManyMutationInput>;
}
export declare class DistrictUpdateManyWithoutCityNestedInput {
    create?: Array<DistrictCreateWithoutCityInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutCityInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutCityInput>;
    createMany?: InstanceType<typeof DistrictCreateManyCityInputEnvelope>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutCityInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutCityInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput {
    create?: Array<DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnOutletLaundryItemServiceAreaInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutOnOutletLaundryItemServiceAreaInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUpdateManyWithoutOnVoucherSettingNestedInput {
    create?: Array<DistrictCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<DistrictCreateOrConnectWithoutOnVoucherSettingInput>;
    upsert?: Array<DistrictUpsertWithWhereUniqueWithoutOnVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>>;
    update?: Array<DistrictUpdateWithWhereUniqueWithoutOnVoucherSettingInput>;
    updateMany?: Array<DistrictUpdateManyWithWhereWithoutOnVoucherSettingInput>;
    deleteMany?: Array<DistrictScalarWhereInput>;
}
export declare class DistrictUpdateOneRequiredWithoutSubdistrictsNestedInput {
    create?: InstanceType<typeof DistrictCreateWithoutSubdistrictsInput>;
    connectOrCreate?: InstanceType<typeof DistrictCreateOrConnectWithoutSubdistrictsInput>;
    upsert?: InstanceType<typeof DistrictUpsertWithoutSubdistrictsInput>;
    connect?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof DistrictUpdateToOneWithWhereWithoutSubdistrictsInput>;
}
export declare class DistrictUpdateToOneWithWhereWithoutSubdistrictsInput {
    where?: InstanceType<typeof DistrictWhereInput>;
    data: InstanceType<typeof DistrictUpdateWithoutSubdistrictsInput>;
}
export declare class DistrictUpdateWithWhereUniqueWithoutCityInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DistrictUpdateWithoutCityInput>;
}
export declare class DistrictUpdateWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DistrictUpdateWithoutOnOutletLaundryItemServiceAreaInput>;
}
export declare class DistrictUpdateWithWhereUniqueWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    data: InstanceType<typeof DistrictUpdateWithoutOnVoucherSettingInput>;
}
export declare class DistrictUpdateWithoutCityInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subdistricts?: InstanceType<typeof SubdistrictUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUpdateWithoutOnOutletLaundryItemServiceAreaInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    city?: InstanceType<typeof CityUpdateOneRequiredWithoutDistrictsNestedInput>;
    subdistricts?: InstanceType<typeof SubdistrictUpdateManyWithoutDistrictNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUpdateWithoutOnVoucherSettingInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    city?: InstanceType<typeof CityUpdateOneRequiredWithoutDistrictsNestedInput>;
    subdistricts?: InstanceType<typeof SubdistrictUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutDistrictAreasNestedInput>;
}
export declare class DistrictUpdateWithoutSubdistrictsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    city?: InstanceType<typeof CityUpdateOneRequiredWithoutDistrictsNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    city?: InstanceType<typeof CityUpdateOneRequiredWithoutDistrictsNestedInput>;
    subdistricts?: InstanceType<typeof SubdistrictUpdateManyWithoutDistrictNestedInput>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutDistrictAreasNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToDistrictsNestedInput>;
}
export declare class DistrictUpsertWithWhereUniqueWithoutCityInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DistrictUpdateWithoutCityInput>;
    create: InstanceType<typeof DistrictCreateWithoutCityInput>;
}
export declare class DistrictUpsertWithWhereUniqueWithoutOnOutletLaundryItemServiceAreaInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DistrictUpdateWithoutOnOutletLaundryItemServiceAreaInput>;
    create: InstanceType<typeof DistrictCreateWithoutOnOutletLaundryItemServiceAreaInput>;
}
export declare class DistrictUpsertWithWhereUniqueWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    update: InstanceType<typeof DistrictUpdateWithoutOnVoucherSettingInput>;
    create: InstanceType<typeof DistrictCreateWithoutOnVoucherSettingInput>;
}
export declare class DistrictUpsertWithoutSubdistrictsInput {
    update: InstanceType<typeof DistrictUpdateWithoutSubdistrictsInput>;
    create: InstanceType<typeof DistrictCreateWithoutSubdistrictsInput>;
    where?: InstanceType<typeof DistrictWhereInput>;
}
export declare class DistrictWhereUniqueInput {
    id?: number;
    AND?: Array<DistrictWhereInput>;
    OR?: Array<DistrictWhereInput>;
    NOT?: Array<DistrictWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    cityId?: InstanceType<typeof IntFilter>;
    city?: InstanceType<typeof CityRelationFilter>;
    subdistricts?: InstanceType<typeof SubdistrictListRelationFilter>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class DistrictWhereInput {
    AND?: Array<DistrictWhereInput>;
    OR?: Array<DistrictWhereInput>;
    NOT?: Array<DistrictWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    cityId?: InstanceType<typeof IntFilter>;
    city?: InstanceType<typeof CityRelationFilter>;
    subdistricts?: InstanceType<typeof SubdistrictListRelationFilter>;
    onOutletLaundryItemServiceArea?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class District {
    id: number;
    name: string;
    cityId: number;
    city?: InstanceType<typeof City>;
    subdistricts?: Array<Subdistrict>;
    onOutletLaundryItemServiceArea?: Array<OutletLaundryItemService>;
    onVoucherSetting?: Array<VoucherSetting>;
    _count?: InstanceType<typeof DistrictCount>;
}
export declare class FindFirstDistrictOrThrowArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
    orderBy?: Array<DistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DistrictScalarFieldEnum>;
}
export declare class FindFirstDistrictArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
    orderBy?: Array<DistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DistrictScalarFieldEnum>;
}
export declare class FindManyDistrictArgs {
    where?: InstanceType<typeof DistrictWhereInput>;
    orderBy?: Array<DistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof DistrictScalarFieldEnum>;
}
export declare class FindUniqueDistrictOrThrowArgs {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
}
export declare class FindUniqueDistrictArgs {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
}
export declare class UpdateManyDistrictArgs {
    data: InstanceType<typeof DistrictUpdateManyMutationInput>;
    where?: InstanceType<typeof DistrictWhereInput>;
}
export declare class UpdateOneDistrictArgs {
    data: InstanceType<typeof DistrictUpdateInput>;
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
}
export declare class UpsertOneDistrictArgs {
    where: Prisma.AtLeast<DistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof DistrictCreateInput>;
    update: InstanceType<typeof DistrictUpdateInput>;
}
export declare class AggregateEdcMachine {
    _count?: InstanceType<typeof EdcMachineCountAggregate>;
    _avg?: InstanceType<typeof EdcMachineAvgAggregate>;
    _sum?: InstanceType<typeof EdcMachineSumAggregate>;
    _min?: InstanceType<typeof EdcMachineMinAggregate>;
    _max?: InstanceType<typeof EdcMachineMaxAggregate>;
}
export declare class CreateManyEdcMachineArgs {
    data: Array<EdcMachineCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneEdcMachineArgs {
    data: InstanceType<typeof EdcMachineCreateInput>;
}
export declare class DeleteManyEdcMachineArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
}
export declare class DeleteOneEdcMachineArgs {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
}
export declare class EdcMachineAggregateArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    orderBy?: Array<EdcMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EdcMachineCountAggregateInput>;
    _avg?: InstanceType<typeof EdcMachineAvgAggregateInput>;
    _sum?: InstanceType<typeof EdcMachineSumAggregateInput>;
    _min?: InstanceType<typeof EdcMachineMinAggregateInput>;
    _max?: InstanceType<typeof EdcMachineMaxAggregateInput>;
}
export declare class EdcMachineAvgAggregateInput {
    id?: true;
    settlementAccountId?: true;
    outletId?: true;
}
export declare class EdcMachineAvgAggregate {
    id?: number;
    settlementAccountId?: number;
    outletId?: number;
}
export declare class EdcMachineAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EdcMachineCountAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    serialNumber?: true;
    settlementAccountId?: true;
    outletId?: true;
    _all?: true;
}
export declare class EdcMachineCountAggregate {
    id: number;
    name: number;
    isActive: number;
    serialNumber: number;
    settlementAccountId: number;
    outletId: number;
    _all: number;
}
export declare class EdcMachineCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EdcMachineCount {
    payments?: number;
}
export declare class EdcMachineCreateManyOutletInputEnvelope {
    data: Array<EdcMachineCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class EdcMachineCreateManyOutletInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccountId: number;
}
export declare class EdcMachineCreateManySettlementAccountInputEnvelope {
    data: Array<EdcMachineCreateManySettlementAccountInput>;
    skipDuplicates?: boolean;
}
export declare class EdcMachineCreateManySettlementAccountInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    outletId: number;
}
export declare class EdcMachineCreateManyInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccountId: number;
    outletId: number;
}
export declare class EdcMachineCreateNestedManyWithoutOutletInput {
    create?: Array<EdcMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
}
export declare class EdcMachineCreateNestedManyWithoutSettlementAccountInput {
    create?: Array<EdcMachineCreateWithoutSettlementAccountInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutSettlementAccountInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManySettlementAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
}
export declare class EdcMachineCreateNestedOneWithoutPaymentsInput {
    create?: InstanceType<typeof EdcMachineCreateWithoutPaymentsInput>;
    connectOrCreate?: InstanceType<typeof EdcMachineCreateOrConnectWithoutPaymentsInput>;
    connect?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
}
export declare class EdcMachineCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    create: InstanceType<typeof EdcMachineCreateWithoutOutletInput>;
}
export declare class EdcMachineCreateOrConnectWithoutPaymentsInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    create: InstanceType<typeof EdcMachineCreateWithoutPaymentsInput>;
}
export declare class EdcMachineCreateOrConnectWithoutSettlementAccountInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    create: InstanceType<typeof EdcMachineCreateWithoutSettlementAccountInput>;
}
export declare class EdcMachineCreateWithoutOutletInput {
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccount: InstanceType<typeof AccountCreateNestedOneWithoutEdcMachineInput>;
    payments?: InstanceType<typeof PaymentCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineCreateWithoutPaymentsInput {
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccount: InstanceType<typeof AccountCreateNestedOneWithoutEdcMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEdcMachinesInput>;
}
export declare class EdcMachineCreateWithoutSettlementAccountInput {
    name: string;
    isActive?: boolean;
    serialNumber: string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEdcMachinesInput>;
    payments?: InstanceType<typeof PaymentCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineCreateInput {
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccount: InstanceType<typeof AccountCreateNestedOneWithoutEdcMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEdcMachinesInput>;
    payments?: InstanceType<typeof PaymentCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineGroupByArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    orderBy?: Array<EdcMachineOrderByWithAggregationInput>;
    by: Array<keyof typeof EdcMachineScalarFieldEnum>;
    having?: InstanceType<typeof EdcMachineScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EdcMachineCountAggregateInput>;
    _avg?: InstanceType<typeof EdcMachineAvgAggregateInput>;
    _sum?: InstanceType<typeof EdcMachineSumAggregateInput>;
    _min?: InstanceType<typeof EdcMachineMinAggregateInput>;
    _max?: InstanceType<typeof EdcMachineMaxAggregateInput>;
}
export declare class EdcMachineGroupBy {
    id: number;
    name: string;
    isActive: boolean;
    serialNumber: string;
    settlementAccountId: number;
    outletId: number;
    _count?: InstanceType<typeof EdcMachineCountAggregate>;
    _avg?: InstanceType<typeof EdcMachineAvgAggregate>;
    _sum?: InstanceType<typeof EdcMachineSumAggregate>;
    _min?: InstanceType<typeof EdcMachineMinAggregate>;
    _max?: InstanceType<typeof EdcMachineMaxAggregate>;
}
export declare class EdcMachineListRelationFilter {
    every?: InstanceType<typeof EdcMachineWhereInput>;
    some?: InstanceType<typeof EdcMachineWhereInput>;
    none?: InstanceType<typeof EdcMachineWhereInput>;
}
export declare class EdcMachineMaxAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    serialNumber?: true;
    settlementAccountId?: true;
    outletId?: true;
}
export declare class EdcMachineMaxAggregate {
    id?: number;
    name?: string;
    isActive?: boolean;
    serialNumber?: string;
    settlementAccountId?: number;
    outletId?: number;
}
export declare class EdcMachineMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EdcMachineMinAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    serialNumber?: true;
    settlementAccountId?: true;
    outletId?: true;
}
export declare class EdcMachineMinAggregate {
    id?: number;
    name?: string;
    isActive?: boolean;
    serialNumber?: string;
    settlementAccountId?: number;
    outletId?: number;
}
export declare class EdcMachineMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EdcMachineNullableRelationFilter {
    is?: InstanceType<typeof EdcMachineWhereInput>;
    isNot?: InstanceType<typeof EdcMachineWhereInput>;
}
export declare class EdcMachineOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class EdcMachineOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof EdcMachineCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof EdcMachineAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof EdcMachineMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof EdcMachineMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof EdcMachineSumOrderByAggregateInput>;
}
export declare class EdcMachineOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    settlementAccount?: InstanceType<typeof AccountOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    payments?: InstanceType<typeof PaymentOrderByRelationAggregateInput>;
}
export declare class EdcMachineScalarWhereWithAggregatesInput {
    AND?: Array<EdcMachineScalarWhereWithAggregatesInput>;
    OR?: Array<EdcMachineScalarWhereWithAggregatesInput>;
    NOT?: Array<EdcMachineScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    isActive?: InstanceType<typeof BoolWithAggregatesFilter>;
    serialNumber?: InstanceType<typeof StringWithAggregatesFilter>;
    settlementAccountId?: InstanceType<typeof IntWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class EdcMachineScalarWhereInput {
    AND?: Array<EdcMachineScalarWhereInput>;
    OR?: Array<EdcMachineScalarWhereInput>;
    NOT?: Array<EdcMachineScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    serialNumber?: InstanceType<typeof StringFilter>;
    settlementAccountId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
}
export declare class EdcMachineSumAggregateInput {
    id?: true;
    settlementAccountId?: true;
    outletId?: true;
}
export declare class EdcMachineSumAggregate {
    id?: number;
    settlementAccountId?: number;
    outletId?: number;
}
export declare class EdcMachineSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    settlementAccountId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EdcMachineUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<EdcMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
}
export declare class EdcMachineUncheckedCreateNestedManyWithoutSettlementAccountInput {
    create?: Array<EdcMachineCreateWithoutSettlementAccountInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutSettlementAccountInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManySettlementAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
}
export declare class EdcMachineUncheckedCreateWithoutOutletInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccountId: number;
    payments?: InstanceType<typeof PaymentUncheckedCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineUncheckedCreateWithoutPaymentsInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccountId: number;
    outletId: number;
}
export declare class EdcMachineUncheckedCreateWithoutSettlementAccountInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    outletId: number;
    payments?: InstanceType<typeof PaymentUncheckedCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineUncheckedCreateInput {
    id?: number;
    name: string;
    isActive?: boolean;
    serialNumber: string;
    settlementAccountId: number;
    outletId: number;
    payments?: InstanceType<typeof PaymentUncheckedCreateNestedManyWithoutEdcMachineInput>;
}
export declare class EdcMachineUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<EdcMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<EdcMachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    disconnect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    delete?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    update?: Array<EdcMachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<EdcMachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<EdcMachineScalarWhereInput>;
}
export declare class EdcMachineUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class EdcMachineUncheckedUpdateManyWithoutSettlementAccountNestedInput {
    create?: Array<EdcMachineCreateWithoutSettlementAccountInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutSettlementAccountInput>;
    upsert?: Array<EdcMachineUpsertWithWhereUniqueWithoutSettlementAccountInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManySettlementAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    disconnect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    delete?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    update?: Array<EdcMachineUpdateWithWhereUniqueWithoutSettlementAccountInput>;
    updateMany?: Array<EdcMachineUpdateManyWithWhereWithoutSettlementAccountInput>;
    deleteMany?: Array<EdcMachineScalarWhereInput>;
}
export declare class EdcMachineUncheckedUpdateManyWithoutSettlementAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class EdcMachineUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class EdcMachineUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    payments?: InstanceType<typeof PaymentUncheckedUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUncheckedUpdateWithoutPaymentsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class EdcMachineUncheckedUpdateWithoutSettlementAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    payments?: InstanceType<typeof PaymentUncheckedUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    payments?: InstanceType<typeof PaymentUncheckedUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class EdcMachineUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof EdcMachineScalarWhereInput>;
    data: InstanceType<typeof EdcMachineUpdateManyMutationInput>;
}
export declare class EdcMachineUpdateManyWithWhereWithoutSettlementAccountInput {
    where: InstanceType<typeof EdcMachineScalarWhereInput>;
    data: InstanceType<typeof EdcMachineUpdateManyMutationInput>;
}
export declare class EdcMachineUpdateManyWithoutOutletNestedInput {
    create?: Array<EdcMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<EdcMachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    disconnect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    delete?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    update?: Array<EdcMachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<EdcMachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<EdcMachineScalarWhereInput>;
}
export declare class EdcMachineUpdateManyWithoutSettlementAccountNestedInput {
    create?: Array<EdcMachineCreateWithoutSettlementAccountInput>;
    connectOrCreate?: Array<EdcMachineCreateOrConnectWithoutSettlementAccountInput>;
    upsert?: Array<EdcMachineUpsertWithWhereUniqueWithoutSettlementAccountInput>;
    createMany?: InstanceType<typeof EdcMachineCreateManySettlementAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    disconnect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    delete?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    connect?: Array<Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>>;
    update?: Array<EdcMachineUpdateWithWhereUniqueWithoutSettlementAccountInput>;
    updateMany?: Array<EdcMachineUpdateManyWithWhereWithoutSettlementAccountInput>;
    deleteMany?: Array<EdcMachineScalarWhereInput>;
}
export declare class EdcMachineUpdateOneWithoutPaymentsNestedInput {
    create?: InstanceType<typeof EdcMachineCreateWithoutPaymentsInput>;
    connectOrCreate?: InstanceType<typeof EdcMachineCreateOrConnectWithoutPaymentsInput>;
    upsert?: InstanceType<typeof EdcMachineUpsertWithoutPaymentsInput>;
    disconnect?: InstanceType<typeof EdcMachineWhereInput>;
    delete?: InstanceType<typeof EdcMachineWhereInput>;
    connect?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    update?: InstanceType<typeof EdcMachineUpdateToOneWithWhereWithoutPaymentsInput>;
}
export declare class EdcMachineUpdateToOneWithWhereWithoutPaymentsInput {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    data: InstanceType<typeof EdcMachineUpdateWithoutPaymentsInput>;
}
export declare class EdcMachineUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    data: InstanceType<typeof EdcMachineUpdateWithoutOutletInput>;
}
export declare class EdcMachineUpdateWithWhereUniqueWithoutSettlementAccountInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    data: InstanceType<typeof EdcMachineUpdateWithoutSettlementAccountInput>;
}
export declare class EdcMachineUpdateWithoutOutletInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutEdcMachineNestedInput>;
    payments?: InstanceType<typeof PaymentUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUpdateWithoutPaymentsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutEdcMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEdcMachinesNestedInput>;
}
export declare class EdcMachineUpdateWithoutSettlementAccountInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEdcMachinesNestedInput>;
    payments?: InstanceType<typeof PaymentUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settlementAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutEdcMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEdcMachinesNestedInput>;
    payments?: InstanceType<typeof PaymentUpdateManyWithoutEdcMachineNestedInput>;
}
export declare class EdcMachineUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    update: InstanceType<typeof EdcMachineUpdateWithoutOutletInput>;
    create: InstanceType<typeof EdcMachineCreateWithoutOutletInput>;
}
export declare class EdcMachineUpsertWithWhereUniqueWithoutSettlementAccountInput {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    update: InstanceType<typeof EdcMachineUpdateWithoutSettlementAccountInput>;
    create: InstanceType<typeof EdcMachineCreateWithoutSettlementAccountInput>;
}
export declare class EdcMachineUpsertWithoutPaymentsInput {
    update: InstanceType<typeof EdcMachineUpdateWithoutPaymentsInput>;
    create: InstanceType<typeof EdcMachineCreateWithoutPaymentsInput>;
    where?: InstanceType<typeof EdcMachineWhereInput>;
}
export declare class EdcMachineWhereUniqueInput {
    id?: number;
    serialNumber?: string;
    AND?: Array<EdcMachineWhereInput>;
    OR?: Array<EdcMachineWhereInput>;
    NOT?: Array<EdcMachineWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    settlementAccountId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    settlementAccount?: InstanceType<typeof AccountRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    payments?: InstanceType<typeof PaymentListRelationFilter>;
}
export declare class EdcMachineWhereInput {
    AND?: Array<EdcMachineWhereInput>;
    OR?: Array<EdcMachineWhereInput>;
    NOT?: Array<EdcMachineWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    serialNumber?: InstanceType<typeof StringFilter>;
    settlementAccountId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    settlementAccount?: InstanceType<typeof AccountRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    payments?: InstanceType<typeof PaymentListRelationFilter>;
}
export declare class EdcMachine {
    id: number;
    name: string;
    isActive: boolean;
    serialNumber: string;
    settlementAccountId: number;
    outletId: number;
    settlementAccount?: InstanceType<typeof Account>;
    outlet?: InstanceType<typeof Outlet>;
    payments?: Array<Payment>;
    _count?: InstanceType<typeof EdcMachineCount>;
}
export declare class FindFirstEdcMachineOrThrowArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    orderBy?: Array<EdcMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EdcMachineScalarFieldEnum>;
}
export declare class FindFirstEdcMachineArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    orderBy?: Array<EdcMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EdcMachineScalarFieldEnum>;
}
export declare class FindManyEdcMachineArgs {
    where?: InstanceType<typeof EdcMachineWhereInput>;
    orderBy?: Array<EdcMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EdcMachineScalarFieldEnum>;
}
export declare class FindUniqueEdcMachineOrThrowArgs {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
}
export declare class FindUniqueEdcMachineArgs {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
}
export declare class UpdateManyEdcMachineArgs {
    data: InstanceType<typeof EdcMachineUpdateManyMutationInput>;
    where?: InstanceType<typeof EdcMachineWhereInput>;
}
export declare class UpdateOneEdcMachineArgs {
    data: InstanceType<typeof EdcMachineUpdateInput>;
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
}
export declare class UpsertOneEdcMachineArgs {
    where: Prisma.AtLeast<EdcMachineWhereUniqueInput, 'id' | 'serialNumber'>;
    create: InstanceType<typeof EdcMachineCreateInput>;
    update: InstanceType<typeof EdcMachineUpdateInput>;
}
export declare class AggregateEmployee {
    _count?: InstanceType<typeof EmployeeCountAggregate>;
    _avg?: InstanceType<typeof EmployeeAvgAggregate>;
    _sum?: InstanceType<typeof EmployeeSumAggregate>;
    _min?: InstanceType<typeof EmployeeMinAggregate>;
    _max?: InstanceType<typeof EmployeeMaxAggregate>;
}
export declare class CreateManyEmployeeArgs {
    data: Array<EmployeeCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneEmployeeArgs {
    data: InstanceType<typeof EmployeeCreateInput>;
}
export declare class DeleteManyEmployeeArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class DeleteOneEmployeeArgs {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeAggregateArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
    orderBy?: Array<EmployeeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EmployeeCountAggregateInput>;
    _avg?: InstanceType<typeof EmployeeAvgAggregateInput>;
    _sum?: InstanceType<typeof EmployeeSumAggregateInput>;
    _min?: InstanceType<typeof EmployeeMinAggregateInput>;
    _max?: InstanceType<typeof EmployeeMaxAggregateInput>;
}
export declare class EmployeeAvgAggregateInput {
    salary?: true;
    attendanceBonus?: true;
    mealAllowance?: true;
    presenceBonus?: true;
    transportationAllowance?: true;
    overtimeBonus?: true;
    EmployeeRoleAllowance?: true;
    outletId?: true;
}
export declare class EmployeeAvgAggregate {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    outletId?: number;
}
export declare class EmployeeAvgOrderByAggregateInput {
    salary?: keyof typeof SortOrder;
    attendanceBonus?: keyof typeof SortOrder;
    mealAllowance?: keyof typeof SortOrder;
    presenceBonus?: keyof typeof SortOrder;
    transportationAllowance?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    EmployeeRoleAllowance?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EmployeeCountAggregateInput {
    salary?: true;
    attendanceBonus?: true;
    mealAllowance?: true;
    presenceBonus?: true;
    transportationAllowance?: true;
    overtimeBonus?: true;
    EmployeeRoleAllowance?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    outletId?: true;
    roles?: true;
    activities?: true;
    _all?: true;
}
export declare class EmployeeCountAggregate {
    salary: number;
    attendanceBonus: number;
    mealAllowance: number;
    presenceBonus: number;
    transportationAllowance: number;
    overtimeBonus: number;
    EmployeeRoleAllowance: number;
    createdAt: number;
    updatedAt: number;
    userId: number;
    outletId: number;
    roles: number;
    activities: number;
    _all: number;
}
export declare class EmployeeCountOrderByAggregateInput {
    salary?: keyof typeof SortOrder;
    attendanceBonus?: keyof typeof SortOrder;
    mealAllowance?: keyof typeof SortOrder;
    presenceBonus?: keyof typeof SortOrder;
    transportationAllowance?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    EmployeeRoleAllowance?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    roles?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
}
export declare class EmployeeCount {
    activityComissions?: number;
    accessRolePermissions?: number;
    serviceOrder?: number;
    attendances?: number;
    deliveries?: number;
}
export declare class EmployeeCreateManyOutletInputEnvelope {
    data: Array<EmployeeCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class EmployeeCreateManyOutletInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
}
export declare class EmployeeCreateManyInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
}
export declare class EmployeeCreateNestedManyWithoutOutletInput {
    create?: Array<EmployeeCreateWithoutOutletInput>;
    connectOrCreate?: Array<EmployeeCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof EmployeeCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
}
export declare class EmployeeCreateNestedOneWithoutAccessRolePermissionsInput {
    create?: InstanceType<typeof EmployeeCreateWithoutAccessRolePermissionsInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutAccessRolePermissionsInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateNestedOneWithoutActivityComissionsInput {
    create?: InstanceType<typeof EmployeeCreateWithoutActivityComissionsInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutActivityComissionsInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateNestedOneWithoutAttendancesInput {
    create?: InstanceType<typeof EmployeeCreateWithoutAttendancesInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutAttendancesInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateNestedOneWithoutDeliveriesInput {
    create?: InstanceType<typeof EmployeeCreateWithoutDeliveriesInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutDeliveriesInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateNestedOneWithoutServiceOrderInput {
    create?: InstanceType<typeof EmployeeCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutServiceOrderInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof EmployeeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeCreateOrConnectWithoutAccessRolePermissionsInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutAccessRolePermissionsInput>;
}
export declare class EmployeeCreateOrConnectWithoutActivityComissionsInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutActivityComissionsInput>;
}
export declare class EmployeeCreateOrConnectWithoutAttendancesInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutAttendancesInput>;
}
export declare class EmployeeCreateOrConnectWithoutDeliveriesInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutDeliveriesInput>;
}
export declare class EmployeeCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutOutletInput>;
}
export declare class EmployeeCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutServiceOrderInput>;
}
export declare class EmployeeCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateWithoutUserInput>;
}
export declare class EmployeeCreateWithoutAccessRolePermissionsInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateWithoutActivityComissionsInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateWithoutAttendancesInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateWithoutDeliveriesInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
}
export declare class EmployeeCreateWithoutOutletInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateWithoutServiceOrderInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateWithoutUserInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    user: InstanceType<typeof UserCreateNestedOneWithoutEmployeeInfoInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutEmployeesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeCreateactivitiesInput {
    set: Array<keyof typeof ItemActivity>;
}
export declare class EmployeeCreaterolesInput {
    set: Array<keyof typeof EmployeeRole>;
}
export declare class EmployeeGroupByArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
    orderBy?: Array<EmployeeOrderByWithAggregationInput>;
    by: Array<keyof typeof EmployeeScalarFieldEnum>;
    having?: InstanceType<typeof EmployeeScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EmployeeCountAggregateInput>;
    _avg?: InstanceType<typeof EmployeeAvgAggregateInput>;
    _sum?: InstanceType<typeof EmployeeSumAggregateInput>;
    _min?: InstanceType<typeof EmployeeMinAggregateInput>;
    _max?: InstanceType<typeof EmployeeMaxAggregateInput>;
}
export declare class EmployeeGroupBy {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    userId: string;
    outletId: number;
    roles?: Array<keyof typeof EmployeeRole>;
    activities?: Array<keyof typeof ItemActivity>;
    _count?: InstanceType<typeof EmployeeCountAggregate>;
    _avg?: InstanceType<typeof EmployeeAvgAggregate>;
    _sum?: InstanceType<typeof EmployeeSumAggregate>;
    _min?: InstanceType<typeof EmployeeMinAggregate>;
    _max?: InstanceType<typeof EmployeeMaxAggregate>;
}
export declare class EmployeeListRelationFilter {
    every?: InstanceType<typeof EmployeeWhereInput>;
    some?: InstanceType<typeof EmployeeWhereInput>;
    none?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeMaxAggregateInput {
    salary?: true;
    attendanceBonus?: true;
    mealAllowance?: true;
    presenceBonus?: true;
    transportationAllowance?: true;
    overtimeBonus?: true;
    EmployeeRoleAllowance?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    outletId?: true;
}
export declare class EmployeeMaxAggregate {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    outletId?: number;
}
export declare class EmployeeMaxOrderByAggregateInput {
    salary?: keyof typeof SortOrder;
    attendanceBonus?: keyof typeof SortOrder;
    mealAllowance?: keyof typeof SortOrder;
    presenceBonus?: keyof typeof SortOrder;
    transportationAllowance?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    EmployeeRoleAllowance?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EmployeeMinAggregateInput {
    salary?: true;
    attendanceBonus?: true;
    mealAllowance?: true;
    presenceBonus?: true;
    transportationAllowance?: true;
    overtimeBonus?: true;
    EmployeeRoleAllowance?: true;
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    outletId?: true;
}
export declare class EmployeeMinAggregate {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
    outletId?: number;
}
export declare class EmployeeMinOrderByAggregateInput {
    salary?: keyof typeof SortOrder;
    attendanceBonus?: keyof typeof SortOrder;
    mealAllowance?: keyof typeof SortOrder;
    presenceBonus?: keyof typeof SortOrder;
    transportationAllowance?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    EmployeeRoleAllowance?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EmployeeNullableRelationFilter {
    is?: InstanceType<typeof EmployeeWhereInput>;
    isNot?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class EmployeeOrderByWithAggregationInput {
    salary?: InstanceType<typeof SortOrderInput>;
    attendanceBonus?: InstanceType<typeof SortOrderInput>;
    mealAllowance?: InstanceType<typeof SortOrderInput>;
    presenceBonus?: InstanceType<typeof SortOrderInput>;
    transportationAllowance?: InstanceType<typeof SortOrderInput>;
    overtimeBonus?: InstanceType<typeof SortOrderInput>;
    EmployeeRoleAllowance?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    roles?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
    _count?: InstanceType<typeof EmployeeCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof EmployeeAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof EmployeeMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof EmployeeMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof EmployeeSumOrderByAggregateInput>;
}
export declare class EmployeeOrderByWithRelationInput {
    salary?: InstanceType<typeof SortOrderInput>;
    attendanceBonus?: InstanceType<typeof SortOrderInput>;
    mealAllowance?: InstanceType<typeof SortOrderInput>;
    presenceBonus?: InstanceType<typeof SortOrderInput>;
    transportationAllowance?: InstanceType<typeof SortOrderInput>;
    overtimeBonus?: InstanceType<typeof SortOrderInput>;
    EmployeeRoleAllowance?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    roles?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionOrderByRelationAggregateInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionOrderByRelationAggregateInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
    attendances?: InstanceType<typeof AttendanceOrderByRelationAggregateInput>;
    deliveries?: InstanceType<typeof DeliveryOrderByRelationAggregateInput>;
}
export declare class EmployeeRelationFilter {
    is?: InstanceType<typeof EmployeeWhereInput>;
    isNot?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeScalarWhereWithAggregatesInput {
    AND?: Array<EmployeeScalarWhereWithAggregatesInput>;
    OR?: Array<EmployeeScalarWhereWithAggregatesInput>;
    NOT?: Array<EmployeeScalarWhereWithAggregatesInput>;
    salary?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    attendanceBonus?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    mealAllowance?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    presenceBonus?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    transportationAllowance?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    EmployeeRoleAllowance?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
    roles?: InstanceType<typeof EnumEmployeeRoleNullableListFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
}
export declare class EmployeeScalarWhereInput {
    AND?: Array<EmployeeScalarWhereInput>;
    OR?: Array<EmployeeScalarWhereInput>;
    NOT?: Array<EmployeeScalarWhereInput>;
    salary?: InstanceType<typeof FloatNullableFilter>;
    attendanceBonus?: InstanceType<typeof FloatNullableFilter>;
    mealAllowance?: InstanceType<typeof FloatNullableFilter>;
    presenceBonus?: InstanceType<typeof FloatNullableFilter>;
    transportationAllowance?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    EmployeeRoleAllowance?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    roles?: InstanceType<typeof EnumEmployeeRoleNullableListFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
}
export declare class EmployeeSumAggregateInput {
    salary?: true;
    attendanceBonus?: true;
    mealAllowance?: true;
    presenceBonus?: true;
    transportationAllowance?: true;
    overtimeBonus?: true;
    EmployeeRoleAllowance?: true;
    outletId?: true;
}
export declare class EmployeeSumAggregate {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    outletId?: number;
}
export declare class EmployeeSumOrderByAggregateInput {
    salary?: keyof typeof SortOrder;
    attendanceBonus?: keyof typeof SortOrder;
    mealAllowance?: keyof typeof SortOrder;
    presenceBonus?: keyof typeof SortOrder;
    transportationAllowance?: keyof typeof SortOrder;
    overtimeBonus?: keyof typeof SortOrder;
    EmployeeRoleAllowance?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class EmployeeUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<EmployeeCreateWithoutOutletInput>;
    connectOrCreate?: Array<EmployeeCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof EmployeeCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
}
export declare class EmployeeUncheckedCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof EmployeeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class EmployeeUncheckedCreateWithoutAccessRolePermissionsInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateWithoutActivityComissionsInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateWithoutAttendancesInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateWithoutDeliveriesInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
}
export declare class EmployeeUncheckedCreateWithoutOutletInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateWithoutServiceOrderInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateWithoutUserInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedCreateInput {
    salary?: number;
    attendanceBonus?: number;
    mealAllowance?: number;
    presenceBonus?: number;
    transportationAllowance?: number;
    overtimeBonus?: number;
    EmployeeRoleAllowance?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId: string;
    outletId: number;
    roles?: InstanceType<typeof EmployeeCreaterolesInput>;
    activities?: InstanceType<typeof EmployeeCreateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedCreateNestedManyWithoutEmployeeInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutEmployeeInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedCreateNestedManyWithoutAssignedDriverInput>;
}
export declare class EmployeeUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<EmployeeCreateWithoutOutletInput>;
    connectOrCreate?: Array<EmployeeCreateOrConnectWithoutOutletInput>;
    upsert?: Array<EmployeeUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof EmployeeCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    disconnect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    delete?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    connect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    update?: Array<EmployeeUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<EmployeeUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<EmployeeScalarWhereInput>;
}
export declare class EmployeeUncheckedUpdateManyWithoutOutletInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
}
export declare class EmployeeUncheckedUpdateManyInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
}
export declare class EmployeeUncheckedUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof EmployeeWhereInput>;
    delete?: InstanceType<typeof EmployeeWhereInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutUserInput>;
}
export declare class EmployeeUncheckedUpdateWithoutAccessRolePermissionsInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutActivityComissionsInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutAttendancesInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutDeliveriesInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutOutletInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutServiceOrderInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateWithoutUserInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUncheckedUpdateInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUncheckedUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUncheckedUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateManyMutationInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
}
export declare class EmployeeUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof EmployeeScalarWhereInput>;
    data: InstanceType<typeof EmployeeUpdateManyMutationInput>;
}
export declare class EmployeeUpdateManyWithoutOutletNestedInput {
    create?: Array<EmployeeCreateWithoutOutletInput>;
    connectOrCreate?: Array<EmployeeCreateOrConnectWithoutOutletInput>;
    upsert?: Array<EmployeeUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof EmployeeCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    disconnect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    delete?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    connect?: Array<Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>>;
    update?: Array<EmployeeUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<EmployeeUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<EmployeeScalarWhereInput>;
}
export declare class EmployeeUpdateOneRequiredWithoutActivityComissionsNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutActivityComissionsInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutActivityComissionsInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutActivityComissionsInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutActivityComissionsInput>;
}
export declare class EmployeeUpdateOneRequiredWithoutAttendancesNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutAttendancesInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutAttendancesInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutAttendancesInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutAttendancesInput>;
}
export declare class EmployeeUpdateOneWithoutAccessRolePermissionsNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutAccessRolePermissionsInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutAccessRolePermissionsInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutAccessRolePermissionsInput>;
    disconnect?: InstanceType<typeof EmployeeWhereInput>;
    delete?: InstanceType<typeof EmployeeWhereInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutAccessRolePermissionsInput>;
}
export declare class EmployeeUpdateOneWithoutDeliveriesNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutDeliveriesInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutDeliveriesInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutDeliveriesInput>;
    disconnect?: InstanceType<typeof EmployeeWhereInput>;
    delete?: InstanceType<typeof EmployeeWhereInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutDeliveriesInput>;
}
export declare class EmployeeUpdateOneWithoutServiceOrderNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutServiceOrderInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutServiceOrderInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutServiceOrderInput>;
    disconnect?: InstanceType<typeof EmployeeWhereInput>;
    delete?: InstanceType<typeof EmployeeWhereInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutServiceOrderInput>;
}
export declare class EmployeeUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof EmployeeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof EmployeeCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof EmployeeUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof EmployeeWhereInput>;
    delete?: InstanceType<typeof EmployeeWhereInput>;
    connect?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof EmployeeUpdateToOneWithWhereWithoutUserInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutAccessRolePermissionsInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutAccessRolePermissionsInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutActivityComissionsInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutActivityComissionsInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutAttendancesInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutAttendancesInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutDeliveriesInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutDeliveriesInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutServiceOrderInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutServiceOrderInput>;
}
export declare class EmployeeUpdateToOneWithWhereWithoutUserInput {
    where?: InstanceType<typeof EmployeeWhereInput>;
    data: InstanceType<typeof EmployeeUpdateWithoutUserInput>;
}
export declare class EmployeeUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    data: InstanceType<typeof EmployeeUpdateWithoutOutletInput>;
}
export declare class EmployeeUpdateWithoutAccessRolePermissionsInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateWithoutActivityComissionsInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateWithoutAttendancesInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateWithoutDeliveriesInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
}
export declare class EmployeeUpdateWithoutOutletInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateWithoutServiceOrderInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateWithoutUserInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateInput {
    salary?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    attendanceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    mealAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    presenceBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    transportationAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    overtimeBonus?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    EmployeeRoleAllowance?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    roles?: InstanceType<typeof EmployeeUpdaterolesInput>;
    activities?: InstanceType<typeof EmployeeUpdateactivitiesInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutEmployeeInfoNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutEmployeesNestedInput>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionUpdateManyWithoutEmployeeNestedInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateManyWithoutHandleByNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutEmployeeNestedInput>;
    deliveries?: InstanceType<typeof DeliveryUpdateManyWithoutAssignedDriverNestedInput>;
}
export declare class EmployeeUpdateactivitiesInput {
    set?: Array<keyof typeof ItemActivity>;
    push?: Array<keyof typeof ItemActivity>;
}
export declare class EmployeeUpdaterolesInput {
    set?: Array<keyof typeof EmployeeRole>;
    push?: Array<keyof typeof EmployeeRole>;
}
export declare class EmployeeUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    update: InstanceType<typeof EmployeeUpdateWithoutOutletInput>;
    create: InstanceType<typeof EmployeeCreateWithoutOutletInput>;
}
export declare class EmployeeUpsertWithoutAccessRolePermissionsInput {
    update: InstanceType<typeof EmployeeUpdateWithoutAccessRolePermissionsInput>;
    create: InstanceType<typeof EmployeeCreateWithoutAccessRolePermissionsInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeUpsertWithoutActivityComissionsInput {
    update: InstanceType<typeof EmployeeUpdateWithoutActivityComissionsInput>;
    create: InstanceType<typeof EmployeeCreateWithoutActivityComissionsInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeUpsertWithoutAttendancesInput {
    update: InstanceType<typeof EmployeeUpdateWithoutAttendancesInput>;
    create: InstanceType<typeof EmployeeCreateWithoutAttendancesInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeUpsertWithoutDeliveriesInput {
    update: InstanceType<typeof EmployeeUpdateWithoutDeliveriesInput>;
    create: InstanceType<typeof EmployeeCreateWithoutDeliveriesInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeUpsertWithoutServiceOrderInput {
    update: InstanceType<typeof EmployeeUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof EmployeeCreateWithoutServiceOrderInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeUpsertWithoutUserInput {
    update: InstanceType<typeof EmployeeUpdateWithoutUserInput>;
    create: InstanceType<typeof EmployeeCreateWithoutUserInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class EmployeeWhereUniqueInput {
    userId?: string;
    AND?: Array<EmployeeWhereInput>;
    OR?: Array<EmployeeWhereInput>;
    NOT?: Array<EmployeeWhereInput>;
    salary?: InstanceType<typeof FloatNullableFilter>;
    attendanceBonus?: InstanceType<typeof FloatNullableFilter>;
    mealAllowance?: InstanceType<typeof FloatNullableFilter>;
    presenceBonus?: InstanceType<typeof FloatNullableFilter>;
    transportationAllowance?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    EmployeeRoleAllowance?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    roles?: InstanceType<typeof EnumEmployeeRoleNullableListFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionListRelationFilter>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionListRelationFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
    attendances?: InstanceType<typeof AttendanceListRelationFilter>;
    deliveries?: InstanceType<typeof DeliveryListRelationFilter>;
}
export declare class EmployeeWhereInput {
    AND?: Array<EmployeeWhereInput>;
    OR?: Array<EmployeeWhereInput>;
    NOT?: Array<EmployeeWhereInput>;
    salary?: InstanceType<typeof FloatNullableFilter>;
    attendanceBonus?: InstanceType<typeof FloatNullableFilter>;
    mealAllowance?: InstanceType<typeof FloatNullableFilter>;
    presenceBonus?: InstanceType<typeof FloatNullableFilter>;
    transportationAllowance?: InstanceType<typeof FloatNullableFilter>;
    overtimeBonus?: InstanceType<typeof FloatNullableFilter>;
    EmployeeRoleAllowance?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    roles?: InstanceType<typeof EnumEmployeeRoleNullableListFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    activityComissions?: InstanceType<typeof EmployeeActivityComissionListRelationFilter>;
    accessRolePermissions?: InstanceType<typeof AccessRolePermissionListRelationFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderListRelationFilter>;
    attendances?: InstanceType<typeof AttendanceListRelationFilter>;
    deliveries?: InstanceType<typeof DeliveryListRelationFilter>;
}
export declare class Employee {
    salary: number | null;
    attendanceBonus: number | null;
    mealAllowance: number | null;
    presenceBonus: number | null;
    transportationAllowance: number | null;
    overtimeBonus: number | null;
    EmployeeRoleAllowance: number | null;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    outletId: number;
    roles: Array<keyof typeof EmployeeRole>;
    activities: Array<keyof typeof ItemActivity>;
    user?: InstanceType<typeof User>;
    outlet?: InstanceType<typeof Outlet>;
    activityComissions?: Array<EmployeeActivityComission>;
    accessRolePermissions?: Array<AccessRolePermission>;
    serviceOrder?: Array<ServiceOrder>;
    attendances?: Array<Attendance>;
    deliveries?: Array<Delivery>;
    _count?: InstanceType<typeof EmployeeCount>;
}
export declare class FindFirstEmployeeOrThrowArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
    orderBy?: Array<EmployeeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeScalarFieldEnum>;
}
export declare class FindFirstEmployeeArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
    orderBy?: Array<EmployeeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeScalarFieldEnum>;
}
export declare class FindManyEmployeeArgs {
    where?: InstanceType<typeof EmployeeWhereInput>;
    orderBy?: Array<EmployeeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeScalarFieldEnum>;
}
export declare class FindUniqueEmployeeOrThrowArgs {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class FindUniqueEmployeeArgs {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class UpdateManyEmployeeArgs {
    data: InstanceType<typeof EmployeeUpdateManyMutationInput>;
    where?: InstanceType<typeof EmployeeWhereInput>;
}
export declare class UpdateOneEmployeeArgs {
    data: InstanceType<typeof EmployeeUpdateInput>;
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
}
export declare class UpsertOneEmployeeArgs {
    where: Prisma.AtLeast<EmployeeWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof EmployeeCreateInput>;
    update: InstanceType<typeof EmployeeUpdateInput>;
}
export declare class AggregateEmployeeActivityComission {
    _count?: InstanceType<typeof EmployeeActivityComissionCountAggregate>;
    _avg?: InstanceType<typeof EmployeeActivityComissionAvgAggregate>;
    _sum?: InstanceType<typeof EmployeeActivityComissionSumAggregate>;
    _min?: InstanceType<typeof EmployeeActivityComissionMinAggregate>;
    _max?: InstanceType<typeof EmployeeActivityComissionMaxAggregate>;
}
export declare class CreateManyEmployeeActivityComissionArgs {
    data: Array<EmployeeActivityComissionCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneEmployeeActivityComissionArgs {
    data: InstanceType<typeof EmployeeActivityComissionCreateInput>;
}
export declare class DeleteManyEmployeeActivityComissionArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
}
export declare class DeleteOneEmployeeActivityComissionArgs {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
}
export declare class EmployeeActivityComissionAggregateArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    orderBy?: Array<EmployeeActivityComissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EmployeeActivityComissionCountAggregateInput>;
    _avg?: InstanceType<typeof EmployeeActivityComissionAvgAggregateInput>;
    _sum?: InstanceType<typeof EmployeeActivityComissionSumAggregateInput>;
    _min?: InstanceType<typeof EmployeeActivityComissionMinAggregateInput>;
    _max?: InstanceType<typeof EmployeeActivityComissionMaxAggregateInput>;
}
export declare class EmployeeActivityComissionAvgAggregateInput {
    id?: true;
    comission?: true;
}
export declare class EmployeeActivityComissionAvgAggregate {
    id?: number;
    comission?: number;
}
export declare class EmployeeActivityComissionAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionCountAggregateInput {
    id?: true;
    activity?: true;
    comission?: true;
    createdAt?: true;
    updatedAt?: true;
    period?: true;
    employeeId?: true;
    _all?: true;
}
export declare class EmployeeActivityComissionCountAggregate {
    id: number;
    activity: number;
    comission: number;
    createdAt: number;
    updatedAt: number;
    period: number;
    employeeId: number;
    _all: number;
}
export declare class EmployeeActivityComissionCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    activity?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    period?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionCreateManyEmployeeInputEnvelope {
    data: Array<EmployeeActivityComissionCreateManyEmployeeInput>;
    skipDuplicates?: boolean;
}
export declare class EmployeeActivityComissionCreateManyEmployeeInput {
    id?: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
}
export declare class EmployeeActivityComissionCreateManyInput {
    id?: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
    employeeId: string;
}
export declare class EmployeeActivityComissionCreateNestedManyWithoutEmployeeInput {
    create?: Array<EmployeeActivityComissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<EmployeeActivityComissionCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof EmployeeActivityComissionCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
}
export declare class EmployeeActivityComissionCreateOrConnectWithoutEmployeeInput {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof EmployeeActivityComissionCreateWithoutEmployeeInput>;
}
export declare class EmployeeActivityComissionCreateWithoutEmployeeInput {
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
}
export declare class EmployeeActivityComissionCreateInput {
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
    employee: InstanceType<typeof EmployeeCreateNestedOneWithoutActivityComissionsInput>;
}
export declare class EmployeeActivityComissionGroupByArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    orderBy?: Array<EmployeeActivityComissionOrderByWithAggregationInput>;
    by: Array<keyof typeof EmployeeActivityComissionScalarFieldEnum>;
    having?: InstanceType<typeof EmployeeActivityComissionScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof EmployeeActivityComissionCountAggregateInput>;
    _avg?: InstanceType<typeof EmployeeActivityComissionAvgAggregateInput>;
    _sum?: InstanceType<typeof EmployeeActivityComissionSumAggregateInput>;
    _min?: InstanceType<typeof EmployeeActivityComissionMinAggregateInput>;
    _max?: InstanceType<typeof EmployeeActivityComissionMaxAggregateInput>;
}
export declare class EmployeeActivityComissionGroupBy {
    id: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    period: keyof typeof Period;
    employeeId: string;
    _count?: InstanceType<typeof EmployeeActivityComissionCountAggregate>;
    _avg?: InstanceType<typeof EmployeeActivityComissionAvgAggregate>;
    _sum?: InstanceType<typeof EmployeeActivityComissionSumAggregate>;
    _min?: InstanceType<typeof EmployeeActivityComissionMinAggregate>;
    _max?: InstanceType<typeof EmployeeActivityComissionMaxAggregate>;
}
export declare class EmployeeActivityComissionListRelationFilter {
    every?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    some?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    none?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
}
export declare class EmployeeActivityComissionMaxAggregateInput {
    id?: true;
    activity?: true;
    comission?: true;
    createdAt?: true;
    updatedAt?: true;
    period?: true;
    employeeId?: true;
}
export declare class EmployeeActivityComissionMaxAggregate {
    id?: number;
    activity?: keyof typeof ItemActivity;
    comission?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period?: keyof typeof Period;
    employeeId?: string;
}
export declare class EmployeeActivityComissionMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    activity?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    period?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionMinAggregateInput {
    id?: true;
    activity?: true;
    comission?: true;
    createdAt?: true;
    updatedAt?: true;
    period?: true;
    employeeId?: true;
}
export declare class EmployeeActivityComissionMinAggregate {
    id?: number;
    activity?: keyof typeof ItemActivity;
    comission?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period?: keyof typeof Period;
    employeeId?: string;
}
export declare class EmployeeActivityComissionMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    activity?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    period?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    activity?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    period?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof EmployeeActivityComissionCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof EmployeeActivityComissionAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof EmployeeActivityComissionMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof EmployeeActivityComissionMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof EmployeeActivityComissionSumOrderByAggregateInput>;
}
export declare class EmployeeActivityComissionOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    activity?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    period?: keyof typeof SortOrder;
    employeeId?: keyof typeof SortOrder;
    employee?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
}
export declare class EmployeeActivityComissionScalarWhereWithAggregatesInput {
    AND?: Array<EmployeeActivityComissionScalarWhereWithAggregatesInput>;
    OR?: Array<EmployeeActivityComissionScalarWhereWithAggregatesInput>;
    NOT?: Array<EmployeeActivityComissionScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    activity?: InstanceType<typeof EnumItemActivityWithAggregatesFilter>;
    comission?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    period?: InstanceType<typeof EnumPeriodWithAggregatesFilter>;
    employeeId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class EmployeeActivityComissionScalarWhereInput {
    AND?: Array<EmployeeActivityComissionScalarWhereInput>;
    OR?: Array<EmployeeActivityComissionScalarWhereInput>;
    NOT?: Array<EmployeeActivityComissionScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    activity?: InstanceType<typeof EnumItemActivityFilter>;
    comission?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    period?: InstanceType<typeof EnumPeriodFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
}
export declare class EmployeeActivityComissionSumAggregateInput {
    id?: true;
    comission?: true;
}
export declare class EmployeeActivityComissionSumAggregate {
    id?: number;
    comission?: number;
}
export declare class EmployeeActivityComissionSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    comission?: keyof typeof SortOrder;
}
export declare class EmployeeActivityComissionUncheckedCreateNestedManyWithoutEmployeeInput {
    create?: Array<EmployeeActivityComissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<EmployeeActivityComissionCreateOrConnectWithoutEmployeeInput>;
    createMany?: InstanceType<typeof EmployeeActivityComissionCreateManyEmployeeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
}
export declare class EmployeeActivityComissionUncheckedCreateWithoutEmployeeInput {
    id?: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
}
export declare class EmployeeActivityComissionUncheckedCreateInput {
    id?: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    period: keyof typeof Period;
    employeeId: string;
}
export declare class EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeNestedInput {
    create?: Array<EmployeeActivityComissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<EmployeeActivityComissionCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<EmployeeActivityComissionUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof EmployeeActivityComissionCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    update?: Array<EmployeeActivityComissionUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<EmployeeActivityComissionUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<EmployeeActivityComissionScalarWhereInput>;
}
export declare class EmployeeActivityComissionUncheckedUpdateManyWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUncheckedUpdateWithoutEmployeeInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
    employeeId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUpdateManyMutationInput {
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUpdateManyWithWhereWithoutEmployeeInput {
    where: InstanceType<typeof EmployeeActivityComissionScalarWhereInput>;
    data: InstanceType<typeof EmployeeActivityComissionUpdateManyMutationInput>;
}
export declare class EmployeeActivityComissionUpdateManyWithoutEmployeeNestedInput {
    create?: Array<EmployeeActivityComissionCreateWithoutEmployeeInput>;
    connectOrCreate?: Array<EmployeeActivityComissionCreateOrConnectWithoutEmployeeInput>;
    upsert?: Array<EmployeeActivityComissionUpsertWithWhereUniqueWithoutEmployeeInput>;
    createMany?: InstanceType<typeof EmployeeActivityComissionCreateManyEmployeeInputEnvelope>;
    set?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>>;
    update?: Array<EmployeeActivityComissionUpdateWithWhereUniqueWithoutEmployeeInput>;
    updateMany?: Array<EmployeeActivityComissionUpdateManyWithWhereWithoutEmployeeInput>;
    deleteMany?: Array<EmployeeActivityComissionScalarWhereInput>;
}
export declare class EmployeeActivityComissionUpdateWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof EmployeeActivityComissionUpdateWithoutEmployeeInput>;
}
export declare class EmployeeActivityComissionUpdateWithoutEmployeeInput {
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
}
export declare class EmployeeActivityComissionUpdateInput {
    activity?: InstanceType<typeof EnumItemActivityFieldUpdateOperationsInput>;
    comission?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    period?: InstanceType<typeof EnumPeriodFieldUpdateOperationsInput>;
    employee?: InstanceType<typeof EmployeeUpdateOneRequiredWithoutActivityComissionsNestedInput>;
}
export declare class EmployeeActivityComissionUpsertWithWhereUniqueWithoutEmployeeInput {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof EmployeeActivityComissionUpdateWithoutEmployeeInput>;
    create: InstanceType<typeof EmployeeActivityComissionCreateWithoutEmployeeInput>;
}
export declare class EmployeeActivityComissionWhereUniqueInput {
    id?: number;
    AND?: Array<EmployeeActivityComissionWhereInput>;
    OR?: Array<EmployeeActivityComissionWhereInput>;
    NOT?: Array<EmployeeActivityComissionWhereInput>;
    activity?: InstanceType<typeof EnumItemActivityFilter>;
    comission?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    period?: InstanceType<typeof EnumPeriodFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
    employee?: InstanceType<typeof EmployeeRelationFilter>;
}
export declare class EmployeeActivityComissionWhereInput {
    AND?: Array<EmployeeActivityComissionWhereInput>;
    OR?: Array<EmployeeActivityComissionWhereInput>;
    NOT?: Array<EmployeeActivityComissionWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    activity?: InstanceType<typeof EnumItemActivityFilter>;
    comission?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    period?: InstanceType<typeof EnumPeriodFilter>;
    employeeId?: InstanceType<typeof StringFilter>;
    employee?: InstanceType<typeof EmployeeRelationFilter>;
}
export declare class EmployeeActivityComission {
    id: number;
    activity: keyof typeof ItemActivity;
    comission: number;
    createdAt: Date;
    updatedAt: Date;
    period: keyof typeof Period;
    employeeId: string;
    employee?: InstanceType<typeof Employee>;
}
export declare class FindFirstEmployeeActivityComissionOrThrowArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    orderBy?: Array<EmployeeActivityComissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeActivityComissionScalarFieldEnum>;
}
export declare class FindFirstEmployeeActivityComissionArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    orderBy?: Array<EmployeeActivityComissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeActivityComissionScalarFieldEnum>;
}
export declare class FindManyEmployeeActivityComissionArgs {
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
    orderBy?: Array<EmployeeActivityComissionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof EmployeeActivityComissionScalarFieldEnum>;
}
export declare class FindUniqueEmployeeActivityComissionOrThrowArgs {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
}
export declare class FindUniqueEmployeeActivityComissionArgs {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
}
export declare class UpdateManyEmployeeActivityComissionArgs {
    data: InstanceType<typeof EmployeeActivityComissionUpdateManyMutationInput>;
    where?: InstanceType<typeof EmployeeActivityComissionWhereInput>;
}
export declare class UpdateOneEmployeeActivityComissionArgs {
    data: InstanceType<typeof EmployeeActivityComissionUpdateInput>;
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
}
export declare class UpsertOneEmployeeActivityComissionArgs {
    where: Prisma.AtLeast<EmployeeActivityComissionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof EmployeeActivityComissionCreateInput>;
    update: InstanceType<typeof EmployeeActivityComissionUpdateInput>;
}
export declare class AggregateFile {
    _count?: InstanceType<typeof FileCountAggregate>;
    _avg?: InstanceType<typeof FileAvgAggregate>;
    _sum?: InstanceType<typeof FileSumAggregate>;
    _min?: InstanceType<typeof FileMinAggregate>;
    _max?: InstanceType<typeof FileMaxAggregate>;
}
export declare class CreateManyFileArgs {
    data: Array<FileCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneFileArgs {
    data: InstanceType<typeof FileCreateInput>;
}
export declare class DeleteManyFileArgs {
    where?: InstanceType<typeof FileWhereInput>;
}
export declare class DeleteOneFileArgs {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
}
export declare class FileAggregateArgs {
    where?: InstanceType<typeof FileWhereInput>;
    orderBy?: Array<FileOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof FileCountAggregateInput>;
    _avg?: InstanceType<typeof FileAvgAggregateInput>;
    _sum?: InstanceType<typeof FileSumAggregateInput>;
    _min?: InstanceType<typeof FileMinAggregateInput>;
    _max?: InstanceType<typeof FileMaxAggregateInput>;
}
export declare class FileAvgAggregateInput {
    fileSize?: true;
    messageId?: true;
}
export declare class FileAvgAggregate {
    fileSize?: number;
    messageId?: number;
}
export declare class FileAvgOrderByAggregateInput {
    fileSize?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
}
export declare class FileCountAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    messageId?: true;
    _all?: true;
}
export declare class FileCountAggregate {
    url: number;
    fileType: number;
    fileSize: number;
    createdAt: number;
    messageId: number;
    _all: number;
}
export declare class FileCountOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
}
export declare class FileCreateManyImageInputEnvelope {
    data: Array<FileCreateManyImageInput>;
    skipDuplicates?: boolean;
}
export declare class FileCreateManyImageInput {
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId: number;
}
export declare class FileCreateManyMessageInputEnvelope {
    data: Array<FileCreateManyMessageInput>;
    skipDuplicates?: boolean;
}
export declare class FileCreateManyMessageInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
}
export declare class FileCreateManyInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId: number;
}
export declare class FileCreateNestedManyWithoutImageInput {
    create?: Array<FileCreateWithoutImageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof FileCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
}
export declare class FileCreateNestedManyWithoutMessageInput {
    create?: Array<FileCreateWithoutMessageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutMessageInput>;
    createMany?: InstanceType<typeof FileCreateManyMessageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
}
export declare class FileCreateOrConnectWithoutImageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    create: InstanceType<typeof FileCreateWithoutImageInput>;
}
export declare class FileCreateOrConnectWithoutMessageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    create: InstanceType<typeof FileCreateWithoutMessageInput>;
}
export declare class FileCreateWithoutImageInput {
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    message: InstanceType<typeof MessageCreateNestedOneWithoutFilesInput>;
}
export declare class FileCreateWithoutMessageInput {
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    image?: InstanceType<typeof ImageCreateNestedOneWithoutFilesInput>;
}
export declare class FileCreateInput {
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    image?: InstanceType<typeof ImageCreateNestedOneWithoutFilesInput>;
    message: InstanceType<typeof MessageCreateNestedOneWithoutFilesInput>;
}
export declare class FileGroupByArgs {
    where?: InstanceType<typeof FileWhereInput>;
    orderBy?: Array<FileOrderByWithAggregationInput>;
    by: Array<keyof typeof FileScalarFieldEnum>;
    having?: InstanceType<typeof FileScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof FileCountAggregateInput>;
    _avg?: InstanceType<typeof FileAvgAggregateInput>;
    _sum?: InstanceType<typeof FileSumAggregateInput>;
    _min?: InstanceType<typeof FileMinAggregateInput>;
    _max?: InstanceType<typeof FileMaxAggregateInput>;
}
export declare class FileGroupBy {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt: Date | string;
    messageId: number;
    _count?: InstanceType<typeof FileCountAggregate>;
    _avg?: InstanceType<typeof FileAvgAggregate>;
    _sum?: InstanceType<typeof FileSumAggregate>;
    _min?: InstanceType<typeof FileMinAggregate>;
    _max?: InstanceType<typeof FileMaxAggregate>;
}
export declare class FileListRelationFilter {
    every?: InstanceType<typeof FileWhereInput>;
    some?: InstanceType<typeof FileWhereInput>;
    none?: InstanceType<typeof FileWhereInput>;
}
export declare class FileMaxAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    messageId?: true;
}
export declare class FileMaxAggregate {
    url?: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId?: number;
}
export declare class FileMaxOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
}
export declare class FileMinAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    messageId?: true;
}
export declare class FileMinAggregate {
    url?: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId?: number;
}
export declare class FileMinOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
}
export declare class FileOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class FileOrderByWithAggregationInput {
    url?: keyof typeof SortOrder;
    fileType?: InstanceType<typeof SortOrderInput>;
    fileSize?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof FileCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof FileAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof FileMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof FileMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof FileSumOrderByAggregateInput>;
}
export declare class FileOrderByWithRelationInput {
    url?: keyof typeof SortOrder;
    fileType?: InstanceType<typeof SortOrderInput>;
    fileSize?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
    image?: InstanceType<typeof ImageOrderByWithRelationInput>;
    message?: InstanceType<typeof MessageOrderByWithRelationInput>;
}
export declare class FileScalarWhereWithAggregatesInput {
    AND?: Array<FileScalarWhereWithAggregatesInput>;
    OR?: Array<FileScalarWhereWithAggregatesInput>;
    NOT?: Array<FileScalarWhereWithAggregatesInput>;
    url?: InstanceType<typeof StringWithAggregatesFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableWithAggregatesFilter>;
    fileSize?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    messageId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class FileScalarWhereInput {
    AND?: Array<FileScalarWhereInput>;
    OR?: Array<FileScalarWhereInput>;
    NOT?: Array<FileScalarWhereInput>;
    url?: InstanceType<typeof StringFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    messageId?: InstanceType<typeof IntFilter>;
}
export declare class FileSumAggregateInput {
    fileSize?: true;
    messageId?: true;
}
export declare class FileSumAggregate {
    fileSize?: number;
    messageId?: number;
}
export declare class FileSumOrderByAggregateInput {
    fileSize?: keyof typeof SortOrder;
    messageId?: keyof typeof SortOrder;
}
export declare class FileUncheckedCreateNestedManyWithoutImageInput {
    create?: Array<FileCreateWithoutImageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof FileCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
}
export declare class FileUncheckedCreateNestedManyWithoutMessageInput {
    create?: Array<FileCreateWithoutMessageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutMessageInput>;
    createMany?: InstanceType<typeof FileCreateManyMessageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
}
export declare class FileUncheckedCreateWithoutImageInput {
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId: number;
}
export declare class FileUncheckedCreateWithoutMessageInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
}
export declare class FileUncheckedCreateInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    messageId: number;
}
export declare class FileUncheckedUpdateManyWithoutImageNestedInput {
    create?: Array<FileCreateWithoutImageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutImageInput>;
    upsert?: Array<FileUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof FileCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    update?: Array<FileUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<FileUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<FileScalarWhereInput>;
}
export declare class FileUncheckedUpdateManyWithoutImageInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    messageId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class FileUncheckedUpdateManyWithoutMessageNestedInput {
    create?: Array<FileCreateWithoutMessageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutMessageInput>;
    upsert?: Array<FileUpsertWithWhereUniqueWithoutMessageInput>;
    createMany?: InstanceType<typeof FileCreateManyMessageInputEnvelope>;
    set?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    update?: Array<FileUpdateWithWhereUniqueWithoutMessageInput>;
    updateMany?: Array<FileUpdateManyWithWhereWithoutMessageInput>;
    deleteMany?: Array<FileScalarWhereInput>;
}
export declare class FileUncheckedUpdateManyWithoutMessageInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class FileUncheckedUpdateManyInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    messageId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class FileUncheckedUpdateWithoutImageInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    messageId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class FileUncheckedUpdateWithoutMessageInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class FileUncheckedUpdateInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    messageId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class FileUpdateManyMutationInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class FileUpdateManyWithWhereWithoutImageInput {
    where: InstanceType<typeof FileScalarWhereInput>;
    data: InstanceType<typeof FileUpdateManyMutationInput>;
}
export declare class FileUpdateManyWithWhereWithoutMessageInput {
    where: InstanceType<typeof FileScalarWhereInput>;
    data: InstanceType<typeof FileUpdateManyMutationInput>;
}
export declare class FileUpdateManyWithoutImageNestedInput {
    create?: Array<FileCreateWithoutImageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutImageInput>;
    upsert?: Array<FileUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof FileCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    update?: Array<FileUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<FileUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<FileScalarWhereInput>;
}
export declare class FileUpdateManyWithoutMessageNestedInput {
    create?: Array<FileCreateWithoutMessageInput>;
    connectOrCreate?: Array<FileCreateOrConnectWithoutMessageInput>;
    upsert?: Array<FileUpsertWithWhereUniqueWithoutMessageInput>;
    createMany?: InstanceType<typeof FileCreateManyMessageInputEnvelope>;
    set?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<FileWhereUniqueInput, 'url'>>;
    update?: Array<FileUpdateWithWhereUniqueWithoutMessageInput>;
    updateMany?: Array<FileUpdateManyWithWhereWithoutMessageInput>;
    deleteMany?: Array<FileScalarWhereInput>;
}
export declare class FileUpdateWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    data: InstanceType<typeof FileUpdateWithoutImageInput>;
}
export declare class FileUpdateWithWhereUniqueWithoutMessageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    data: InstanceType<typeof FileUpdateWithoutMessageInput>;
}
export declare class FileUpdateWithoutImageInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    message?: InstanceType<typeof MessageUpdateOneRequiredWithoutFilesNestedInput>;
}
export declare class FileUpdateWithoutMessageInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneWithoutFilesNestedInput>;
}
export declare class FileUpdateInput {
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneWithoutFilesNestedInput>;
    message?: InstanceType<typeof MessageUpdateOneRequiredWithoutFilesNestedInput>;
}
export declare class FileUpsertWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    update: InstanceType<typeof FileUpdateWithoutImageInput>;
    create: InstanceType<typeof FileCreateWithoutImageInput>;
}
export declare class FileUpsertWithWhereUniqueWithoutMessageInput {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    update: InstanceType<typeof FileUpdateWithoutMessageInput>;
    create: InstanceType<typeof FileCreateWithoutMessageInput>;
}
export declare class FileWhereUniqueInput {
    url?: string;
    AND?: Array<FileWhereInput>;
    OR?: Array<FileWhereInput>;
    NOT?: Array<FileWhereInput>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    messageId?: InstanceType<typeof IntFilter>;
    image?: InstanceType<typeof ImageNullableRelationFilter>;
    message?: InstanceType<typeof MessageRelationFilter>;
}
export declare class FileWhereInput {
    AND?: Array<FileWhereInput>;
    OR?: Array<FileWhereInput>;
    NOT?: Array<FileWhereInput>;
    url?: InstanceType<typeof StringFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    messageId?: InstanceType<typeof IntFilter>;
    image?: InstanceType<typeof ImageNullableRelationFilter>;
    message?: InstanceType<typeof MessageRelationFilter>;
}
export declare class File {
    url: string;
    fileType: keyof typeof FileType | null;
    fileSize: number | null;
    createdAt: Date;
    messageId: number;
    image?: InstanceType<typeof Image> | null;
    message?: InstanceType<typeof Message>;
}
export declare class FindFirstFileOrThrowArgs {
    where?: InstanceType<typeof FileWhereInput>;
    orderBy?: Array<FileOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof FileScalarFieldEnum>;
}
export declare class FindFirstFileArgs {
    where?: InstanceType<typeof FileWhereInput>;
    orderBy?: Array<FileOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof FileScalarFieldEnum>;
}
export declare class FindManyFileArgs {
    where?: InstanceType<typeof FileWhereInput>;
    orderBy?: Array<FileOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof FileScalarFieldEnum>;
}
export declare class FindUniqueFileOrThrowArgs {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
}
export declare class FindUniqueFileArgs {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
}
export declare class UpdateManyFileArgs {
    data: InstanceType<typeof FileUpdateManyMutationInput>;
    where?: InstanceType<typeof FileWhereInput>;
}
export declare class UpdateOneFileArgs {
    data: InstanceType<typeof FileUpdateInput>;
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
}
export declare class UpsertOneFileArgs {
    where: Prisma.AtLeast<FileWhereUniqueInput, 'url'>;
    create: InstanceType<typeof FileCreateInput>;
    update: InstanceType<typeof FileUpdateInput>;
}
export declare class AggregateImage {
    _count?: InstanceType<typeof ImageCountAggregate>;
    _avg?: InstanceType<typeof ImageAvgAggregate>;
    _sum?: InstanceType<typeof ImageSumAggregate>;
    _min?: InstanceType<typeof ImageMinAggregate>;
    _max?: InstanceType<typeof ImageMaxAggregate>;
}
export declare class CreateManyImageArgs {
    data: Array<ImageCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneImageArgs {
    data: InstanceType<typeof ImageCreateInput>;
}
export declare class DeleteManyImageArgs {
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class DeleteOneImageArgs {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class FindFirstImageOrThrowArgs {
    where?: InstanceType<typeof ImageWhereInput>;
    orderBy?: Array<ImageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ImageScalarFieldEnum>;
}
export declare class FindFirstImageArgs {
    where?: InstanceType<typeof ImageWhereInput>;
    orderBy?: Array<ImageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ImageScalarFieldEnum>;
}
export declare class FindManyImageArgs {
    where?: InstanceType<typeof ImageWhereInput>;
    orderBy?: Array<ImageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ImageScalarFieldEnum>;
}
export declare class FindUniqueImageOrThrowArgs {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class FindUniqueImageArgs {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageAggregateArgs {
    where?: InstanceType<typeof ImageWhereInput>;
    orderBy?: Array<ImageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ImageCountAggregateInput>;
    _avg?: InstanceType<typeof ImageAvgAggregateInput>;
    _sum?: InstanceType<typeof ImageSumAggregateInput>;
    _min?: InstanceType<typeof ImageMinAggregateInput>;
    _max?: InstanceType<typeof ImageMaxAggregateInput>;
}
export declare class ImageAvgAggregateInput {
    fileSize?: true;
    laundryItemId?: true;
}
export declare class ImageAvgAggregate {
    fileSize?: number;
    laundryItemId?: number;
}
export declare class ImageAvgOrderByAggregateInput {
    fileSize?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class ImageCountAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    platformItemId?: true;
    laundryItemId?: true;
    _all?: true;
}
export declare class ImageCountAggregate {
    url: number;
    fileType: number;
    fileSize: number;
    createdAt: number;
    platformItemId: number;
    laundryItemId: number;
    _all: number;
}
export declare class ImageCountOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class ImageCount {
    users?: number;
    outletes?: number;
    reviews?: number;
    machines?: number;
    outletLaundryItemServices?: number;
    transactions?: number;
    attendances?: number;
    vouchers?: number;
    messages?: number;
    indonesianBanks?: number;
    files?: number;
}
export declare class ImageCreateManyLaundryItemInputEnvelope {
    data: Array<ImageCreateManyLaundryItemInput>;
    skipDuplicates?: boolean;
}
export declare class ImageCreateManyLaundryItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
}
export declare class ImageCreateManyPlatformItemInputEnvelope {
    data: Array<ImageCreateManyPlatformItemInput>;
    skipDuplicates?: boolean;
}
export declare class ImageCreateManyPlatformItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    laundryItemId?: number;
}
export declare class ImageCreateManyInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
}
export declare class ImageCreateNestedManyWithoutLaundryItemInput {
    create?: Array<ImageCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyLaundryItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutMachinesInput {
    create?: Array<ImageCreateWithoutMachinesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMachinesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutMessagesInput {
    create?: Array<ImageCreateWithoutMessagesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMessagesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutOutletLaundryItemServicesInput {
    create?: Array<ImageCreateWithoutOutletLaundryItemServicesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletLaundryItemServicesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutOutletesInput {
    create?: Array<ImageCreateWithoutOutletesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutPlatformItemInput {
    create?: Array<ImageCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedManyWithoutReviewsInput {
    create?: Array<ImageCreateWithoutReviewsInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutReviewsInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageCreateNestedOneWithoutAttendancesInput {
    create?: InstanceType<typeof ImageCreateWithoutAttendancesInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutAttendancesInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateNestedOneWithoutFilesInput {
    create?: InstanceType<typeof ImageCreateWithoutFilesInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutFilesInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateNestedOneWithoutIndonesianBanksInput {
    create?: InstanceType<typeof ImageCreateWithoutIndonesianBanksInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutIndonesianBanksInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateNestedOneWithoutTransactionsInput {
    create?: InstanceType<typeof ImageCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutTransactionsInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateNestedOneWithoutUsersInput {
    create?: InstanceType<typeof ImageCreateWithoutUsersInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutUsersInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateNestedOneWithoutVouchersInput {
    create?: InstanceType<typeof ImageCreateWithoutVouchersInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutVouchersInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class ImageCreateOrConnectWithoutAttendancesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutAttendancesInput>;
}
export declare class ImageCreateOrConnectWithoutFilesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutFilesInput>;
}
export declare class ImageCreateOrConnectWithoutIndonesianBanksInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutIndonesianBanksInput>;
}
export declare class ImageCreateOrConnectWithoutLaundryItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutLaundryItemInput>;
}
export declare class ImageCreateOrConnectWithoutMachinesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutMachinesInput>;
}
export declare class ImageCreateOrConnectWithoutMessagesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutMessagesInput>;
}
export declare class ImageCreateOrConnectWithoutOutletLaundryItemServicesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutOutletLaundryItemServicesInput>;
}
export declare class ImageCreateOrConnectWithoutOutletesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutOutletesInput>;
}
export declare class ImageCreateOrConnectWithoutPlatformItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutPlatformItemInput>;
}
export declare class ImageCreateOrConnectWithoutReviewsInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutReviewsInput>;
}
export declare class ImageCreateOrConnectWithoutTransactionsInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutTransactionsInput>;
}
export declare class ImageCreateOrConnectWithoutUsersInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutUsersInput>;
}
export declare class ImageCreateOrConnectWithoutVouchersInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateWithoutVouchersInput>;
}
export declare class ImageCreateWithoutAttendancesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutFilesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutIndonesianBanksInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutLaundryItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutMachinesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutMessagesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutOutletLaundryItemServicesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutOutletesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutPlatformItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutReviewsInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutTransactionsInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutUsersInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateWithoutVouchersInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageCreateInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    PlatformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutImagesInput>;
    LaundryItem?: InstanceType<typeof LaundryItemCreateNestedOneWithoutImagesInput>;
    users?: InstanceType<typeof UserCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutImageInput>;
}
export declare class ImageGroupByArgs {
    where?: InstanceType<typeof ImageWhereInput>;
    orderBy?: Array<ImageOrderByWithAggregationInput>;
    by: Array<keyof typeof ImageScalarFieldEnum>;
    having?: InstanceType<typeof ImageScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ImageCountAggregateInput>;
    _avg?: InstanceType<typeof ImageAvgAggregateInput>;
    _sum?: InstanceType<typeof ImageSumAggregateInput>;
    _min?: InstanceType<typeof ImageMinAggregateInput>;
    _max?: InstanceType<typeof ImageMaxAggregateInput>;
}
export declare class ImageGroupBy {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    _count?: InstanceType<typeof ImageCountAggregate>;
    _avg?: InstanceType<typeof ImageAvgAggregate>;
    _sum?: InstanceType<typeof ImageSumAggregate>;
    _min?: InstanceType<typeof ImageMinAggregate>;
    _max?: InstanceType<typeof ImageMaxAggregate>;
}
export declare class ImageListRelationFilter {
    every?: InstanceType<typeof ImageWhereInput>;
    some?: InstanceType<typeof ImageWhereInput>;
    none?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageMaxAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    platformItemId?: true;
    laundryItemId?: true;
}
export declare class ImageMaxAggregate {
    url?: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
}
export declare class ImageMaxOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class ImageMinAggregateInput {
    url?: true;
    fileType?: true;
    fileSize?: true;
    createdAt?: true;
    platformItemId?: true;
    laundryItemId?: true;
}
export declare class ImageMinAggregate {
    url?: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
}
export declare class ImageMinOrderByAggregateInput {
    url?: keyof typeof SortOrder;
    fileType?: keyof typeof SortOrder;
    fileSize?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class ImageNullableRelationFilter {
    is?: InstanceType<typeof ImageWhereInput>;
    isNot?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class ImageOrderByWithAggregationInput {
    url?: keyof typeof SortOrder;
    fileType?: InstanceType<typeof SortOrderInput>;
    fileSize?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    laundryItemId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof ImageCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ImageAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ImageMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ImageMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ImageSumOrderByAggregateInput>;
}
export declare class ImageOrderByWithRelationInput {
    url?: keyof typeof SortOrder;
    fileType?: InstanceType<typeof SortOrderInput>;
    fileSize?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    laundryItemId?: InstanceType<typeof SortOrderInput>;
    PlatformItem?: InstanceType<typeof PlatformItemOrderByWithRelationInput>;
    LaundryItem?: InstanceType<typeof LaundryItemOrderByWithRelationInput>;
    users?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    outletes?: InstanceType<typeof OutletOrderByRelationAggregateInput>;
    reviews?: InstanceType<typeof ReviewOrderByRelationAggregateInput>;
    machines?: InstanceType<typeof MachineOrderByRelationAggregateInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceOrderByRelationAggregateInput>;
    transactions?: InstanceType<typeof TransactionOrderByRelationAggregateInput>;
    attendances?: InstanceType<typeof AttendanceOrderByRelationAggregateInput>;
    vouchers?: InstanceType<typeof VoucherOrderByRelationAggregateInput>;
    messages?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankOrderByRelationAggregateInput>;
    files?: InstanceType<typeof FileOrderByRelationAggregateInput>;
}
export declare class ImageRelationFilter {
    is?: InstanceType<typeof ImageWhereInput>;
    isNot?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageScalarWhereWithAggregatesInput {
    AND?: Array<ImageScalarWhereWithAggregatesInput>;
    OR?: Array<ImageScalarWhereWithAggregatesInput>;
    NOT?: Array<ImageScalarWhereWithAggregatesInput>;
    url?: InstanceType<typeof StringWithAggregatesFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableWithAggregatesFilter>;
    fileSize?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    platformItemId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    laundryItemId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class ImageScalarWhereInput {
    AND?: Array<ImageScalarWhereInput>;
    OR?: Array<ImageScalarWhereInput>;
    NOT?: Array<ImageScalarWhereInput>;
    url?: InstanceType<typeof StringFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    laundryItemId?: InstanceType<typeof IntNullableFilter>;
}
export declare class ImageSumAggregateInput {
    fileSize?: true;
    laundryItemId?: true;
}
export declare class ImageSumAggregate {
    fileSize?: number;
    laundryItemId?: number;
}
export declare class ImageSumOrderByAggregateInput {
    fileSize?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class ImageUncheckedCreateNestedManyWithoutLaundryItemInput {
    create?: Array<ImageCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyLaundryItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutMachinesInput {
    create?: Array<ImageCreateWithoutMachinesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMachinesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutMessagesInput {
    create?: Array<ImageCreateWithoutMessagesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMessagesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput {
    create?: Array<ImageCreateWithoutOutletLaundryItemServicesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletLaundryItemServicesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutOutletesInput {
    create?: Array<ImageCreateWithoutOutletesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletesInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutPlatformItemInput {
    create?: Array<ImageCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateNestedManyWithoutReviewsInput {
    create?: Array<ImageCreateWithoutReviewsInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutReviewsInput>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
}
export declare class ImageUncheckedCreateWithoutAttendancesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutFilesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutIndonesianBanksInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutLaundryItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutMachinesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutMessagesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutOutletLaundryItemServicesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutOutletesInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutPlatformItemInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutReviewsInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutTransactionsInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutUsersInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateWithoutVouchersInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedCreateInput {
    url: string;
    fileType?: keyof typeof FileType;
    fileSize?: number;
    createdAt?: Date | string;
    platformItemId?: string;
    laundryItemId?: number;
    users?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutAvatarImageInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutImageInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutImagesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutImagesInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput>;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutProofImageInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedCreateNestedManyWithoutImageInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedCreateNestedManyWithoutImageInput>;
    messages?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutImagesInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedCreateNestedManyWithoutImageInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutImageInput>;
}
export declare class ImageUncheckedUpdateManyWithoutLaundryItemNestedInput {
    create?: Array<ImageCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutLaundryItemInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyLaundryItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutLaundryItemInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutLaundryItemInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutLaundryItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutMachinesNestedInput {
    create?: Array<ImageCreateWithoutMachinesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMachinesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutMachinesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutMachinesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutMachinesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutMachinesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutMessagesNestedInput {
    create?: Array<ImageCreateWithoutMessagesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMessagesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutMessagesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutMessagesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutMessagesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutMessagesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput {
    create?: Array<ImageCreateWithoutOutletLaundryItemServicesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletLaundryItemServicesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutOutletLaundryItemServicesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutOutletLaundryItemServicesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutOutletLaundryItemServicesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutOutletesNestedInput {
    create?: Array<ImageCreateWithoutOutletesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutOutletesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutOutletesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutOutletesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutOutletesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<ImageCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutPlatformItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyWithoutReviewsNestedInput {
    create?: Array<ImageCreateWithoutReviewsInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutReviewsInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutReviewsInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutReviewsInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutReviewsInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUncheckedUpdateManyWithoutReviewsInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateManyInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class ImageUncheckedUpdateWithoutAttendancesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutFilesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutIndonesianBanksInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutLaundryItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutMachinesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutMessagesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutOutletLaundryItemServicesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutOutletesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutPlatformItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutReviewsInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutTransactionsInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutUsersInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateWithoutVouchersInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUncheckedUpdateInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    users?: InstanceType<typeof UserUncheckedUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUncheckedUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUncheckedUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUncheckedUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUncheckedUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateManyMutationInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ImageUpdateManyWithWhereWithoutLaundryItemInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutMachinesInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutMessagesInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutOutletLaundryItemServicesInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutOutletesInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutPlatformItemInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithWhereWithoutReviewsInput {
    where: InstanceType<typeof ImageScalarWhereInput>;
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
}
export declare class ImageUpdateManyWithoutLaundryItemNestedInput {
    create?: Array<ImageCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutLaundryItemInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyLaundryItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutLaundryItemInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutLaundryItemInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutMachinesNestedInput {
    create?: Array<ImageCreateWithoutMachinesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMachinesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutMachinesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutMachinesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutMachinesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutMessagesNestedInput {
    create?: Array<ImageCreateWithoutMessagesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutMessagesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutMessagesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutMessagesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutMessagesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput {
    create?: Array<ImageCreateWithoutOutletLaundryItemServicesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletLaundryItemServicesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutOutletLaundryItemServicesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutOutletLaundryItemServicesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutOutletLaundryItemServicesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutOutletesNestedInput {
    create?: Array<ImageCreateWithoutOutletesInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutOutletesInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutOutletesInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutOutletesInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutOutletesInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<ImageCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof ImageCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateManyWithoutReviewsNestedInput {
    create?: Array<ImageCreateWithoutReviewsInput>;
    connectOrCreate?: Array<ImageCreateOrConnectWithoutReviewsInput>;
    upsert?: Array<ImageUpsertWithWhereUniqueWithoutReviewsInput>;
    set?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    disconnect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    delete?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    connect?: Array<Prisma.AtLeast<ImageWhereUniqueInput, 'url'>>;
    update?: Array<ImageUpdateWithWhereUniqueWithoutReviewsInput>;
    updateMany?: Array<ImageUpdateManyWithWhereWithoutReviewsInput>;
    deleteMany?: Array<ImageScalarWhereInput>;
}
export declare class ImageUpdateOneRequiredWithoutIndonesianBanksNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutIndonesianBanksInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutIndonesianBanksInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutIndonesianBanksInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutIndonesianBanksInput>;
}
export declare class ImageUpdateOneRequiredWithoutUsersNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutUsersInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutUsersInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutUsersInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutUsersInput>;
}
export declare class ImageUpdateOneRequiredWithoutVouchersNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutVouchersInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutVouchersInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutVouchersInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutVouchersInput>;
}
export declare class ImageUpdateOneWithoutAttendancesNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutAttendancesInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutAttendancesInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutAttendancesInput>;
    disconnect?: InstanceType<typeof ImageWhereInput>;
    delete?: InstanceType<typeof ImageWhereInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutAttendancesInput>;
}
export declare class ImageUpdateOneWithoutFilesNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutFilesInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutFilesInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutFilesInput>;
    disconnect?: InstanceType<typeof ImageWhereInput>;
    delete?: InstanceType<typeof ImageWhereInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutFilesInput>;
}
export declare class ImageUpdateOneWithoutTransactionsNestedInput {
    create?: InstanceType<typeof ImageCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof ImageCreateOrConnectWithoutTransactionsInput>;
    upsert?: InstanceType<typeof ImageUpsertWithoutTransactionsInput>;
    disconnect?: InstanceType<typeof ImageWhereInput>;
    delete?: InstanceType<typeof ImageWhereInput>;
    connect?: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update?: InstanceType<typeof ImageUpdateToOneWithWhereWithoutTransactionsInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutAttendancesInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutAttendancesInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutFilesInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutFilesInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutIndonesianBanksInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutIndonesianBanksInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutTransactionsInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutTransactionsInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutUsersInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutUsersInput>;
}
export declare class ImageUpdateToOneWithWhereWithoutVouchersInput {
    where?: InstanceType<typeof ImageWhereInput>;
    data: InstanceType<typeof ImageUpdateWithoutVouchersInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutLaundryItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutLaundryItemInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutMachinesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutMachinesInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutMessagesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutMessagesInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutOutletLaundryItemServicesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutOutletLaundryItemServicesInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutOutletesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutOutletesInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutPlatformItemInput>;
}
export declare class ImageUpdateWithWhereUniqueWithoutReviewsInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    data: InstanceType<typeof ImageUpdateWithoutReviewsInput>;
}
export declare class ImageUpdateWithoutAttendancesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutFilesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutIndonesianBanksInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutLaundryItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutMachinesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutMessagesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutOutletLaundryItemServicesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutOutletesInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutPlatformItemInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutReviewsInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutTransactionsInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutUsersInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateWithoutVouchersInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpdateInput {
    url?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fileType?: InstanceType<typeof NullableEnumFileTypeFieldUpdateOperationsInput>;
    fileSize?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    PlatformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutImagesNestedInput>;
    LaundryItem?: InstanceType<typeof LaundryItemUpdateOneWithoutImagesNestedInput>;
    users?: InstanceType<typeof UserUpdateManyWithoutAvatarImageNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutImageNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutImagesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutImagesNestedInput>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutProofImageNestedInput>;
    attendances?: InstanceType<typeof AttendanceUpdateManyWithoutImageNestedInput>;
    vouchers?: InstanceType<typeof VoucherUpdateManyWithoutImageNestedInput>;
    messages?: InstanceType<typeof MessageUpdateManyWithoutImagesNestedInput>;
    indonesianBanks?: InstanceType<typeof IndonesianBankUpdateManyWithoutImageNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutImageNestedInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutLaundryItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutLaundryItemInput>;
    create: InstanceType<typeof ImageCreateWithoutLaundryItemInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutMachinesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutMachinesInput>;
    create: InstanceType<typeof ImageCreateWithoutMachinesInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutMessagesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutMessagesInput>;
    create: InstanceType<typeof ImageCreateWithoutMessagesInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutOutletLaundryItemServicesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutOutletLaundryItemServicesInput>;
    create: InstanceType<typeof ImageCreateWithoutOutletLaundryItemServicesInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutOutletesInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutOutletesInput>;
    create: InstanceType<typeof ImageCreateWithoutOutletesInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutPlatformItemInput>;
    create: InstanceType<typeof ImageCreateWithoutPlatformItemInput>;
}
export declare class ImageUpsertWithWhereUniqueWithoutReviewsInput {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    update: InstanceType<typeof ImageUpdateWithoutReviewsInput>;
    create: InstanceType<typeof ImageCreateWithoutReviewsInput>;
}
export declare class ImageUpsertWithoutAttendancesInput {
    update: InstanceType<typeof ImageUpdateWithoutAttendancesInput>;
    create: InstanceType<typeof ImageCreateWithoutAttendancesInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageUpsertWithoutFilesInput {
    update: InstanceType<typeof ImageUpdateWithoutFilesInput>;
    create: InstanceType<typeof ImageCreateWithoutFilesInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageUpsertWithoutIndonesianBanksInput {
    update: InstanceType<typeof ImageUpdateWithoutIndonesianBanksInput>;
    create: InstanceType<typeof ImageCreateWithoutIndonesianBanksInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageUpsertWithoutTransactionsInput {
    update: InstanceType<typeof ImageUpdateWithoutTransactionsInput>;
    create: InstanceType<typeof ImageCreateWithoutTransactionsInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageUpsertWithoutUsersInput {
    update: InstanceType<typeof ImageUpdateWithoutUsersInput>;
    create: InstanceType<typeof ImageCreateWithoutUsersInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageUpsertWithoutVouchersInput {
    update: InstanceType<typeof ImageUpdateWithoutVouchersInput>;
    create: InstanceType<typeof ImageCreateWithoutVouchersInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class ImageWhereUniqueInput {
    url?: string;
    AND?: Array<ImageWhereInput>;
    OR?: Array<ImageWhereInput>;
    NOT?: Array<ImageWhereInput>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    laundryItemId?: InstanceType<typeof IntNullableFilter>;
    PlatformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    LaundryItem?: InstanceType<typeof LaundryItemNullableRelationFilter>;
    users?: InstanceType<typeof UserListRelationFilter>;
    outletes?: InstanceType<typeof OutletListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    transactions?: InstanceType<typeof TransactionListRelationFilter>;
    attendances?: InstanceType<typeof AttendanceListRelationFilter>;
    vouchers?: InstanceType<typeof VoucherListRelationFilter>;
    messages?: InstanceType<typeof MessageListRelationFilter>;
    indonesianBanks?: InstanceType<typeof IndonesianBankListRelationFilter>;
    files?: InstanceType<typeof FileListRelationFilter>;
}
export declare class ImageWhereInput {
    AND?: Array<ImageWhereInput>;
    OR?: Array<ImageWhereInput>;
    NOT?: Array<ImageWhereInput>;
    url?: InstanceType<typeof StringFilter>;
    fileType?: InstanceType<typeof EnumFileTypeNullableFilter>;
    fileSize?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    laundryItemId?: InstanceType<typeof IntNullableFilter>;
    PlatformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    LaundryItem?: InstanceType<typeof LaundryItemNullableRelationFilter>;
    users?: InstanceType<typeof UserListRelationFilter>;
    outletes?: InstanceType<typeof OutletListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
    outletLaundryItemServices?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    transactions?: InstanceType<typeof TransactionListRelationFilter>;
    attendances?: InstanceType<typeof AttendanceListRelationFilter>;
    vouchers?: InstanceType<typeof VoucherListRelationFilter>;
    messages?: InstanceType<typeof MessageListRelationFilter>;
    indonesianBanks?: InstanceType<typeof IndonesianBankListRelationFilter>;
    files?: InstanceType<typeof FileListRelationFilter>;
}
export declare class Image {
    url: string;
    fileType: keyof typeof FileType | null;
    fileSize: number | null;
    createdAt: Date;
    platformItemId: string | null;
    laundryItemId: number | null;
    PlatformItem?: InstanceType<typeof PlatformItem> | null;
    LaundryItem?: InstanceType<typeof LaundryItem> | null;
    users?: Array<User>;
    outletes?: Array<Outlet>;
    reviews?: Array<Review>;
    machines?: Array<Machine>;
    outletLaundryItemServices?: Array<OutletLaundryItemService>;
    transactions?: Array<Transaction>;
    attendances?: Array<Attendance>;
    vouchers?: Array<Voucher>;
    messages?: Array<Message>;
    indonesianBanks?: Array<IndonesianBank>;
    files?: Array<File>;
    _count?: InstanceType<typeof ImageCount>;
}
export declare class UpdateManyImageArgs {
    data: InstanceType<typeof ImageUpdateManyMutationInput>;
    where?: InstanceType<typeof ImageWhereInput>;
}
export declare class UpdateOneImageArgs {
    data: InstanceType<typeof ImageUpdateInput>;
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
}
export declare class UpsertOneImageArgs {
    where: Prisma.AtLeast<ImageWhereUniqueInput, 'url'>;
    create: InstanceType<typeof ImageCreateInput>;
    update: InstanceType<typeof ImageUpdateInput>;
}
export declare class AggregateIndonesianBank {
    _count?: InstanceType<typeof IndonesianBankCountAggregate>;
    _avg?: InstanceType<typeof IndonesianBankAvgAggregate>;
    _sum?: InstanceType<typeof IndonesianBankSumAggregate>;
    _min?: InstanceType<typeof IndonesianBankMinAggregate>;
    _max?: InstanceType<typeof IndonesianBankMaxAggregate>;
}
export declare class CreateManyIndonesianBankArgs {
    data: Array<IndonesianBankCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneIndonesianBankArgs {
    data: InstanceType<typeof IndonesianBankCreateInput>;
}
export declare class DeleteManyIndonesianBankArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
}
export declare class DeleteOneIndonesianBankArgs {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
}
export declare class FindFirstIndonesianBankOrThrowArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    orderBy?: Array<IndonesianBankOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof IndonesianBankScalarFieldEnum>;
}
export declare class FindFirstIndonesianBankArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    orderBy?: Array<IndonesianBankOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof IndonesianBankScalarFieldEnum>;
}
export declare class FindManyIndonesianBankArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    orderBy?: Array<IndonesianBankOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof IndonesianBankScalarFieldEnum>;
}
export declare class FindUniqueIndonesianBankOrThrowArgs {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
}
export declare class FindUniqueIndonesianBankArgs {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
}
export declare class IndonesianBankAggregateArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    orderBy?: Array<IndonesianBankOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof IndonesianBankCountAggregateInput>;
    _avg?: InstanceType<typeof IndonesianBankAvgAggregateInput>;
    _sum?: InstanceType<typeof IndonesianBankSumAggregateInput>;
    _min?: InstanceType<typeof IndonesianBankMinAggregateInput>;
    _max?: InstanceType<typeof IndonesianBankMaxAggregateInput>;
}
export declare class IndonesianBankAvgAggregateInput {
    id?: true;
}
export declare class IndonesianBankAvgAggregate {
    id?: number;
}
export declare class IndonesianBankAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class IndonesianBankCountAggregateInput {
    id?: true;
    name?: true;
    code?: true;
    createdAt?: true;
    imageId?: true;
    _all?: true;
}
export declare class IndonesianBankCountAggregate {
    id: number;
    name: number;
    code: number;
    createdAt: number;
    imageId: number;
    _all: number;
}
export declare class IndonesianBankCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    code?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class IndonesianBankCount {
    printerMachine?: number;
}
export declare class IndonesianBankCreateManyImageInputEnvelope {
    data: Array<IndonesianBankCreateManyImageInput>;
    skipDuplicates?: boolean;
}
export declare class IndonesianBankCreateManyImageInput {
    id?: number;
    name: string;
    code?: string;
    createdAt?: Date | string;
}
export declare class IndonesianBankCreateManyInput {
    id?: number;
    name: string;
    code?: string;
    createdAt?: Date | string;
    imageId: string;
}
export declare class IndonesianBankCreateNestedManyWithoutImageInput {
    create?: Array<IndonesianBankCreateWithoutImageInput>;
    connectOrCreate?: Array<IndonesianBankCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof IndonesianBankCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
}
export declare class IndonesianBankCreateNestedOneWithoutPrinterMachineInput {
    create?: InstanceType<typeof IndonesianBankCreateWithoutPrinterMachineInput>;
    connectOrCreate?: InstanceType<typeof IndonesianBankCreateOrConnectWithoutPrinterMachineInput>;
    connect?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
}
export declare class IndonesianBankCreateOrConnectWithoutImageInput {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    create: InstanceType<typeof IndonesianBankCreateWithoutImageInput>;
}
export declare class IndonesianBankCreateOrConnectWithoutPrinterMachineInput {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    create: InstanceType<typeof IndonesianBankCreateWithoutPrinterMachineInput>;
}
export declare class IndonesianBankCreateWithoutImageInput {
    name: string;
    code?: string;
    createdAt?: Date | string;
    printerMachine?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutProviderInput>;
}
export declare class IndonesianBankCreateWithoutPrinterMachineInput {
    name: string;
    code?: string;
    createdAt?: Date | string;
    image: InstanceType<typeof ImageCreateNestedOneWithoutIndonesianBanksInput>;
}
export declare class IndonesianBankCreateInput {
    name: string;
    code?: string;
    createdAt?: Date | string;
    image: InstanceType<typeof ImageCreateNestedOneWithoutIndonesianBanksInput>;
    printerMachine?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutProviderInput>;
}
export declare class IndonesianBankGroupByArgs {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    orderBy?: Array<IndonesianBankOrderByWithAggregationInput>;
    by: Array<keyof typeof IndonesianBankScalarFieldEnum>;
    having?: InstanceType<typeof IndonesianBankScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof IndonesianBankCountAggregateInput>;
    _avg?: InstanceType<typeof IndonesianBankAvgAggregateInput>;
    _sum?: InstanceType<typeof IndonesianBankSumAggregateInput>;
    _min?: InstanceType<typeof IndonesianBankMinAggregateInput>;
    _max?: InstanceType<typeof IndonesianBankMaxAggregateInput>;
}
export declare class IndonesianBankGroupBy {
    id: number;
    name: string;
    code?: string;
    createdAt: Date | string;
    imageId: string;
    _count?: InstanceType<typeof IndonesianBankCountAggregate>;
    _avg?: InstanceType<typeof IndonesianBankAvgAggregate>;
    _sum?: InstanceType<typeof IndonesianBankSumAggregate>;
    _min?: InstanceType<typeof IndonesianBankMinAggregate>;
    _max?: InstanceType<typeof IndonesianBankMaxAggregate>;
}
export declare class IndonesianBankListRelationFilter {
    every?: InstanceType<typeof IndonesianBankWhereInput>;
    some?: InstanceType<typeof IndonesianBankWhereInput>;
    none?: InstanceType<typeof IndonesianBankWhereInput>;
}
export declare class IndonesianBankMaxAggregateInput {
    id?: true;
    name?: true;
    code?: true;
    createdAt?: true;
    imageId?: true;
}
export declare class IndonesianBankMaxAggregate {
    id?: number;
    name?: string;
    code?: string;
    createdAt?: Date | string;
    imageId?: string;
}
export declare class IndonesianBankMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    code?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class IndonesianBankMinAggregateInput {
    id?: true;
    name?: true;
    code?: true;
    createdAt?: true;
    imageId?: true;
}
export declare class IndonesianBankMinAggregate {
    id?: number;
    name?: string;
    code?: string;
    createdAt?: Date | string;
    imageId?: string;
}
export declare class IndonesianBankMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    code?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class IndonesianBankOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class IndonesianBankOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    code?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof IndonesianBankCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof IndonesianBankAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof IndonesianBankMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof IndonesianBankMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof IndonesianBankSumOrderByAggregateInput>;
}
export declare class IndonesianBankOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    code?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
    image?: InstanceType<typeof ImageOrderByWithRelationInput>;
    printerMachine?: InstanceType<typeof PrinterMachineOrderByRelationAggregateInput>;
}
export declare class IndonesianBankRelationFilter {
    is?: InstanceType<typeof IndonesianBankWhereInput>;
    isNot?: InstanceType<typeof IndonesianBankWhereInput>;
}
export declare class IndonesianBankScalarWhereWithAggregatesInput {
    AND?: Array<IndonesianBankScalarWhereWithAggregatesInput>;
    OR?: Array<IndonesianBankScalarWhereWithAggregatesInput>;
    NOT?: Array<IndonesianBankScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    code?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    imageId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class IndonesianBankScalarWhereInput {
    AND?: Array<IndonesianBankScalarWhereInput>;
    OR?: Array<IndonesianBankScalarWhereInput>;
    NOT?: Array<IndonesianBankScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    code?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
}
export declare class IndonesianBankSumAggregateInput {
    id?: true;
}
export declare class IndonesianBankSumAggregate {
    id?: number;
}
export declare class IndonesianBankSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class IndonesianBankUncheckedCreateNestedManyWithoutImageInput {
    create?: Array<IndonesianBankCreateWithoutImageInput>;
    connectOrCreate?: Array<IndonesianBankCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof IndonesianBankCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
}
export declare class IndonesianBankUncheckedCreateWithoutImageInput {
    id?: number;
    name: string;
    code?: string;
    createdAt?: Date | string;
    printerMachine?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutProviderInput>;
}
export declare class IndonesianBankUncheckedCreateWithoutPrinterMachineInput {
    id?: number;
    name: string;
    code?: string;
    createdAt?: Date | string;
    imageId: string;
}
export declare class IndonesianBankUncheckedCreateInput {
    id?: number;
    name: string;
    code?: string;
    createdAt?: Date | string;
    imageId: string;
    printerMachine?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutProviderInput>;
}
export declare class IndonesianBankUncheckedUpdateManyWithoutImageNestedInput {
    create?: Array<IndonesianBankCreateWithoutImageInput>;
    connectOrCreate?: Array<IndonesianBankCreateOrConnectWithoutImageInput>;
    upsert?: Array<IndonesianBankUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof IndonesianBankCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    disconnect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    delete?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    connect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    update?: Array<IndonesianBankUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<IndonesianBankUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<IndonesianBankScalarWhereInput>;
}
export declare class IndonesianBankUncheckedUpdateManyWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class IndonesianBankUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class IndonesianBankUncheckedUpdateWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerMachine?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutProviderNestedInput>;
}
export declare class IndonesianBankUncheckedUpdateWithoutPrinterMachineInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class IndonesianBankUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    printerMachine?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutProviderNestedInput>;
}
export declare class IndonesianBankUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class IndonesianBankUpdateManyWithWhereWithoutImageInput {
    where: InstanceType<typeof IndonesianBankScalarWhereInput>;
    data: InstanceType<typeof IndonesianBankUpdateManyMutationInput>;
}
export declare class IndonesianBankUpdateManyWithoutImageNestedInput {
    create?: Array<IndonesianBankCreateWithoutImageInput>;
    connectOrCreate?: Array<IndonesianBankCreateOrConnectWithoutImageInput>;
    upsert?: Array<IndonesianBankUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof IndonesianBankCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    disconnect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    delete?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    connect?: Array<Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>>;
    update?: Array<IndonesianBankUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<IndonesianBankUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<IndonesianBankScalarWhereInput>;
}
export declare class IndonesianBankUpdateOneRequiredWithoutPrinterMachineNestedInput {
    create?: InstanceType<typeof IndonesianBankCreateWithoutPrinterMachineInput>;
    connectOrCreate?: InstanceType<typeof IndonesianBankCreateOrConnectWithoutPrinterMachineInput>;
    upsert?: InstanceType<typeof IndonesianBankUpsertWithoutPrinterMachineInput>;
    connect?: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    update?: InstanceType<typeof IndonesianBankUpdateToOneWithWhereWithoutPrinterMachineInput>;
}
export declare class IndonesianBankUpdateToOneWithWhereWithoutPrinterMachineInput {
    where?: InstanceType<typeof IndonesianBankWhereInput>;
    data: InstanceType<typeof IndonesianBankUpdateWithoutPrinterMachineInput>;
}
export declare class IndonesianBankUpdateWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    data: InstanceType<typeof IndonesianBankUpdateWithoutImageInput>;
}
export declare class IndonesianBankUpdateWithoutImageInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerMachine?: InstanceType<typeof PrinterMachineUpdateManyWithoutProviderNestedInput>;
}
export declare class IndonesianBankUpdateWithoutPrinterMachineInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutIndonesianBanksNestedInput>;
}
export declare class IndonesianBankUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    code?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutIndonesianBanksNestedInput>;
    printerMachine?: InstanceType<typeof PrinterMachineUpdateManyWithoutProviderNestedInput>;
}
export declare class IndonesianBankUpsertWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    update: InstanceType<typeof IndonesianBankUpdateWithoutImageInput>;
    create: InstanceType<typeof IndonesianBankCreateWithoutImageInput>;
}
export declare class IndonesianBankUpsertWithoutPrinterMachineInput {
    update: InstanceType<typeof IndonesianBankUpdateWithoutPrinterMachineInput>;
    create: InstanceType<typeof IndonesianBankCreateWithoutPrinterMachineInput>;
    where?: InstanceType<typeof IndonesianBankWhereInput>;
}
export declare class IndonesianBankWhereUniqueInput {
    id?: number;
    code?: string;
    AND?: Array<IndonesianBankWhereInput>;
    OR?: Array<IndonesianBankWhereInput>;
    NOT?: Array<IndonesianBankWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
    image?: InstanceType<typeof ImageRelationFilter>;
    printerMachine?: InstanceType<typeof PrinterMachineListRelationFilter>;
}
export declare class IndonesianBankWhereInput {
    AND?: Array<IndonesianBankWhereInput>;
    OR?: Array<IndonesianBankWhereInput>;
    NOT?: Array<IndonesianBankWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    code?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
    image?: InstanceType<typeof ImageRelationFilter>;
    printerMachine?: InstanceType<typeof PrinterMachineListRelationFilter>;
}
export declare class IndonesianBank {
    id: number;
    name: string;
    code: string | null;
    createdAt: Date;
    imageId: string;
    image?: InstanceType<typeof Image>;
    printerMachine?: Array<PrinterMachine>;
    _count?: InstanceType<typeof IndonesianBankCount>;
}
export declare class UpdateManyIndonesianBankArgs {
    data: InstanceType<typeof IndonesianBankUpdateManyMutationInput>;
    where?: InstanceType<typeof IndonesianBankWhereInput>;
}
export declare class UpdateOneIndonesianBankArgs {
    data: InstanceType<typeof IndonesianBankUpdateInput>;
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
}
export declare class UpsertOneIndonesianBankArgs {
    where: Prisma.AtLeast<IndonesianBankWhereUniqueInput, 'id' | 'code'>;
    create: InstanceType<typeof IndonesianBankCreateInput>;
    update: InstanceType<typeof IndonesianBankUpdateInput>;
}
export declare class AggregateInvoice {
    _count?: InstanceType<typeof InvoiceCountAggregate>;
    _avg?: InstanceType<typeof InvoiceAvgAggregate>;
    _sum?: InstanceType<typeof InvoiceSumAggregate>;
    _min?: InstanceType<typeof InvoiceMinAggregate>;
    _max?: InstanceType<typeof InvoiceMaxAggregate>;
}
export declare class CreateManyInvoiceArgs {
    data: Array<InvoiceCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneInvoiceArgs {
    data: InstanceType<typeof InvoiceCreateInput>;
}
export declare class DeleteManyInvoiceArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
}
export declare class DeleteOneInvoiceArgs {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
}
export declare class FindFirstInvoiceOrThrowArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
    orderBy?: Array<InvoiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof InvoiceScalarFieldEnum>;
}
export declare class FindFirstInvoiceArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
    orderBy?: Array<InvoiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof InvoiceScalarFieldEnum>;
}
export declare class FindManyInvoiceArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
    orderBy?: Array<InvoiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof InvoiceScalarFieldEnum>;
}
export declare class FindUniqueInvoiceOrThrowArgs {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
}
export declare class FindUniqueInvoiceArgs {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
}
export declare class InvoiceAggregateArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
    orderBy?: Array<InvoiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof InvoiceCountAggregateInput>;
    _avg?: InstanceType<typeof InvoiceAvgAggregateInput>;
    _sum?: InstanceType<typeof InvoiceSumAggregateInput>;
    _min?: InstanceType<typeof InvoiceMinAggregateInput>;
    _max?: InstanceType<typeof InvoiceMaxAggregateInput>;
}
export declare class InvoiceAvgAggregateInput {
    id?: true;
    adminFee?: true;
    amount?: true;
    uniqueCode?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class InvoiceAvgAggregate {
    id?: number;
    adminFee?: number;
    amount?: number;
    uniqueCode?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class InvoiceCountAggregateInput {
    id?: true;
    adminFee?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
    _all?: true;
}
export declare class InvoiceCountAggregate {
    id: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt: number;
    updatedAt: number;
    status: number;
    serviceOrderId: number;
    platformOrderId: number;
    _all: number;
}
export declare class InvoiceCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class InvoiceCount {
    transactions?: number;
}
export declare class InvoiceCreateManyPlatformOrderInputEnvelope {
    data: Array<InvoiceCreateManyPlatformOrderInput>;
    skipDuplicates?: boolean;
}
export declare class InvoiceCreateManyPlatformOrderInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
}
export declare class InvoiceCreateManyServiceOrderInputEnvelope {
    data: Array<InvoiceCreateManyServiceOrderInput>;
    skipDuplicates?: boolean;
}
export declare class InvoiceCreateManyServiceOrderInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    platformOrderId?: number;
}
export declare class InvoiceCreateManyInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<InvoiceCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
}
export declare class InvoiceCreateNestedManyWithoutServiceOrderInput {
    create?: Array<InvoiceCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
}
export declare class InvoiceCreateNestedOneWithoutTransactionsInput {
    create?: InstanceType<typeof InvoiceCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof InvoiceCreateOrConnectWithoutTransactionsInput>;
    connect?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
}
export declare class InvoiceCreateOrConnectWithoutPlatformOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof InvoiceCreateWithoutPlatformOrderInput>;
}
export declare class InvoiceCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof InvoiceCreateWithoutServiceOrderInput>;
}
export declare class InvoiceCreateOrConnectWithoutTransactionsInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof InvoiceCreateWithoutTransactionsInput>;
}
export declare class InvoiceCreateWithoutPlatformOrderInput {
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutInvoiceInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceCreateWithoutServiceOrderInput {
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutInvoiceInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceCreateWithoutTransactionsInput {
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutInvoiceInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutInvoiceInput>;
}
export declare class InvoiceCreateInput {
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutInvoiceInput>;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutInvoiceInput>;
    transactions?: InstanceType<typeof TransactionCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceGroupByArgs {
    where?: InstanceType<typeof InvoiceWhereInput>;
    orderBy?: Array<InvoiceOrderByWithAggregationInput>;
    by: Array<keyof typeof InvoiceScalarFieldEnum>;
    having?: InstanceType<typeof InvoiceScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof InvoiceCountAggregateInput>;
    _avg?: InstanceType<typeof InvoiceAvgAggregateInput>;
    _sum?: InstanceType<typeof InvoiceSumAggregateInput>;
    _min?: InstanceType<typeof InvoiceMinAggregateInput>;
    _max?: InstanceType<typeof InvoiceMaxAggregateInput>;
}
export declare class InvoiceGroupBy {
    id: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
    _count?: InstanceType<typeof InvoiceCountAggregate>;
    _avg?: InstanceType<typeof InvoiceAvgAggregate>;
    _sum?: InstanceType<typeof InvoiceSumAggregate>;
    _min?: InstanceType<typeof InvoiceMinAggregate>;
    _max?: InstanceType<typeof InvoiceMaxAggregate>;
}
export declare class InvoiceListRelationFilter {
    every?: InstanceType<typeof InvoiceWhereInput>;
    some?: InstanceType<typeof InvoiceWhereInput>;
    none?: InstanceType<typeof InvoiceWhereInput>;
}
export declare class InvoiceMaxAggregateInput {
    id?: true;
    adminFee?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class InvoiceMaxAggregate {
    id?: number;
    adminFee?: number;
    amount?: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status?: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class InvoiceMinAggregateInput {
    id?: true;
    adminFee?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class InvoiceMinAggregate {
    id?: number;
    adminFee?: number;
    amount?: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status?: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class InvoiceNullableRelationFilter {
    is?: InstanceType<typeof InvoiceWhereInput>;
    isNot?: InstanceType<typeof InvoiceWhereInput>;
}
export declare class InvoiceOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class InvoiceOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof InvoiceCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof InvoiceAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof InvoiceMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof InvoiceMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof InvoiceSumOrderByAggregateInput>;
}
export declare class InvoiceOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    serviceOrderId?: InstanceType<typeof SortOrderInput>;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderOrderByWithRelationInput>;
    platformOrder?: InstanceType<typeof PlatformOrderOrderByWithRelationInput>;
    transactions?: InstanceType<typeof TransactionOrderByRelationAggregateInput>;
}
export declare class InvoiceScalarWhereWithAggregatesInput {
    AND?: Array<InvoiceScalarWhereWithAggregatesInput>;
    OR?: Array<InvoiceScalarWhereWithAggregatesInput>;
    NOT?: Array<InvoiceScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    adminFee?: InstanceType<typeof FloatWithAggregatesFilter>;
    amount?: InstanceType<typeof FloatWithAggregatesFilter>;
    uniqueCode?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    status?: InstanceType<typeof EnumPaymentStatusWithAggregatesFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    platformOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class InvoiceScalarWhereInput {
    AND?: Array<InvoiceScalarWhereInput>;
    OR?: Array<InvoiceScalarWhereInput>;
    NOT?: Array<InvoiceScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    adminFee?: InstanceType<typeof FloatFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
}
export declare class InvoiceSumAggregateInput {
    id?: true;
    adminFee?: true;
    amount?: true;
    uniqueCode?: true;
    serviceOrderId?: true;
    platformOrderId?: true;
}
export declare class InvoiceSumAggregate {
    id?: number;
    adminFee?: number;
    amount?: number;
    uniqueCode?: number;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    adminFee?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    serviceOrderId?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
}
export declare class InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<InvoiceCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
}
export declare class InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput {
    create?: Array<InvoiceCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
}
export declare class InvoiceUncheckedCreateWithoutPlatformOrderInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    platformOrderId?: number;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceUncheckedCreateWithoutTransactionsInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
}
export declare class InvoiceUncheckedCreateInput {
    id?: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof PaymentStatus;
    serviceOrderId?: number;
    platformOrderId?: number;
    transactions?: InstanceType<typeof TransactionUncheckedCreateNestedManyWithoutInvoiceInput>;
}
export declare class InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<InvoiceCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<InvoiceUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    update?: Array<InvoiceUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<InvoiceUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<InvoiceScalarWhereInput>;
}
export declare class InvoiceUncheckedUpdateManyWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<InvoiceCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<InvoiceUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    update?: Array<InvoiceUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<InvoiceUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<InvoiceScalarWhereInput>;
}
export declare class InvoiceUncheckedUpdateManyWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class InvoiceUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class InvoiceUncheckedUpdateWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUncheckedUpdateWithoutTransactionsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class InvoiceUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof TransactionUncheckedUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUpdateManyMutationInput {
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
}
export declare class InvoiceUpdateManyWithWhereWithoutPlatformOrderInput {
    where: InstanceType<typeof InvoiceScalarWhereInput>;
    data: InstanceType<typeof InvoiceUpdateManyMutationInput>;
}
export declare class InvoiceUpdateManyWithWhereWithoutServiceOrderInput {
    where: InstanceType<typeof InvoiceScalarWhereInput>;
    data: InstanceType<typeof InvoiceUpdateManyMutationInput>;
}
export declare class InvoiceUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<InvoiceCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<InvoiceUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    update?: Array<InvoiceUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<InvoiceUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<InvoiceScalarWhereInput>;
}
export declare class InvoiceUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<InvoiceCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<InvoiceCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<InvoiceUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof InvoiceCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>>;
    update?: Array<InvoiceUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<InvoiceUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<InvoiceScalarWhereInput>;
}
export declare class InvoiceUpdateOneWithoutTransactionsNestedInput {
    create?: InstanceType<typeof InvoiceCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof InvoiceCreateOrConnectWithoutTransactionsInput>;
    upsert?: InstanceType<typeof InvoiceUpsertWithoutTransactionsInput>;
    disconnect?: InstanceType<typeof InvoiceWhereInput>;
    delete?: InstanceType<typeof InvoiceWhereInput>;
    connect?: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof InvoiceUpdateToOneWithWhereWithoutTransactionsInput>;
}
export declare class InvoiceUpdateToOneWithWhereWithoutTransactionsInput {
    where?: InstanceType<typeof InvoiceWhereInput>;
    data: InstanceType<typeof InvoiceUpdateWithoutTransactionsInput>;
}
export declare class InvoiceUpdateWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof InvoiceUpdateWithoutPlatformOrderInput>;
}
export declare class InvoiceUpdateWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof InvoiceUpdateWithoutServiceOrderInput>;
}
export declare class InvoiceUpdateWithoutPlatformOrderInput {
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutInvoiceNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUpdateWithoutServiceOrderInput {
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutInvoiceNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUpdateWithoutTransactionsInput {
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutInvoiceNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutInvoiceNestedInput>;
}
export declare class InvoiceUpdateInput {
    adminFee?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    serviceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutInvoiceNestedInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutInvoiceNestedInput>;
    transactions?: InstanceType<typeof TransactionUpdateManyWithoutInvoiceNestedInput>;
}
export declare class InvoiceUpsertWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof InvoiceUpdateWithoutPlatformOrderInput>;
    create: InstanceType<typeof InvoiceCreateWithoutPlatformOrderInput>;
}
export declare class InvoiceUpsertWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof InvoiceUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof InvoiceCreateWithoutServiceOrderInput>;
}
export declare class InvoiceUpsertWithoutTransactionsInput {
    update: InstanceType<typeof InvoiceUpdateWithoutTransactionsInput>;
    create: InstanceType<typeof InvoiceCreateWithoutTransactionsInput>;
    where?: InstanceType<typeof InvoiceWhereInput>;
}
export declare class InvoiceWhereUniqueInput {
    id?: number;
    AND?: Array<InvoiceWhereInput>;
    OR?: Array<InvoiceWhereInput>;
    NOT?: Array<InvoiceWhereInput>;
    adminFee?: InstanceType<typeof FloatFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    transactions?: InstanceType<typeof TransactionListRelationFilter>;
}
export declare class InvoiceWhereInput {
    AND?: Array<InvoiceWhereInput>;
    OR?: Array<InvoiceWhereInput>;
    NOT?: Array<InvoiceWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    adminFee?: InstanceType<typeof FloatFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    serviceOrderId?: InstanceType<typeof IntNullableFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    serviceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    transactions?: InstanceType<typeof TransactionListRelationFilter>;
}
export declare class Invoice {
    id: number;
    adminFee: number;
    amount: number;
    uniqueCode: number;
    createdAt: Date;
    updatedAt: Date;
    status: keyof typeof PaymentStatus;
    serviceOrderId: number | null;
    platformOrderId: number | null;
    serviceOrder?: InstanceType<typeof ServiceOrder> | null;
    platformOrder?: InstanceType<typeof PlatformOrder> | null;
    transactions?: Array<Transaction>;
    _count?: InstanceType<typeof InvoiceCount>;
}
export declare class UpdateManyInvoiceArgs {
    data: InstanceType<typeof InvoiceUpdateManyMutationInput>;
    where?: InstanceType<typeof InvoiceWhereInput>;
}
export declare class UpdateOneInvoiceArgs {
    data: InstanceType<typeof InvoiceUpdateInput>;
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
}
export declare class UpsertOneInvoiceArgs {
    where: Prisma.AtLeast<InvoiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof InvoiceCreateInput>;
    update: InstanceType<typeof InvoiceUpdateInput>;
}
export declare class AggregateLaundryItem {
    _count?: InstanceType<typeof LaundryItemCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemSumAggregate>;
    _min?: InstanceType<typeof LaundryItemMinAggregate>;
    _max?: InstanceType<typeof LaundryItemMaxAggregate>;
}
export declare class CreateManyLaundryItemArgs {
    data: Array<LaundryItemCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneLaundryItemArgs {
    data: InstanceType<typeof LaundryItemCreateInput>;
}
export declare class DeleteManyLaundryItemArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class DeleteOneLaundryItemArgs {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class FindFirstLaundryItemOrThrowArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    orderBy?: Array<LaundryItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemScalarFieldEnum>;
}
export declare class FindFirstLaundryItemArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    orderBy?: Array<LaundryItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemScalarFieldEnum>;
}
export declare class FindManyLaundryItemArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    orderBy?: Array<LaundryItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemScalarFieldEnum>;
}
export declare class FindUniqueLaundryItemOrThrowArgs {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class FindUniqueLaundryItemArgs {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class LaundryItemAggregateArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    orderBy?: Array<LaundryItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemSumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemMaxAggregateInput>;
}
export declare class LaundryItemAvgAggregateInput {
    id?: true;
    categoryId?: true;
    unitOfMeasureId?: true;
}
export declare class LaundryItemAvgAggregate {
    id?: number;
    categoryId?: number;
    unitOfMeasureId?: number;
}
export declare class LaundryItemAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class LaundryItemCountAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    requiresDryCleaning?: true;
    requiresIron?: true;
    requiresFold?: true;
    requiresPack?: true;
    requiresHang?: true;
    createdAt?: true;
    updatedAt?: true;
    categoryId?: true;
    unitOfMeasureId?: true;
    _all?: true;
}
export declare class LaundryItemCountAggregate {
    id: number;
    name: number;
    description: number;
    requiresDryCleaning: number;
    requiresIron: number;
    requiresFold: number;
    requiresPack: number;
    requiresHang: number;
    createdAt: number;
    updatedAt: number;
    categoryId: number;
    unitOfMeasureId: number;
    _all: number;
}
export declare class LaundryItemCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    requiresDryCleaning?: keyof typeof SortOrder;
    requiresIron?: keyof typeof SortOrder;
    requiresFold?: keyof typeof SortOrder;
    requiresPack?: keyof typeof SortOrder;
    requiresHang?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class LaundryItemCount {
    images?: number;
    outletServices?: number;
    marketSalePrice?: number;
}
export declare class LaundryItemCreateManyCategoryInputEnvelope {
    data: Array<LaundryItemCreateManyCategoryInput>;
    skipDuplicates?: boolean;
}
export declare class LaundryItemCreateManyCategoryInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
}
export declare class LaundryItemCreateManyUnitOfMeasureInputEnvelope {
    data: Array<LaundryItemCreateManyUnitOfMeasureInput>;
    skipDuplicates?: boolean;
}
export declare class LaundryItemCreateManyUnitOfMeasureInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
}
export declare class LaundryItemCreateManyInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
}
export declare class LaundryItemCreateNestedManyWithoutCategoryInput {
    create?: Array<LaundryItemCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemCreateNestedManyWithoutUnitOfMeasureInput {
    create?: Array<LaundryItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyUnitOfMeasureInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemCreateNestedOneWithoutImagesInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutImagesInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutImagesInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCreateNestedOneWithoutMarketSalePriceInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutMarketSalePriceInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutMarketSalePriceInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCreateNestedOneWithoutOutletServicesInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutOutletServicesInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutOutletServicesInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCreateOrConnectWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateWithoutCategoryInput>;
}
export declare class LaundryItemCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateWithoutImagesInput>;
}
export declare class LaundryItemCreateOrConnectWithoutMarketSalePriceInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateWithoutMarketSalePriceInput>;
}
export declare class LaundryItemCreateOrConnectWithoutOutletServicesInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateWithoutOutletServicesInput>;
}
export declare class LaundryItemCreateOrConnectWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateWithoutUnitOfMeasureInput>;
}
export declare class LaundryItemCreateWithoutCategoryInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemCreateWithoutImagesInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutItemsInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemCreateWithoutMarketSalePriceInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutItemsInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput>;
}
export declare class LaundryItemCreateWithoutOutletServicesInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutItemsInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemCreateWithoutUnitOfMeasureInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemCreateInput {
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutItemsInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemGroupByArgs {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    orderBy?: Array<LaundryItemOrderByWithAggregationInput>;
    by: Array<keyof typeof LaundryItemScalarFieldEnum>;
    having?: InstanceType<typeof LaundryItemScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemSumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemMaxAggregateInput>;
}
export declare class LaundryItemGroupBy {
    id: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt: Date | string;
    updatedAt: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
    _count?: InstanceType<typeof LaundryItemCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemSumAggregate>;
    _min?: InstanceType<typeof LaundryItemMinAggregate>;
    _max?: InstanceType<typeof LaundryItemMaxAggregate>;
}
export declare class LaundryItemListRelationFilter {
    every?: InstanceType<typeof LaundryItemWhereInput>;
    some?: InstanceType<typeof LaundryItemWhereInput>;
    none?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemMaxAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    requiresDryCleaning?: true;
    requiresIron?: true;
    requiresFold?: true;
    requiresPack?: true;
    requiresHang?: true;
    createdAt?: true;
    updatedAt?: true;
    categoryId?: true;
    unitOfMeasureId?: true;
}
export declare class LaundryItemMaxAggregate {
    id?: number;
    name?: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId?: number;
    unitOfMeasureId?: number;
}
export declare class LaundryItemMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    requiresDryCleaning?: keyof typeof SortOrder;
    requiresIron?: keyof typeof SortOrder;
    requiresFold?: keyof typeof SortOrder;
    requiresPack?: keyof typeof SortOrder;
    requiresHang?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class LaundryItemMinAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    requiresDryCleaning?: true;
    requiresIron?: true;
    requiresFold?: true;
    requiresPack?: true;
    requiresHang?: true;
    createdAt?: true;
    updatedAt?: true;
    categoryId?: true;
    unitOfMeasureId?: true;
}
export declare class LaundryItemMinAggregate {
    id?: number;
    name?: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId?: number;
    unitOfMeasureId?: number;
}
export declare class LaundryItemMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    requiresDryCleaning?: keyof typeof SortOrder;
    requiresIron?: keyof typeof SortOrder;
    requiresFold?: keyof typeof SortOrder;
    requiresPack?: keyof typeof SortOrder;
    requiresHang?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class LaundryItemNullableRelationFilter {
    is?: InstanceType<typeof LaundryItemWhereInput>;
    isNot?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class LaundryItemOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    requiresDryCleaning?: InstanceType<typeof SortOrderInput>;
    requiresIron?: InstanceType<typeof SortOrderInput>;
    requiresFold?: InstanceType<typeof SortOrderInput>;
    requiresPack?: InstanceType<typeof SortOrderInput>;
    requiresHang?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof LaundryItemCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof LaundryItemMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof LaundryItemMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemSumOrderByAggregateInput>;
}
export declare class LaundryItemOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    requiresDryCleaning?: InstanceType<typeof SortOrderInput>;
    requiresIron?: InstanceType<typeof SortOrderInput>;
    requiresFold?: InstanceType<typeof SortOrderInput>;
    requiresPack?: InstanceType<typeof SortOrderInput>;
    requiresHang?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
    category?: InstanceType<typeof LaundryItemCategoryOrderByWithRelationInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureOrderByWithRelationInput>;
    images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceOrderByRelationAggregateInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryOrderByRelationAggregateInput>;
}
export declare class LaundryItemRelationFilter {
    is?: InstanceType<typeof LaundryItemWhereInput>;
    isNot?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemScalarWhereWithAggregatesInput {
    AND?: Array<LaundryItemScalarWhereWithAggregatesInput>;
    OR?: Array<LaundryItemScalarWhereWithAggregatesInput>;
    NOT?: Array<LaundryItemScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    requiresDryCleaning?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    requiresIron?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    requiresFold?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    requiresPack?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    requiresHang?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    categoryId?: InstanceType<typeof IntWithAggregatesFilter>;
    unitOfMeasureId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class LaundryItemScalarWhereInput {
    AND?: Array<LaundryItemScalarWhereInput>;
    OR?: Array<LaundryItemScalarWhereInput>;
    NOT?: Array<LaundryItemScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    requiresDryCleaning?: InstanceType<typeof BoolNullableFilter>;
    requiresIron?: InstanceType<typeof BoolNullableFilter>;
    requiresFold?: InstanceType<typeof BoolNullableFilter>;
    requiresPack?: InstanceType<typeof BoolNullableFilter>;
    requiresHang?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
}
export declare class LaundryItemSumAggregateInput {
    id?: true;
    categoryId?: true;
    unitOfMeasureId?: true;
}
export declare class LaundryItemSumAggregate {
    id?: number;
    categoryId?: number;
    unitOfMeasureId?: number;
}
export declare class LaundryItemSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class LaundryItemUncheckedCreateNestedManyWithoutCategoryInput {
    create?: Array<LaundryItemCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput {
    create?: Array<LaundryItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyUnitOfMeasureInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemUncheckedCreateWithoutCategoryInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemUncheckedCreateWithoutImagesInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemUncheckedCreateWithoutMarketSalePriceInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput>;
}
export declare class LaundryItemUncheckedCreateWithoutOutletServicesInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemUncheckedCreateWithoutUnitOfMeasureInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemUncheckedCreateInput {
    id?: number;
    name: string;
    description?: string;
    requiresDryCleaning?: boolean;
    requiresIron?: boolean;
    requiresFold?: boolean;
    requiresPack?: boolean;
    requiresHang?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    categoryId: number;
    unitOfMeasureId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutLaundryItemInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput>;
}
export declare class LaundryItemUncheckedUpdateManyWithoutCategoryNestedInput {
    create?: Array<LaundryItemCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<LaundryItemUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<LaundryItemUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<LaundryItemScalarWhereInput>;
}
export declare class LaundryItemUncheckedUpdateManyWithoutCategoryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput {
    create?: Array<LaundryItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutUnitOfMeasureInput>;
    upsert?: Array<LaundryItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyUnitOfMeasureInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput>;
    updateMany?: Array<LaundryItemUpdateManyWithWhereWithoutUnitOfMeasureInput>;
    deleteMany?: Array<LaundryItemScalarWhereInput>;
}
export declare class LaundryItemUncheckedUpdateManyWithoutUnitOfMeasureInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemUncheckedUpdateWithoutCategoryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUncheckedUpdateWithoutMarketSalePriceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput>;
}
export declare class LaundryItemUncheckedUpdateWithoutOutletServicesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUncheckedUpdateWithoutUnitOfMeasureInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class LaundryItemUpdateManyWithWhereWithoutCategoryInput {
    where: InstanceType<typeof LaundryItemScalarWhereInput>;
    data: InstanceType<typeof LaundryItemUpdateManyMutationInput>;
}
export declare class LaundryItemUpdateManyWithWhereWithoutUnitOfMeasureInput {
    where: InstanceType<typeof LaundryItemScalarWhereInput>;
    data: InstanceType<typeof LaundryItemUpdateManyMutationInput>;
}
export declare class LaundryItemUpdateManyWithoutCategoryNestedInput {
    create?: Array<LaundryItemCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<LaundryItemUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<LaundryItemUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<LaundryItemScalarWhereInput>;
}
export declare class LaundryItemUpdateManyWithoutUnitOfMeasureNestedInput {
    create?: Array<LaundryItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<LaundryItemCreateOrConnectWithoutUnitOfMeasureInput>;
    upsert?: Array<LaundryItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof LaundryItemCreateManyUnitOfMeasureInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput>;
    updateMany?: Array<LaundryItemUpdateManyWithWhereWithoutUnitOfMeasureInput>;
    deleteMany?: Array<LaundryItemScalarWhereInput>;
}
export declare class LaundryItemUpdateOneRequiredWithoutMarketSalePriceNestedInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutMarketSalePriceInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutMarketSalePriceInput>;
    upsert?: InstanceType<typeof LaundryItemUpsertWithoutMarketSalePriceInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof LaundryItemUpdateToOneWithWhereWithoutMarketSalePriceInput>;
}
export declare class LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutOutletServicesInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutOutletServicesInput>;
    upsert?: InstanceType<typeof LaundryItemUpsertWithoutOutletServicesInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof LaundryItemUpdateToOneWithWhereWithoutOutletServicesInput>;
}
export declare class LaundryItemUpdateOneWithoutImagesNestedInput {
    create?: InstanceType<typeof LaundryItemCreateWithoutImagesInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCreateOrConnectWithoutImagesInput>;
    upsert?: InstanceType<typeof LaundryItemUpsertWithoutImagesInput>;
    disconnect?: InstanceType<typeof LaundryItemWhereInput>;
    delete?: InstanceType<typeof LaundryItemWhereInput>;
    connect?: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof LaundryItemUpdateToOneWithWhereWithoutImagesInput>;
}
export declare class LaundryItemUpdateToOneWithWhereWithoutImagesInput {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    data: InstanceType<typeof LaundryItemUpdateWithoutImagesInput>;
}
export declare class LaundryItemUpdateToOneWithWhereWithoutMarketSalePriceInput {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    data: InstanceType<typeof LaundryItemUpdateWithoutMarketSalePriceInput>;
}
export declare class LaundryItemUpdateToOneWithWhereWithoutOutletServicesInput {
    where?: InstanceType<typeof LaundryItemWhereInput>;
    data: InstanceType<typeof LaundryItemUpdateWithoutOutletServicesInput>;
}
export declare class LaundryItemUpdateWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    data: InstanceType<typeof LaundryItemUpdateWithoutCategoryInput>;
}
export declare class LaundryItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    data: InstanceType<typeof LaundryItemUpdateWithoutUnitOfMeasureInput>;
}
export declare class LaundryItemUpdateWithoutCategoryInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpdateWithoutImagesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpdateWithoutMarketSalePriceInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput>;
}
export declare class LaundryItemUpdateWithoutOutletServicesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpdateWithoutUnitOfMeasureInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    requiresDryCleaning?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresIron?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresFold?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresPack?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    requiresHang?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutLaundryItemNestedInput>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput>;
}
export declare class LaundryItemUpsertWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    update: InstanceType<typeof LaundryItemUpdateWithoutCategoryInput>;
    create: InstanceType<typeof LaundryItemCreateWithoutCategoryInput>;
}
export declare class LaundryItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    update: InstanceType<typeof LaundryItemUpdateWithoutUnitOfMeasureInput>;
    create: InstanceType<typeof LaundryItemCreateWithoutUnitOfMeasureInput>;
}
export declare class LaundryItemUpsertWithoutImagesInput {
    update: InstanceType<typeof LaundryItemUpdateWithoutImagesInput>;
    create: InstanceType<typeof LaundryItemCreateWithoutImagesInput>;
    where?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemUpsertWithoutMarketSalePriceInput {
    update: InstanceType<typeof LaundryItemUpdateWithoutMarketSalePriceInput>;
    create: InstanceType<typeof LaundryItemCreateWithoutMarketSalePriceInput>;
    where?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemUpsertWithoutOutletServicesInput {
    update: InstanceType<typeof LaundryItemUpdateWithoutOutletServicesInput>;
    create: InstanceType<typeof LaundryItemCreateWithoutOutletServicesInput>;
    where?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class LaundryItemWhereUniqueInput {
    id?: number;
    AND?: Array<LaundryItemWhereInput>;
    OR?: Array<LaundryItemWhereInput>;
    NOT?: Array<LaundryItemWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    requiresDryCleaning?: InstanceType<typeof BoolNullableFilter>;
    requiresIron?: InstanceType<typeof BoolNullableFilter>;
    requiresFold?: InstanceType<typeof BoolNullableFilter>;
    requiresPack?: InstanceType<typeof BoolNullableFilter>;
    requiresHang?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
    category?: InstanceType<typeof LaundryItemCategoryRelationFilter>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryListRelationFilter>;
}
export declare class LaundryItemWhereInput {
    AND?: Array<LaundryItemWhereInput>;
    OR?: Array<LaundryItemWhereInput>;
    NOT?: Array<LaundryItemWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    requiresDryCleaning?: InstanceType<typeof BoolNullableFilter>;
    requiresIron?: InstanceType<typeof BoolNullableFilter>;
    requiresFold?: InstanceType<typeof BoolNullableFilter>;
    requiresPack?: InstanceType<typeof BoolNullableFilter>;
    requiresHang?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
    category?: InstanceType<typeof LaundryItemCategoryRelationFilter>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    outletServices?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    marketSalePrice?: InstanceType<typeof MarketSalePriceHistoryListRelationFilter>;
}
export declare class LaundryItem {
    id: number;
    name: string;
    description: string | null;
    requiresDryCleaning: boolean | null;
    requiresIron: boolean | null;
    requiresFold: boolean | null;
    requiresPack: boolean | null;
    requiresHang: boolean | null;
    createdAt: Date;
    updatedAt: Date;
    categoryId: number;
    unitOfMeasureId: number;
    category?: InstanceType<typeof LaundryItemCategory>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasure>;
    images?: Array<Image>;
    outletServices?: Array<OutletLaundryItemService>;
    marketSalePrice?: Array<MarketSalePriceHistory>;
    _count?: InstanceType<typeof LaundryItemCount>;
}
export declare class UpdateManyLaundryItemArgs {
    data: InstanceType<typeof LaundryItemUpdateManyMutationInput>;
    where?: InstanceType<typeof LaundryItemWhereInput>;
}
export declare class UpdateOneLaundryItemArgs {
    data: InstanceType<typeof LaundryItemUpdateInput>;
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
}
export declare class UpsertOneLaundryItemArgs {
    where: Prisma.AtLeast<LaundryItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCreateInput>;
    update: InstanceType<typeof LaundryItemUpdateInput>;
}
export declare class AggregateLaundryItemCategory {
    _count?: InstanceType<typeof LaundryItemCategoryCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemCategoryAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemCategorySumAggregate>;
    _min?: InstanceType<typeof LaundryItemCategoryMinAggregate>;
    _max?: InstanceType<typeof LaundryItemCategoryMaxAggregate>;
}
export declare class CreateManyLaundryItemCategoryArgs {
    data: Array<LaundryItemCategoryCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneLaundryItemCategoryArgs {
    data: InstanceType<typeof LaundryItemCategoryCreateInput>;
}
export declare class DeleteManyLaundryItemCategoryArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class DeleteOneLaundryItemCategoryArgs {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class FindFirstLaundryItemCategoryOrThrowArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    orderBy?: Array<LaundryItemCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemCategoryScalarFieldEnum>;
}
export declare class FindFirstLaundryItemCategoryArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    orderBy?: Array<LaundryItemCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemCategoryScalarFieldEnum>;
}
export declare class FindManyLaundryItemCategoryArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    orderBy?: Array<LaundryItemCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemCategoryScalarFieldEnum>;
}
export declare class FindUniqueLaundryItemCategoryOrThrowArgs {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class FindUniqueLaundryItemCategoryArgs {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCategoryAggregateArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    orderBy?: Array<LaundryItemCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemCategoryCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemCategoryAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemCategorySumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemCategoryMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemCategoryMaxAggregateInput>;
}
export declare class LaundryItemCategoryAvgAggregateInput {
    id?: true;
}
export declare class LaundryItemCategoryAvgAggregate {
    id?: number;
}
export declare class LaundryItemCategoryAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryCountAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    _all?: true;
}
export declare class LaundryItemCategoryCountAggregate {
    id: number;
    name: number;
    createdAt: number;
    updatedAt: number;
    _all: number;
}
export declare class LaundryItemCategoryCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryCount {
    items?: number;
    LaundryItemRequest?: number;
    voucherSetting?: number;
}
export declare class LaundryItemCategoryCreateManyInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput {
    create?: Array<LaundryItemCategoryCreateWithoutVoucherSettingInput>;
    connectOrCreate?: Array<LaundryItemCategoryCreateOrConnectWithoutVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemCategoryCreateNestedOneWithoutItemsInput {
    create?: InstanceType<typeof LaundryItemCategoryCreateWithoutItemsInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCategoryCreateOrConnectWithoutItemsInput>;
    connect?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCategoryCreateNestedOneWithoutLaundryItemRequestInput {
    create?: InstanceType<typeof LaundryItemCategoryCreateWithoutLaundryItemRequestInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCategoryCreateOrConnectWithoutLaundryItemRequestInput>;
    connect?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class LaundryItemCategoryCreateOrConnectWithoutItemsInput {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutItemsInput>;
}
export declare class LaundryItemCategoryCreateOrConnectWithoutLaundryItemRequestInput {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutLaundryItemRequestInput>;
}
export declare class LaundryItemCategoryCreateOrConnectWithoutVoucherSettingInput {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutVoucherSettingInput>;
}
export declare class LaundryItemCategoryCreateWithoutItemsInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryCreateWithoutLaundryItemRequestInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryCreateWithoutVoucherSettingInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemCreateNestedManyWithoutCategoryInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutCategoryInput>;
}
export declare class LaundryItemCategoryCreateInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemCreateNestedManyWithoutCategoryInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryGroupByArgs {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    orderBy?: Array<LaundryItemCategoryOrderByWithAggregationInput>;
    by: Array<keyof typeof LaundryItemCategoryScalarFieldEnum>;
    having?: InstanceType<typeof LaundryItemCategoryScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemCategoryCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemCategoryAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemCategorySumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemCategoryMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemCategoryMaxAggregateInput>;
}
export declare class LaundryItemCategoryGroupBy {
    id: number;
    name: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    _count?: InstanceType<typeof LaundryItemCategoryCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemCategoryAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemCategorySumAggregate>;
    _min?: InstanceType<typeof LaundryItemCategoryMinAggregate>;
    _max?: InstanceType<typeof LaundryItemCategoryMaxAggregate>;
}
export declare class LaundryItemCategoryListRelationFilter {
    every?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    some?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    none?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class LaundryItemCategoryMaxAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class LaundryItemCategoryMaxAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class LaundryItemCategoryMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryMinAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class LaundryItemCategoryMinAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class LaundryItemCategoryMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    _count?: InstanceType<typeof LaundryItemCategoryCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemCategoryAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof LaundryItemCategoryMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof LaundryItemCategoryMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemCategorySumOrderByAggregateInput>;
}
export declare class LaundryItemCategoryOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    items?: InstanceType<typeof LaundryItemOrderByRelationAggregateInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestOrderByRelationAggregateInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingOrderByRelationAggregateInput>;
}
export declare class LaundryItemCategoryRelationFilter {
    is?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    isNot?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class LaundryItemCategoryScalarWhereWithAggregatesInput {
    AND?: Array<LaundryItemCategoryScalarWhereWithAggregatesInput>;
    OR?: Array<LaundryItemCategoryScalarWhereWithAggregatesInput>;
    NOT?: Array<LaundryItemCategoryScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}
export declare class LaundryItemCategoryScalarWhereInput {
    AND?: Array<LaundryItemCategoryScalarWhereInput>;
    OR?: Array<LaundryItemCategoryScalarWhereInput>;
    NOT?: Array<LaundryItemCategoryScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
}
export declare class LaundryItemCategorySumAggregateInput {
    id?: true;
}
export declare class LaundryItemCategorySumAggregate {
    id?: number;
}
export declare class LaundryItemCategorySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput {
    create?: Array<LaundryItemCategoryCreateWithoutVoucherSettingInput>;
    connectOrCreate?: Array<LaundryItemCategoryCreateOrConnectWithoutVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemCategoryUncheckedCreateWithoutItemsInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryUncheckedCreateWithoutLaundryItemRequestInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryUncheckedCreateWithoutVoucherSettingInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutCategoryInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutCategoryInput>;
}
export declare class LaundryItemCategoryUncheckedCreateInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    items?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutCategoryInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutCategoryInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemCategoriesInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput {
    create?: Array<LaundryItemCategoryCreateWithoutVoucherSettingInput>;
    connectOrCreate?: Array<LaundryItemCategoryCreateOrConnectWithoutVoucherSettingInput>;
    upsert?: Array<LaundryItemCategoryUpsertWithWhereUniqueWithoutVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemCategoryUpdateWithWhereUniqueWithoutVoucherSettingInput>;
    updateMany?: Array<LaundryItemCategoryUpdateManyWithWhereWithoutVoucherSettingInput>;
    deleteMany?: Array<LaundryItemCategoryScalarWhereInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateWithoutItemsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateWithoutLaundryItemRequestInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateWithoutVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutCategoryNestedInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutCategoryNestedInput>;
}
export declare class LaundryItemCategoryUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutCategoryNestedInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class LaundryItemCategoryUpdateManyWithWhereWithoutVoucherSettingInput {
    where: InstanceType<typeof LaundryItemCategoryScalarWhereInput>;
    data: InstanceType<typeof LaundryItemCategoryUpdateManyMutationInput>;
}
export declare class LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput {
    create?: Array<LaundryItemCategoryCreateWithoutVoucherSettingInput>;
    connectOrCreate?: Array<LaundryItemCategoryCreateOrConnectWithoutVoucherSettingInput>;
    upsert?: Array<LaundryItemCategoryUpsertWithWhereUniqueWithoutVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemCategoryUpdateWithWhereUniqueWithoutVoucherSettingInput>;
    updateMany?: Array<LaundryItemCategoryUpdateManyWithWhereWithoutVoucherSettingInput>;
    deleteMany?: Array<LaundryItemCategoryScalarWhereInput>;
}
export declare class LaundryItemCategoryUpdateOneRequiredWithoutItemsNestedInput {
    create?: InstanceType<typeof LaundryItemCategoryCreateWithoutItemsInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCategoryCreateOrConnectWithoutItemsInput>;
    upsert?: InstanceType<typeof LaundryItemCategoryUpsertWithoutItemsInput>;
    connect?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof LaundryItemCategoryUpdateToOneWithWhereWithoutItemsInput>;
}
export declare class LaundryItemCategoryUpdateOneRequiredWithoutLaundryItemRequestNestedInput {
    create?: InstanceType<typeof LaundryItemCategoryCreateWithoutLaundryItemRequestInput>;
    connectOrCreate?: InstanceType<typeof LaundryItemCategoryCreateOrConnectWithoutLaundryItemRequestInput>;
    upsert?: InstanceType<typeof LaundryItemCategoryUpsertWithoutLaundryItemRequestInput>;
    connect?: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof LaundryItemCategoryUpdateToOneWithWhereWithoutLaundryItemRequestInput>;
}
export declare class LaundryItemCategoryUpdateToOneWithWhereWithoutItemsInput {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    data: InstanceType<typeof LaundryItemCategoryUpdateWithoutItemsInput>;
}
export declare class LaundryItemCategoryUpdateToOneWithWhereWithoutLaundryItemRequestInput {
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
    data: InstanceType<typeof LaundryItemCategoryUpdateWithoutLaundryItemRequestInput>;
}
export declare class LaundryItemCategoryUpdateWithWhereUniqueWithoutVoucherSettingInput {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    data: InstanceType<typeof LaundryItemCategoryUpdateWithoutVoucherSettingInput>;
}
export declare class LaundryItemCategoryUpdateWithoutItemsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUpdateWithoutLaundryItemRequestInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUpdateWithoutVoucherSettingInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUpdateManyWithoutCategoryNestedInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutCategoryNestedInput>;
}
export declare class LaundryItemCategoryUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    items?: InstanceType<typeof LaundryItemUpdateManyWithoutCategoryNestedInput>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutCategoryNestedInput>;
    voucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemCategoriesNestedInput>;
}
export declare class LaundryItemCategoryUpsertWithWhereUniqueWithoutVoucherSettingInput {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    update: InstanceType<typeof LaundryItemCategoryUpdateWithoutVoucherSettingInput>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutVoucherSettingInput>;
}
export declare class LaundryItemCategoryUpsertWithoutItemsInput {
    update: InstanceType<typeof LaundryItemCategoryUpdateWithoutItemsInput>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutItemsInput>;
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class LaundryItemCategoryUpsertWithoutLaundryItemRequestInput {
    update: InstanceType<typeof LaundryItemCategoryUpdateWithoutLaundryItemRequestInput>;
    create: InstanceType<typeof LaundryItemCategoryCreateWithoutLaundryItemRequestInput>;
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class LaundryItemCategoryWhereUniqueInput {
    id?: number;
    AND?: Array<LaundryItemCategoryWhereInput>;
    OR?: Array<LaundryItemCategoryWhereInput>;
    NOT?: Array<LaundryItemCategoryWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    items?: InstanceType<typeof LaundryItemListRelationFilter>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestListRelationFilter>;
    voucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class LaundryItemCategoryWhereInput {
    AND?: Array<LaundryItemCategoryWhereInput>;
    OR?: Array<LaundryItemCategoryWhereInput>;
    NOT?: Array<LaundryItemCategoryWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    items?: InstanceType<typeof LaundryItemListRelationFilter>;
    LaundryItemRequest?: InstanceType<typeof LaundryItemRequestListRelationFilter>;
    voucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class LaundryItemCategory {
    id: number;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    items?: Array<LaundryItem>;
    LaundryItemRequest?: Array<LaundryItemRequest>;
    voucherSetting?: Array<VoucherSetting>;
    _count?: InstanceType<typeof LaundryItemCategoryCount>;
}
export declare class UpdateManyLaundryItemCategoryArgs {
    data: InstanceType<typeof LaundryItemCategoryUpdateManyMutationInput>;
    where?: InstanceType<typeof LaundryItemCategoryWhereInput>;
}
export declare class UpdateOneLaundryItemCategoryArgs {
    data: InstanceType<typeof LaundryItemCategoryUpdateInput>;
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
}
export declare class UpsertOneLaundryItemCategoryArgs {
    where: Prisma.AtLeast<LaundryItemCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemCategoryCreateInput>;
    update: InstanceType<typeof LaundryItemCategoryUpdateInput>;
}
export declare class AggregateLaundryItemRequest {
    _count?: InstanceType<typeof LaundryItemRequestCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemRequestAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemRequestSumAggregate>;
    _min?: InstanceType<typeof LaundryItemRequestMinAggregate>;
    _max?: InstanceType<typeof LaundryItemRequestMaxAggregate>;
}
export declare class CreateManyLaundryItemRequestArgs {
    data: Array<LaundryItemRequestCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneLaundryItemRequestArgs {
    data: InstanceType<typeof LaundryItemRequestCreateInput>;
}
export declare class DeleteManyLaundryItemRequestArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
}
export declare class DeleteOneLaundryItemRequestArgs {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
}
export declare class FindFirstLaundryItemRequestOrThrowArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
    orderBy?: Array<LaundryItemRequestOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemRequestScalarFieldEnum>;
}
export declare class FindFirstLaundryItemRequestArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
    orderBy?: Array<LaundryItemRequestOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemRequestScalarFieldEnum>;
}
export declare class FindManyLaundryItemRequestArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
    orderBy?: Array<LaundryItemRequestOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof LaundryItemRequestScalarFieldEnum>;
}
export declare class FindUniqueLaundryItemRequestOrThrowArgs {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
}
export declare class FindUniqueLaundryItemRequestArgs {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
}
export declare class LaundryItemRequestAggregateArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
    orderBy?: Array<LaundryItemRequestOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemRequestCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemRequestAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemRequestSumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemRequestMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemRequestMaxAggregateInput>;
}
export declare class LaundryItemRequestAvgAggregateInput {
    id?: true;
    categoryId?: true;
}
export declare class LaundryItemRequestAvgAggregate {
    id?: number;
    categoryId?: number;
}
export declare class LaundryItemRequestAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestCountAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    requestById?: true;
    categoryId?: true;
    _all?: true;
}
export declare class LaundryItemRequestCountAggregate {
    id: number;
    name: number;
    description: number;
    createdAt: number;
    updatedAt: number;
    status: number;
    requestById: number;
    categoryId: number;
    _all: number;
}
export declare class LaundryItemRequestCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    requestById?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestCreateManyCategoryInputEnvelope {
    data: Array<LaundryItemRequestCreateManyCategoryInput>;
    skipDuplicates?: boolean;
}
export declare class LaundryItemRequestCreateManyCategoryInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
}
export declare class LaundryItemRequestCreateManyRequestByInputEnvelope {
    data: Array<LaundryItemRequestCreateManyRequestByInput>;
    skipDuplicates?: boolean;
}
export declare class LaundryItemRequestCreateManyRequestByInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    categoryId: number;
}
export declare class LaundryItemRequestCreateManyInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
    categoryId: number;
}
export declare class LaundryItemRequestCreateNestedManyWithoutCategoryInput {
    create?: Array<LaundryItemRequestCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemRequestCreateNestedManyWithoutRequestByInput {
    create?: Array<LaundryItemRequestCreateWithoutRequestByInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutRequestByInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyRequestByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemRequestCreateOrConnectWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemRequestCreateWithoutCategoryInput>;
}
export declare class LaundryItemRequestCreateOrConnectWithoutRequestByInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemRequestCreateWithoutRequestByInput>;
}
export declare class LaundryItemRequestCreateWithoutCategoryInput {
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestBy: InstanceType<typeof OwnerCreateNestedOneWithoutLaundryItemRequestsInput>;
}
export declare class LaundryItemRequestCreateWithoutRequestByInput {
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutLaundryItemRequestInput>;
}
export declare class LaundryItemRequestCreateInput {
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestBy: InstanceType<typeof OwnerCreateNestedOneWithoutLaundryItemRequestsInput>;
    category: InstanceType<typeof LaundryItemCategoryCreateNestedOneWithoutLaundryItemRequestInput>;
}
export declare class LaundryItemRequestGroupByArgs {
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
    orderBy?: Array<LaundryItemRequestOrderByWithAggregationInput>;
    by: Array<keyof typeof LaundryItemRequestScalarFieldEnum>;
    having?: InstanceType<typeof LaundryItemRequestScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof LaundryItemRequestCountAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemRequestAvgAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemRequestSumAggregateInput>;
    _min?: InstanceType<typeof LaundryItemRequestMinAggregateInput>;
    _max?: InstanceType<typeof LaundryItemRequestMaxAggregateInput>;
}
export declare class LaundryItemRequestGroupBy {
    id: number;
    name: string;
    description?: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
    categoryId: number;
    _count?: InstanceType<typeof LaundryItemRequestCountAggregate>;
    _avg?: InstanceType<typeof LaundryItemRequestAvgAggregate>;
    _sum?: InstanceType<typeof LaundryItemRequestSumAggregate>;
    _min?: InstanceType<typeof LaundryItemRequestMinAggregate>;
    _max?: InstanceType<typeof LaundryItemRequestMaxAggregate>;
}
export declare class LaundryItemRequestListRelationFilter {
    every?: InstanceType<typeof LaundryItemRequestWhereInput>;
    some?: InstanceType<typeof LaundryItemRequestWhereInput>;
    none?: InstanceType<typeof LaundryItemRequestWhereInput>;
}
export declare class LaundryItemRequestMaxAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    requestById?: true;
    categoryId?: true;
}
export declare class LaundryItemRequestMaxAggregate {
    id?: number;
    name?: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status?: keyof typeof LaundryItemRequestStatus;
    requestById?: string;
    categoryId?: number;
}
export declare class LaundryItemRequestMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    requestById?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestMinAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    status?: true;
    requestById?: true;
    categoryId?: true;
}
export declare class LaundryItemRequestMinAggregate {
    id?: number;
    name?: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status?: keyof typeof LaundryItemRequestStatus;
    requestById?: string;
    categoryId?: number;
}
export declare class LaundryItemRequestMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    requestById?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    requestById?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof LaundryItemRequestCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof LaundryItemRequestAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof LaundryItemRequestMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof LaundryItemRequestMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof LaundryItemRequestSumOrderByAggregateInput>;
}
export declare class LaundryItemRequestOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    requestById?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    requestBy?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    category?: InstanceType<typeof LaundryItemCategoryOrderByWithRelationInput>;
}
export declare class LaundryItemRequestScalarWhereWithAggregatesInput {
    AND?: Array<LaundryItemRequestScalarWhereWithAggregatesInput>;
    OR?: Array<LaundryItemRequestScalarWhereWithAggregatesInput>;
    NOT?: Array<LaundryItemRequestScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusWithAggregatesFilter>;
    requestById?: InstanceType<typeof StringWithAggregatesFilter>;
    categoryId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class LaundryItemRequestScalarWhereInput {
    AND?: Array<LaundryItemRequestScalarWhereInput>;
    OR?: Array<LaundryItemRequestScalarWhereInput>;
    NOT?: Array<LaundryItemRequestScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFilter>;
    requestById?: InstanceType<typeof StringFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
}
export declare class LaundryItemRequestSumAggregateInput {
    id?: true;
    categoryId?: true;
}
export declare class LaundryItemRequestSumAggregate {
    id?: number;
    categoryId?: number;
}
export declare class LaundryItemRequestSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class LaundryItemRequestUncheckedCreateNestedManyWithoutCategoryInput {
    create?: Array<LaundryItemRequestCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput {
    create?: Array<LaundryItemRequestCreateWithoutRequestByInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutRequestByInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyRequestByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
}
export declare class LaundryItemRequestUncheckedCreateWithoutCategoryInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
}
export declare class LaundryItemRequestUncheckedCreateWithoutRequestByInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    categoryId: number;
}
export declare class LaundryItemRequestUncheckedCreateInput {
    id?: number;
    name: string;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
    categoryId: number;
}
export declare class LaundryItemRequestUncheckedUpdateManyWithoutCategoryNestedInput {
    create?: Array<LaundryItemRequestCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<LaundryItemRequestUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemRequestUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<LaundryItemRequestUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<LaundryItemRequestScalarWhereInput>;
}
export declare class LaundryItemRequestUncheckedUpdateManyWithoutCategoryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput {
    create?: Array<LaundryItemRequestCreateWithoutRequestByInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutRequestByInput>;
    upsert?: Array<LaundryItemRequestUpsertWithWhereUniqueWithoutRequestByInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyRequestByInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemRequestUpdateWithWhereUniqueWithoutRequestByInput>;
    updateMany?: Array<LaundryItemRequestUpdateManyWithWhereWithoutRequestByInput>;
    deleteMany?: Array<LaundryItemRequestScalarWhereInput>;
}
export declare class LaundryItemRequestUncheckedUpdateManyWithoutRequestByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUncheckedUpdateWithoutCategoryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUncheckedUpdateWithoutRequestByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
}
export declare class LaundryItemRequestUpdateManyWithWhereWithoutCategoryInput {
    where: InstanceType<typeof LaundryItemRequestScalarWhereInput>;
    data: InstanceType<typeof LaundryItemRequestUpdateManyMutationInput>;
}
export declare class LaundryItemRequestUpdateManyWithWhereWithoutRequestByInput {
    where: InstanceType<typeof LaundryItemRequestScalarWhereInput>;
    data: InstanceType<typeof LaundryItemRequestUpdateManyMutationInput>;
}
export declare class LaundryItemRequestUpdateManyWithoutCategoryNestedInput {
    create?: Array<LaundryItemRequestCreateWithoutCategoryInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<LaundryItemRequestUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemRequestUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<LaundryItemRequestUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<LaundryItemRequestScalarWhereInput>;
}
export declare class LaundryItemRequestUpdateManyWithoutRequestByNestedInput {
    create?: Array<LaundryItemRequestCreateWithoutRequestByInput>;
    connectOrCreate?: Array<LaundryItemRequestCreateOrConnectWithoutRequestByInput>;
    upsert?: Array<LaundryItemRequestUpsertWithWhereUniqueWithoutRequestByInput>;
    createMany?: InstanceType<typeof LaundryItemRequestCreateManyRequestByInputEnvelope>;
    set?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>>;
    update?: Array<LaundryItemRequestUpdateWithWhereUniqueWithoutRequestByInput>;
    updateMany?: Array<LaundryItemRequestUpdateManyWithWhereWithoutRequestByInput>;
    deleteMany?: Array<LaundryItemRequestScalarWhereInput>;
}
export declare class LaundryItemRequestUpdateWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    data: InstanceType<typeof LaundryItemRequestUpdateWithoutCategoryInput>;
}
export declare class LaundryItemRequestUpdateWithWhereUniqueWithoutRequestByInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    data: InstanceType<typeof LaundryItemRequestUpdateWithoutRequestByInput>;
}
export declare class LaundryItemRequestUpdateWithoutCategoryInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutLaundryItemRequestsNestedInput>;
}
export declare class LaundryItemRequestUpdateWithoutRequestByInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutLaundryItemRequestNestedInput>;
}
export declare class LaundryItemRequestUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFieldUpdateOperationsInput>;
    requestBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutLaundryItemRequestsNestedInput>;
    category?: InstanceType<typeof LaundryItemCategoryUpdateOneRequiredWithoutLaundryItemRequestNestedInput>;
}
export declare class LaundryItemRequestUpsertWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    update: InstanceType<typeof LaundryItemRequestUpdateWithoutCategoryInput>;
    create: InstanceType<typeof LaundryItemRequestCreateWithoutCategoryInput>;
}
export declare class LaundryItemRequestUpsertWithWhereUniqueWithoutRequestByInput {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    update: InstanceType<typeof LaundryItemRequestUpdateWithoutRequestByInput>;
    create: InstanceType<typeof LaundryItemRequestCreateWithoutRequestByInput>;
}
export declare class LaundryItemRequestWhereUniqueInput {
    id?: number;
    AND?: Array<LaundryItemRequestWhereInput>;
    OR?: Array<LaundryItemRequestWhereInput>;
    NOT?: Array<LaundryItemRequestWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFilter>;
    requestById?: InstanceType<typeof StringFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
    requestBy?: InstanceType<typeof OwnerRelationFilter>;
    category?: InstanceType<typeof LaundryItemCategoryRelationFilter>;
}
export declare class LaundryItemRequestWhereInput {
    AND?: Array<LaundryItemRequestWhereInput>;
    OR?: Array<LaundryItemRequestWhereInput>;
    NOT?: Array<LaundryItemRequestWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumLaundryItemRequestStatusFilter>;
    requestById?: InstanceType<typeof StringFilter>;
    categoryId?: InstanceType<typeof IntFilter>;
    requestBy?: InstanceType<typeof OwnerRelationFilter>;
    category?: InstanceType<typeof LaundryItemCategoryRelationFilter>;
}
export declare class LaundryItemRequest {
    id: number;
    name: string;
    description: string | null;
    createdAt: Date;
    updatedAt: Date;
    status: keyof typeof LaundryItemRequestStatus;
    requestById: string;
    categoryId: number;
    requestBy?: InstanceType<typeof Owner>;
    category?: InstanceType<typeof LaundryItemCategory>;
}
export declare class UpdateManyLaundryItemRequestArgs {
    data: InstanceType<typeof LaundryItemRequestUpdateManyMutationInput>;
    where?: InstanceType<typeof LaundryItemRequestWhereInput>;
}
export declare class UpdateOneLaundryItemRequestArgs {
    data: InstanceType<typeof LaundryItemRequestUpdateInput>;
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
}
export declare class UpsertOneLaundryItemRequestArgs {
    where: Prisma.AtLeast<LaundryItemRequestWhereUniqueInput, 'id'>;
    create: InstanceType<typeof LaundryItemRequestCreateInput>;
    update: InstanceType<typeof LaundryItemRequestUpdateInput>;
}
export declare class AggregateMachine {
    _count?: InstanceType<typeof MachineCountAggregate>;
    _avg?: InstanceType<typeof MachineAvgAggregate>;
    _sum?: InstanceType<typeof MachineSumAggregate>;
    _min?: InstanceType<typeof MachineMinAggregate>;
    _max?: InstanceType<typeof MachineMaxAggregate>;
}
export declare class CreateManyMachineArgs {
    data: Array<MachineCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneMachineArgs {
    data: InstanceType<typeof MachineCreateInput>;
}
export declare class DeleteManyMachineArgs {
    where?: InstanceType<typeof MachineWhereInput>;
}
export declare class DeleteOneMachineArgs {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class FindFirstMachineOrThrowArgs {
    where?: InstanceType<typeof MachineWhereInput>;
    orderBy?: Array<MachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineScalarFieldEnum>;
}
export declare class FindFirstMachineArgs {
    where?: InstanceType<typeof MachineWhereInput>;
    orderBy?: Array<MachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineScalarFieldEnum>;
}
export declare class FindManyMachineArgs {
    where?: InstanceType<typeof MachineWhereInput>;
    orderBy?: Array<MachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineScalarFieldEnum>;
}
export declare class FindUniqueMachineOrThrowArgs {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class FindUniqueMachineArgs {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class MachineAggregateArgs {
    where?: InstanceType<typeof MachineWhereInput>;
    orderBy?: Array<MachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineCountAggregateInput>;
    _avg?: InstanceType<typeof MachineAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineSumAggregateInput>;
    _min?: InstanceType<typeof MachineMinAggregateInput>;
    _max?: InstanceType<typeof MachineMaxAggregateInput>;
}
export declare class MachineAvgAggregateInput {
    capacity?: true;
    capacityUnitId?: true;
    outletId?: true;
    categoryId?: true;
}
export declare class MachineAvgAggregate {
    capacity?: number;
    capacityUnitId?: number;
    outletId?: number;
    categoryId?: number;
}
export declare class MachineAvgOrderByAggregateInput {
    capacity?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class MachineCountAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    isOnline?: true;
    lastOffline?: true;
    lastOnline?: true;
    capacity?: true;
    createdAt?: true;
    updatedAt?: true;
    capacityUnitId?: true;
    outletId?: true;
    status?: true;
    categoryId?: true;
    settingId?: true;
    _all?: true;
}
export declare class MachineCountAggregate {
    id: number;
    name: number;
    description: number;
    isOnline: number;
    lastOffline: number;
    lastOnline: number;
    capacity: number;
    createdAt: number;
    updatedAt: number;
    capacityUnitId: number;
    outletId: number;
    status: number;
    categoryId: number;
    settingId: number;
    _all: number;
}
export declare class MachineCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    isOnline?: keyof typeof SortOrder;
    lastOffline?: keyof typeof SortOrder;
    lastOnline?: keyof typeof SortOrder;
    capacity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class MachineCount {
    Images?: number;
}
export declare class MachineCreateManyCapacityUnitInputEnvelope {
    data: Array<MachineCreateManyCapacityUnitInput>;
    skipDuplicates?: boolean;
}
export declare class MachineCreateManyCapacityUnitInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
}
export declare class MachineCreateManyCategoryInputEnvelope {
    data: Array<MachineCreateManyCategoryInput>;
    skipDuplicates?: boolean;
}
export declare class MachineCreateManyCategoryInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    settingId: string;
}
export declare class MachineCreateManyOutletInputEnvelope {
    data: Array<MachineCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class MachineCreateManyOutletInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
}
export declare class MachineCreateManyInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
}
export declare class MachineCreateNestedManyWithoutCapacityUnitInput {
    create?: Array<MachineCreateWithoutCapacityUnitInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCapacityUnitInput>;
    createMany?: InstanceType<typeof MachineCreateManyCapacityUnitInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineCreateNestedManyWithoutCategoryInput {
    create?: Array<MachineCreateWithoutCategoryInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof MachineCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineCreateNestedManyWithoutImagesInput {
    create?: Array<MachineCreateWithoutImagesInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineCreateNestedManyWithoutOutletInput {
    create?: Array<MachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof MachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineCreateNestedOneWithoutSettingInput {
    create?: InstanceType<typeof MachineCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof MachineCreateOrConnectWithoutSettingInput>;
    connect?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class MachineCreateOrConnectWithoutCapacityUnitInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateWithoutCapacityUnitInput>;
}
export declare class MachineCreateOrConnectWithoutCategoryInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateWithoutCategoryInput>;
}
export declare class MachineCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateWithoutImagesInput>;
}
export declare class MachineCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateWithoutOutletInput>;
}
export declare class MachineCreateOrConnectWithoutSettingInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateWithoutSettingInput>;
}
export declare class MachineCreateWithoutCapacityUnitInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutMachinesInput>;
    category?: InstanceType<typeof MachineCategoryCreateNestedOneWithoutMachinesInput>;
    setting: InstanceType<typeof MachineSettingsCreateNestedOneWithoutMachineInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineCreateWithoutCategoryInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    capacityUnit: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutMachinesInput>;
    setting: InstanceType<typeof MachineSettingsCreateNestedOneWithoutMachineInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineCreateWithoutImagesInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    capacityUnit: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutMachinesInput>;
    category?: InstanceType<typeof MachineCategoryCreateNestedOneWithoutMachinesInput>;
    setting: InstanceType<typeof MachineSettingsCreateNestedOneWithoutMachineInput>;
}
export declare class MachineCreateWithoutOutletInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    capacityUnit: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutMachineInput>;
    category?: InstanceType<typeof MachineCategoryCreateNestedOneWithoutMachinesInput>;
    setting: InstanceType<typeof MachineSettingsCreateNestedOneWithoutMachineInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineCreateWithoutSettingInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    capacityUnit: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutMachinesInput>;
    category?: InstanceType<typeof MachineCategoryCreateNestedOneWithoutMachinesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineCreateInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    status: keyof typeof MachineStatus;
    capacityUnit: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutMachinesInput>;
    category?: InstanceType<typeof MachineCategoryCreateNestedOneWithoutMachinesInput>;
    setting: InstanceType<typeof MachineSettingsCreateNestedOneWithoutMachineInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineGroupByArgs {
    where?: InstanceType<typeof MachineWhereInput>;
    orderBy?: Array<MachineOrderByWithAggregationInput>;
    by: Array<keyof typeof MachineScalarFieldEnum>;
    having?: InstanceType<typeof MachineScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineCountAggregateInput>;
    _avg?: InstanceType<typeof MachineAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineSumAggregateInput>;
    _min?: InstanceType<typeof MachineMinAggregateInput>;
    _max?: InstanceType<typeof MachineMaxAggregateInput>;
}
export declare class MachineGroupBy {
    id: string;
    name: string;
    description?: string;
    isOnline: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
    _count?: InstanceType<typeof MachineCountAggregate>;
    _avg?: InstanceType<typeof MachineAvgAggregate>;
    _sum?: InstanceType<typeof MachineSumAggregate>;
    _min?: InstanceType<typeof MachineMinAggregate>;
    _max?: InstanceType<typeof MachineMaxAggregate>;
}
export declare class MachineListRelationFilter {
    every?: InstanceType<typeof MachineWhereInput>;
    some?: InstanceType<typeof MachineWhereInput>;
    none?: InstanceType<typeof MachineWhereInput>;
}
export declare class MachineMaxAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    isOnline?: true;
    lastOffline?: true;
    lastOnline?: true;
    capacity?: true;
    createdAt?: true;
    updatedAt?: true;
    capacityUnitId?: true;
    outletId?: true;
    status?: true;
    categoryId?: true;
    settingId?: true;
}
export declare class MachineMaxAggregate {
    id?: string;
    name?: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId?: number;
    outletId?: number;
    status?: keyof typeof MachineStatus;
    categoryId?: number;
    settingId?: string;
}
export declare class MachineMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    isOnline?: keyof typeof SortOrder;
    lastOffline?: keyof typeof SortOrder;
    lastOnline?: keyof typeof SortOrder;
    capacity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class MachineMinAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    isOnline?: true;
    lastOffline?: true;
    lastOnline?: true;
    capacity?: true;
    createdAt?: true;
    updatedAt?: true;
    capacityUnitId?: true;
    outletId?: true;
    status?: true;
    categoryId?: true;
    settingId?: true;
}
export declare class MachineMinAggregate {
    id?: string;
    name?: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId?: number;
    outletId?: number;
    status?: keyof typeof MachineStatus;
    categoryId?: number;
    settingId?: string;
}
export declare class MachineMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    isOnline?: keyof typeof SortOrder;
    lastOffline?: keyof typeof SortOrder;
    lastOnline?: keyof typeof SortOrder;
    capacity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class MachineNullableRelationFilter {
    is?: InstanceType<typeof MachineWhereInput>;
    isNot?: InstanceType<typeof MachineWhereInput>;
}
export declare class MachineOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class MachineOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    isOnline?: keyof typeof SortOrder;
    lastOffline?: InstanceType<typeof SortOrderInput>;
    lastOnline?: InstanceType<typeof SortOrderInput>;
    capacity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    categoryId?: InstanceType<typeof SortOrderInput>;
    settingId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof MachineCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof MachineAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof MachineMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof MachineMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof MachineSumOrderByAggregateInput>;
}
export declare class MachineOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    isOnline?: keyof typeof SortOrder;
    lastOffline?: InstanceType<typeof SortOrderInput>;
    lastOnline?: InstanceType<typeof SortOrderInput>;
    capacity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    categoryId?: InstanceType<typeof SortOrderInput>;
    settingId?: keyof typeof SortOrder;
    capacityUnit?: InstanceType<typeof UnitOfMeasureOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    category?: InstanceType<typeof MachineCategoryOrderByWithRelationInput>;
    setting?: InstanceType<typeof MachineSettingsOrderByWithRelationInput>;
    Images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
}
export declare class MachineScalarWhereWithAggregatesInput {
    AND?: Array<MachineScalarWhereWithAggregatesInput>;
    OR?: Array<MachineScalarWhereWithAggregatesInput>;
    NOT?: Array<MachineScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    isOnline?: InstanceType<typeof BoolWithAggregatesFilter>;
    lastOffline?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    lastOnline?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    capacity?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    capacityUnitId?: InstanceType<typeof IntWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
    status?: InstanceType<typeof EnumMachineStatusWithAggregatesFilter>;
    categoryId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    settingId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class MachineScalarWhereInput {
    AND?: Array<MachineScalarWhereInput>;
    OR?: Array<MachineScalarWhereInput>;
    NOT?: Array<MachineScalarWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    isOnline?: InstanceType<typeof BoolFilter>;
    lastOffline?: InstanceType<typeof DateTimeNullableFilter>;
    lastOnline?: InstanceType<typeof DateTimeNullableFilter>;
    capacity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    capacityUnitId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    status?: InstanceType<typeof EnumMachineStatusFilter>;
    categoryId?: InstanceType<typeof IntNullableFilter>;
    settingId?: InstanceType<typeof StringFilter>;
}
export declare class MachineSumAggregateInput {
    capacity?: true;
    capacityUnitId?: true;
    outletId?: true;
    categoryId?: true;
}
export declare class MachineSumAggregate {
    capacity?: number;
    capacityUnitId?: number;
    outletId?: number;
    categoryId?: number;
}
export declare class MachineSumOrderByAggregateInput {
    capacity?: keyof typeof SortOrder;
    capacityUnitId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    categoryId?: keyof typeof SortOrder;
}
export declare class MachineUncheckedCreateNestedManyWithoutCapacityUnitInput {
    create?: Array<MachineCreateWithoutCapacityUnitInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCapacityUnitInput>;
    createMany?: InstanceType<typeof MachineCreateManyCapacityUnitInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineUncheckedCreateNestedManyWithoutCategoryInput {
    create?: Array<MachineCreateWithoutCategoryInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCategoryInput>;
    createMany?: InstanceType<typeof MachineCreateManyCategoryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineUncheckedCreateNestedManyWithoutImagesInput {
    create?: Array<MachineCreateWithoutImagesInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<MachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof MachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
}
export declare class MachineUncheckedCreateNestedOneWithoutSettingInput {
    create?: InstanceType<typeof MachineCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof MachineCreateOrConnectWithoutSettingInput>;
    connect?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class MachineUncheckedCreateWithoutCapacityUnitInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineUncheckedCreateWithoutCategoryInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    settingId: string;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineUncheckedCreateWithoutImagesInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
}
export declare class MachineUncheckedCreateWithoutOutletInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineUncheckedCreateWithoutSettingInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineUncheckedCreateInput {
    id: string;
    name: string;
    description?: string;
    isOnline?: boolean;
    lastOffline?: Date | string;
    lastOnline?: Date | string;
    capacity: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId?: number;
    settingId: string;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMachinesInput>;
}
export declare class MachineUncheckedUpdateManyWithoutCapacityUnitNestedInput {
    create?: Array<MachineCreateWithoutCapacityUnitInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCapacityUnitInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutCapacityUnitInput>;
    createMany?: InstanceType<typeof MachineCreateManyCapacityUnitInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutCapacityUnitInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutCapacityUnitInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUncheckedUpdateManyWithoutCapacityUnitInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateManyWithoutCategoryNestedInput {
    create?: Array<MachineCreateWithoutCategoryInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof MachineCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUncheckedUpdateManyWithoutCategoryInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateManyWithoutImagesNestedInput {
    create?: Array<MachineCreateWithoutImagesInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutImagesInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUncheckedUpdateManyWithoutImagesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<MachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof MachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateManyInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateOneWithoutSettingNestedInput {
    create?: InstanceType<typeof MachineCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof MachineCreateOrConnectWithoutSettingInput>;
    upsert?: InstanceType<typeof MachineUpsertWithoutSettingInput>;
    disconnect?: InstanceType<typeof MachineWhereInput>;
    delete?: InstanceType<typeof MachineWhereInput>;
    connect?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update?: InstanceType<typeof MachineUpdateToOneWithWhereWithoutSettingInput>;
}
export declare class MachineUncheckedUpdateWithoutCapacityUnitInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUncheckedUpdateWithoutCategoryInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUncheckedUpdateWithoutSettingInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUncheckedUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    capacityUnitId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    categoryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpdateManyMutationInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
}
export declare class MachineUpdateManyWithWhereWithoutCapacityUnitInput {
    where: InstanceType<typeof MachineScalarWhereInput>;
    data: InstanceType<typeof MachineUpdateManyMutationInput>;
}
export declare class MachineUpdateManyWithWhereWithoutCategoryInput {
    where: InstanceType<typeof MachineScalarWhereInput>;
    data: InstanceType<typeof MachineUpdateManyMutationInput>;
}
export declare class MachineUpdateManyWithWhereWithoutImagesInput {
    where: InstanceType<typeof MachineScalarWhereInput>;
    data: InstanceType<typeof MachineUpdateManyMutationInput>;
}
export declare class MachineUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof MachineScalarWhereInput>;
    data: InstanceType<typeof MachineUpdateManyMutationInput>;
}
export declare class MachineUpdateManyWithoutCapacityUnitNestedInput {
    create?: Array<MachineCreateWithoutCapacityUnitInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCapacityUnitInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutCapacityUnitInput>;
    createMany?: InstanceType<typeof MachineCreateManyCapacityUnitInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutCapacityUnitInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutCapacityUnitInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUpdateManyWithoutCategoryNestedInput {
    create?: Array<MachineCreateWithoutCategoryInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutCategoryInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutCategoryInput>;
    createMany?: InstanceType<typeof MachineCreateManyCategoryInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutCategoryInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutCategoryInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUpdateManyWithoutImagesNestedInput {
    create?: Array<MachineCreateWithoutImagesInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutImagesInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUpdateManyWithoutOutletNestedInput {
    create?: Array<MachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<MachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<MachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof MachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>>;
    update?: Array<MachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<MachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<MachineScalarWhereInput>;
}
export declare class MachineUpdateOneWithoutSettingNestedInput {
    create?: InstanceType<typeof MachineCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof MachineCreateOrConnectWithoutSettingInput>;
    upsert?: InstanceType<typeof MachineUpsertWithoutSettingInput>;
    disconnect?: InstanceType<typeof MachineWhereInput>;
    delete?: InstanceType<typeof MachineWhereInput>;
    connect?: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update?: InstanceType<typeof MachineUpdateToOneWithWhereWithoutSettingInput>;
}
export declare class MachineUpdateToOneWithWhereWithoutSettingInput {
    where?: InstanceType<typeof MachineWhereInput>;
    data: InstanceType<typeof MachineUpdateWithoutSettingInput>;
}
export declare class MachineUpdateWithWhereUniqueWithoutCapacityUnitInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    data: InstanceType<typeof MachineUpdateWithoutCapacityUnitInput>;
}
export declare class MachineUpdateWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    data: InstanceType<typeof MachineUpdateWithoutCategoryInput>;
}
export declare class MachineUpdateWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    data: InstanceType<typeof MachineUpdateWithoutImagesInput>;
}
export declare class MachineUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    data: InstanceType<typeof MachineUpdateWithoutOutletInput>;
}
export declare class MachineUpdateWithoutCapacityUnitInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutMachinesNestedInput>;
    category?: InstanceType<typeof MachineCategoryUpdateOneWithoutMachinesNestedInput>;
    setting?: InstanceType<typeof MachineSettingsUpdateOneRequiredWithoutMachineNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpdateWithoutCategoryInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutMachinesNestedInput>;
    setting?: InstanceType<typeof MachineSettingsUpdateOneRequiredWithoutMachineNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpdateWithoutImagesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutMachinesNestedInput>;
    category?: InstanceType<typeof MachineCategoryUpdateOneWithoutMachinesNestedInput>;
    setting?: InstanceType<typeof MachineSettingsUpdateOneRequiredWithoutMachineNestedInput>;
}
export declare class MachineUpdateWithoutOutletInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput>;
    category?: InstanceType<typeof MachineCategoryUpdateOneWithoutMachinesNestedInput>;
    setting?: InstanceType<typeof MachineSettingsUpdateOneRequiredWithoutMachineNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpdateWithoutSettingInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutMachinesNestedInput>;
    category?: InstanceType<typeof MachineCategoryUpdateOneWithoutMachinesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    isOnline?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    lastOffline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    lastOnline?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    capacity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumMachineStatusFieldUpdateOperationsInput>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutMachinesNestedInput>;
    category?: InstanceType<typeof MachineCategoryUpdateOneWithoutMachinesNestedInput>;
    setting?: InstanceType<typeof MachineSettingsUpdateOneRequiredWithoutMachineNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutMachinesNestedInput>;
}
export declare class MachineUpsertWithWhereUniqueWithoutCapacityUnitInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update: InstanceType<typeof MachineUpdateWithoutCapacityUnitInput>;
    create: InstanceType<typeof MachineCreateWithoutCapacityUnitInput>;
}
export declare class MachineUpsertWithWhereUniqueWithoutCategoryInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update: InstanceType<typeof MachineUpdateWithoutCategoryInput>;
    create: InstanceType<typeof MachineCreateWithoutCategoryInput>;
}
export declare class MachineUpsertWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update: InstanceType<typeof MachineUpdateWithoutImagesInput>;
    create: InstanceType<typeof MachineCreateWithoutImagesInput>;
}
export declare class MachineUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    update: InstanceType<typeof MachineUpdateWithoutOutletInput>;
    create: InstanceType<typeof MachineCreateWithoutOutletInput>;
}
export declare class MachineUpsertWithoutSettingInput {
    update: InstanceType<typeof MachineUpdateWithoutSettingInput>;
    create: InstanceType<typeof MachineCreateWithoutSettingInput>;
    where?: InstanceType<typeof MachineWhereInput>;
}
export declare class MachineWhereUniqueInput {
    id?: string;
    settingId?: string;
    AND?: Array<MachineWhereInput>;
    OR?: Array<MachineWhereInput>;
    NOT?: Array<MachineWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    isOnline?: InstanceType<typeof BoolFilter>;
    lastOffline?: InstanceType<typeof DateTimeNullableFilter>;
    lastOnline?: InstanceType<typeof DateTimeNullableFilter>;
    capacity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    capacityUnitId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    status?: InstanceType<typeof EnumMachineStatusFilter>;
    categoryId?: InstanceType<typeof IntNullableFilter>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    category?: InstanceType<typeof MachineCategoryNullableRelationFilter>;
    setting?: InstanceType<typeof MachineSettingsRelationFilter>;
    Images?: InstanceType<typeof ImageListRelationFilter>;
}
export declare class MachineWhereInput {
    AND?: Array<MachineWhereInput>;
    OR?: Array<MachineWhereInput>;
    NOT?: Array<MachineWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    isOnline?: InstanceType<typeof BoolFilter>;
    lastOffline?: InstanceType<typeof DateTimeNullableFilter>;
    lastOnline?: InstanceType<typeof DateTimeNullableFilter>;
    capacity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    capacityUnitId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    status?: InstanceType<typeof EnumMachineStatusFilter>;
    categoryId?: InstanceType<typeof IntNullableFilter>;
    settingId?: InstanceType<typeof StringFilter>;
    capacityUnit?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    category?: InstanceType<typeof MachineCategoryNullableRelationFilter>;
    setting?: InstanceType<typeof MachineSettingsRelationFilter>;
    Images?: InstanceType<typeof ImageListRelationFilter>;
}
export declare class Machine {
    id: string;
    name: string;
    description: string | null;
    isOnline: boolean;
    lastOffline: Date | null;
    lastOnline: Date | null;
    capacity: number;
    createdAt: Date;
    updatedAt: Date;
    capacityUnitId: number;
    outletId: number;
    status: keyof typeof MachineStatus;
    categoryId: number | null;
    settingId: string;
    capacityUnit?: InstanceType<typeof UnitOfMeasure>;
    outlet?: InstanceType<typeof Outlet>;
    category?: InstanceType<typeof MachineCategory> | null;
    setting?: InstanceType<typeof MachineSettings>;
    Images?: Array<Image>;
    _count?: InstanceType<typeof MachineCount>;
}
export declare class UpdateManyMachineArgs {
    data: InstanceType<typeof MachineUpdateManyMutationInput>;
    where?: InstanceType<typeof MachineWhereInput>;
}
export declare class UpdateOneMachineArgs {
    data: InstanceType<typeof MachineUpdateInput>;
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
}
export declare class UpsertOneMachineArgs {
    where: Prisma.AtLeast<MachineWhereUniqueInput, 'id' | 'settingId'>;
    create: InstanceType<typeof MachineCreateInput>;
    update: InstanceType<typeof MachineUpdateInput>;
}
export declare class AggregateMachineCategory {
    _count?: InstanceType<typeof MachineCategoryCountAggregate>;
    _avg?: InstanceType<typeof MachineCategoryAvgAggregate>;
    _sum?: InstanceType<typeof MachineCategorySumAggregate>;
    _min?: InstanceType<typeof MachineCategoryMinAggregate>;
    _max?: InstanceType<typeof MachineCategoryMaxAggregate>;
}
export declare class CreateManyMachineCategoryArgs {
    data: Array<MachineCategoryCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneMachineCategoryArgs {
    data: InstanceType<typeof MachineCategoryCreateInput>;
}
export declare class DeleteManyMachineCategoryArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
}
export declare class DeleteOneMachineCategoryArgs {
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
}
export declare class FindFirstMachineCategoryOrThrowArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    orderBy?: Array<MachineCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineCategoryScalarFieldEnum>;
}
export declare class FindFirstMachineCategoryArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    orderBy?: Array<MachineCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineCategoryScalarFieldEnum>;
}
export declare class FindManyMachineCategoryArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    orderBy?: Array<MachineCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineCategoryScalarFieldEnum>;
}
export declare class FindUniqueMachineCategoryOrThrowArgs {
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
}
export declare class FindUniqueMachineCategoryArgs {
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
}
export declare class MachineCategoryAggregateArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    orderBy?: Array<MachineCategoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineCategoryCountAggregateInput>;
    _avg?: InstanceType<typeof MachineCategoryAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineCategorySumAggregateInput>;
    _min?: InstanceType<typeof MachineCategoryMinAggregateInput>;
    _max?: InstanceType<typeof MachineCategoryMaxAggregateInput>;
}
export declare class MachineCategoryAvgAggregateInput {
    id?: true;
}
export declare class MachineCategoryAvgAggregate {
    id?: number;
}
export declare class MachineCategoryAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class MachineCategoryCountAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
    _all?: true;
}
export declare class MachineCategoryCountAggregate {
    id: number;
    name: number;
    createdAt: number;
    updatedAt: number;
    _all: number;
}
export declare class MachineCategoryCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class MachineCategoryCount {
    machines?: number;
}
export declare class MachineCategoryCreateManyInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MachineCategoryCreateNestedOneWithoutMachinesInput {
    create?: InstanceType<typeof MachineCategoryCreateWithoutMachinesInput>;
    connectOrCreate?: InstanceType<typeof MachineCategoryCreateOrConnectWithoutMachinesInput>;
    connect?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
}
export declare class MachineCategoryCreateOrConnectWithoutMachinesInput {
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MachineCategoryCreateWithoutMachinesInput>;
}
export declare class MachineCategoryCreateWithoutMachinesInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MachineCategoryCreateInput {
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutCategoryInput>;
}
export declare class MachineCategoryGroupByArgs {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    orderBy?: Array<MachineCategoryOrderByWithAggregationInput>;
    by: Array<keyof typeof MachineCategoryScalarFieldEnum>;
    having?: InstanceType<typeof MachineCategoryScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineCategoryCountAggregateInput>;
    _avg?: InstanceType<typeof MachineCategoryAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineCategorySumAggregateInput>;
    _min?: InstanceType<typeof MachineCategoryMinAggregateInput>;
    _max?: InstanceType<typeof MachineCategoryMaxAggregateInput>;
}
export declare class MachineCategoryGroupBy {
    id: number;
    name: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    _count?: InstanceType<typeof MachineCategoryCountAggregate>;
    _avg?: InstanceType<typeof MachineCategoryAvgAggregate>;
    _sum?: InstanceType<typeof MachineCategorySumAggregate>;
    _min?: InstanceType<typeof MachineCategoryMinAggregate>;
    _max?: InstanceType<typeof MachineCategoryMaxAggregate>;
}
export declare class MachineCategoryMaxAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class MachineCategoryMaxAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MachineCategoryMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class MachineCategoryMinAggregateInput {
    id?: true;
    name?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class MachineCategoryMinAggregate {
    id?: number;
    name?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MachineCategoryMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class MachineCategoryNullableRelationFilter {
    is?: InstanceType<typeof MachineCategoryWhereInput>;
    isNot?: InstanceType<typeof MachineCategoryWhereInput>;
}
export declare class MachineCategoryOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    _count?: InstanceType<typeof MachineCategoryCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof MachineCategoryAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof MachineCategoryMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof MachineCategoryMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof MachineCategorySumOrderByAggregateInput>;
}
export declare class MachineCategoryOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machines?: InstanceType<typeof MachineOrderByRelationAggregateInput>;
}
export declare class MachineCategoryScalarWhereWithAggregatesInput {
    AND?: Array<MachineCategoryScalarWhereWithAggregatesInput>;
    OR?: Array<MachineCategoryScalarWhereWithAggregatesInput>;
    NOT?: Array<MachineCategoryScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}
export declare class MachineCategorySumAggregateInput {
    id?: true;
}
export declare class MachineCategorySumAggregate {
    id?: number;
}
export declare class MachineCategorySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class MachineCategoryUncheckedCreateWithoutMachinesInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MachineCategoryUncheckedCreateInput {
    id?: number;
    name: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutCategoryInput>;
}
export declare class MachineCategoryUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MachineCategoryUncheckedUpdateWithoutMachinesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MachineCategoryUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutCategoryNestedInput>;
}
export declare class MachineCategoryUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MachineCategoryUpdateOneWithoutMachinesNestedInput {
    create?: InstanceType<typeof MachineCategoryCreateWithoutMachinesInput>;
    connectOrCreate?: InstanceType<typeof MachineCategoryCreateOrConnectWithoutMachinesInput>;
    upsert?: InstanceType<typeof MachineCategoryUpsertWithoutMachinesInput>;
    disconnect?: InstanceType<typeof MachineCategoryWhereInput>;
    delete?: InstanceType<typeof MachineCategoryWhereInput>;
    connect?: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof MachineCategoryUpdateToOneWithWhereWithoutMachinesInput>;
}
export declare class MachineCategoryUpdateToOneWithWhereWithoutMachinesInput {
    where?: InstanceType<typeof MachineCategoryWhereInput>;
    data: InstanceType<typeof MachineCategoryUpdateWithoutMachinesInput>;
}
export declare class MachineCategoryUpdateWithoutMachinesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MachineCategoryUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutCategoryNestedInput>;
}
export declare class MachineCategoryUpsertWithoutMachinesInput {
    update: InstanceType<typeof MachineCategoryUpdateWithoutMachinesInput>;
    create: InstanceType<typeof MachineCategoryCreateWithoutMachinesInput>;
    where?: InstanceType<typeof MachineCategoryWhereInput>;
}
export declare class MachineCategoryWhereUniqueInput {
    id?: number;
    AND?: Array<MachineCategoryWhereInput>;
    OR?: Array<MachineCategoryWhereInput>;
    NOT?: Array<MachineCategoryWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
}
export declare class MachineCategoryWhereInput {
    AND?: Array<MachineCategoryWhereInput>;
    OR?: Array<MachineCategoryWhereInput>;
    NOT?: Array<MachineCategoryWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
}
export declare class MachineCategory {
    id: number;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    machines?: Array<Machine>;
    _count?: InstanceType<typeof MachineCategoryCount>;
}
export declare class UpdateManyMachineCategoryArgs {
    data: InstanceType<typeof MachineCategoryUpdateManyMutationInput>;
    where?: InstanceType<typeof MachineCategoryWhereInput>;
}
export declare class UpdateOneMachineCategoryArgs {
    data: InstanceType<typeof MachineCategoryUpdateInput>;
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
}
export declare class UpsertOneMachineCategoryArgs {
    where: Prisma.AtLeast<MachineCategoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MachineCategoryCreateInput>;
    update: InstanceType<typeof MachineCategoryUpdateInput>;
}
export declare class AggregateMachineSettings {
    _count?: InstanceType<typeof MachineSettingsCountAggregate>;
    _avg?: InstanceType<typeof MachineSettingsAvgAggregate>;
    _sum?: InstanceType<typeof MachineSettingsSumAggregate>;
    _min?: InstanceType<typeof MachineSettingsMinAggregate>;
    _max?: InstanceType<typeof MachineSettingsMaxAggregate>;
}
export declare class CreateManyMachineSettingsArgs {
    data: Array<MachineSettingsCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneMachineSettingsArgs {
    data: InstanceType<typeof MachineSettingsCreateInput>;
}
export declare class DeleteManyMachineSettingsArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
}
export declare class DeleteOneMachineSettingsArgs {
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
}
export declare class FindFirstMachineSettingsOrThrowArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    orderBy?: Array<MachineSettingsOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineSettingsScalarFieldEnum>;
}
export declare class FindFirstMachineSettingsArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    orderBy?: Array<MachineSettingsOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineSettingsScalarFieldEnum>;
}
export declare class FindManyMachineSettingsArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    orderBy?: Array<MachineSettingsOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MachineSettingsScalarFieldEnum>;
}
export declare class FindUniqueMachineSettingsOrThrowArgs {
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
}
export declare class FindUniqueMachineSettingsArgs {
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
}
export declare class MachineSettingsAggregateArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    orderBy?: Array<MachineSettingsOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineSettingsCountAggregateInput>;
    _avg?: InstanceType<typeof MachineSettingsAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineSettingsSumAggregateInput>;
    _min?: InstanceType<typeof MachineSettingsMinAggregateInput>;
    _max?: InstanceType<typeof MachineSettingsMaxAggregateInput>;
}
export declare class MachineSettingsAvgAggregateInput {
    onTurnOnPrice?: true;
}
export declare class MachineSettingsAvgAggregate {
    onTurnOnPrice?: number;
}
export declare class MachineSettingsAvgOrderByAggregateInput {
    onTurnOnPrice?: keyof typeof SortOrder;
}
export declare class MachineSettingsCountAggregateInput {
    id?: true;
    onTurnOnPrice?: true;
    createdAt?: true;
    updatedAt?: true;
    machineId?: true;
    _all?: true;
}
export declare class MachineSettingsCountAggregate {
    id: number;
    onTurnOnPrice: number;
    createdAt: number;
    updatedAt: number;
    machineId: number;
    _all: number;
}
export declare class MachineSettingsCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    onTurnOnPrice?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machineId?: keyof typeof SortOrder;
}
export declare class MachineSettingsCreateManyInput {
    id: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId: string;
}
export declare class MachineSettingsCreateNestedOneWithoutMachineInput {
    create?: InstanceType<typeof MachineSettingsCreateWithoutMachineInput>;
    connectOrCreate?: InstanceType<typeof MachineSettingsCreateOrConnectWithoutMachineInput>;
    connect?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
}
export declare class MachineSettingsCreateOrConnectWithoutMachineInput {
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    create: InstanceType<typeof MachineSettingsCreateWithoutMachineInput>;
}
export declare class MachineSettingsCreateWithoutMachineInput {
    id: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId: string;
}
export declare class MachineSettingsCreateInput {
    id: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId: string;
    machine?: InstanceType<typeof MachineCreateNestedOneWithoutSettingInput>;
}
export declare class MachineSettingsGroupByArgs {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    orderBy?: Array<MachineSettingsOrderByWithAggregationInput>;
    by: Array<keyof typeof MachineSettingsScalarFieldEnum>;
    having?: InstanceType<typeof MachineSettingsScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MachineSettingsCountAggregateInput>;
    _avg?: InstanceType<typeof MachineSettingsAvgAggregateInput>;
    _sum?: InstanceType<typeof MachineSettingsSumAggregateInput>;
    _min?: InstanceType<typeof MachineSettingsMinAggregateInput>;
    _max?: InstanceType<typeof MachineSettingsMaxAggregateInput>;
}
export declare class MachineSettingsGroupBy {
    id: string;
    onTurnOnPrice?: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    machineId: string;
    _count?: InstanceType<typeof MachineSettingsCountAggregate>;
    _avg?: InstanceType<typeof MachineSettingsAvgAggregate>;
    _sum?: InstanceType<typeof MachineSettingsSumAggregate>;
    _min?: InstanceType<typeof MachineSettingsMinAggregate>;
    _max?: InstanceType<typeof MachineSettingsMaxAggregate>;
}
export declare class MachineSettingsMaxAggregateInput {
    id?: true;
    onTurnOnPrice?: true;
    createdAt?: true;
    updatedAt?: true;
    machineId?: true;
}
export declare class MachineSettingsMaxAggregate {
    id?: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId?: string;
}
export declare class MachineSettingsMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    onTurnOnPrice?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machineId?: keyof typeof SortOrder;
}
export declare class MachineSettingsMinAggregateInput {
    id?: true;
    onTurnOnPrice?: true;
    createdAt?: true;
    updatedAt?: true;
    machineId?: true;
}
export declare class MachineSettingsMinAggregate {
    id?: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId?: string;
}
export declare class MachineSettingsMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    onTurnOnPrice?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machineId?: keyof typeof SortOrder;
}
export declare class MachineSettingsOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    onTurnOnPrice?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machineId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof MachineSettingsCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof MachineSettingsAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof MachineSettingsMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof MachineSettingsMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof MachineSettingsSumOrderByAggregateInput>;
}
export declare class MachineSettingsOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    onTurnOnPrice?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    machineId?: keyof typeof SortOrder;
    machine?: InstanceType<typeof MachineOrderByWithRelationInput>;
}
export declare class MachineSettingsRelationFilter {
    is?: InstanceType<typeof MachineSettingsWhereInput>;
    isNot?: InstanceType<typeof MachineSettingsWhereInput>;
}
export declare class MachineSettingsScalarWhereWithAggregatesInput {
    AND?: Array<MachineSettingsScalarWhereWithAggregatesInput>;
    OR?: Array<MachineSettingsScalarWhereWithAggregatesInput>;
    NOT?: Array<MachineSettingsScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    onTurnOnPrice?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    machineId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class MachineSettingsSumAggregateInput {
    onTurnOnPrice?: true;
}
export declare class MachineSettingsSumAggregate {
    onTurnOnPrice?: number;
}
export declare class MachineSettingsSumOrderByAggregateInput {
    onTurnOnPrice?: keyof typeof SortOrder;
}
export declare class MachineSettingsUncheckedCreateWithoutMachineInput {
    id: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId: string;
}
export declare class MachineSettingsUncheckedCreateInput {
    id: string;
    onTurnOnPrice?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    machineId: string;
    machine?: InstanceType<typeof MachineUncheckedCreateNestedOneWithoutSettingInput>;
}
export declare class MachineSettingsUncheckedUpdateManyInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineSettingsUncheckedUpdateWithoutMachineInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineSettingsUncheckedUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    machine?: InstanceType<typeof MachineUncheckedUpdateOneWithoutSettingNestedInput>;
}
export declare class MachineSettingsUpdateManyMutationInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineSettingsUpdateOneRequiredWithoutMachineNestedInput {
    create?: InstanceType<typeof MachineSettingsCreateWithoutMachineInput>;
    connectOrCreate?: InstanceType<typeof MachineSettingsCreateOrConnectWithoutMachineInput>;
    upsert?: InstanceType<typeof MachineSettingsUpsertWithoutMachineInput>;
    connect?: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    update?: InstanceType<typeof MachineSettingsUpdateToOneWithWhereWithoutMachineInput>;
}
export declare class MachineSettingsUpdateToOneWithWhereWithoutMachineInput {
    where?: InstanceType<typeof MachineSettingsWhereInput>;
    data: InstanceType<typeof MachineSettingsUpdateWithoutMachineInput>;
}
export declare class MachineSettingsUpdateWithoutMachineInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class MachineSettingsUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    onTurnOnPrice?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    machineId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    machine?: InstanceType<typeof MachineUpdateOneWithoutSettingNestedInput>;
}
export declare class MachineSettingsUpsertWithoutMachineInput {
    update: InstanceType<typeof MachineSettingsUpdateWithoutMachineInput>;
    create: InstanceType<typeof MachineSettingsCreateWithoutMachineInput>;
    where?: InstanceType<typeof MachineSettingsWhereInput>;
}
export declare class MachineSettingsWhereUniqueInput {
    id?: string;
    machineId?: string;
    AND?: Array<MachineSettingsWhereInput>;
    OR?: Array<MachineSettingsWhereInput>;
    NOT?: Array<MachineSettingsWhereInput>;
    onTurnOnPrice?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    machine?: InstanceType<typeof MachineNullableRelationFilter>;
}
export declare class MachineSettingsWhereInput {
    AND?: Array<MachineSettingsWhereInput>;
    OR?: Array<MachineSettingsWhereInput>;
    NOT?: Array<MachineSettingsWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    onTurnOnPrice?: InstanceType<typeof FloatNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    machineId?: InstanceType<typeof StringFilter>;
    machine?: InstanceType<typeof MachineNullableRelationFilter>;
}
export declare class MachineSettings {
    id: string;
    onTurnOnPrice: number | null;
    createdAt: Date;
    updatedAt: Date;
    machineId: string;
    machine?: InstanceType<typeof Machine> | null;
}
export declare class UpdateManyMachineSettingsArgs {
    data: InstanceType<typeof MachineSettingsUpdateManyMutationInput>;
    where?: InstanceType<typeof MachineSettingsWhereInput>;
}
export declare class UpdateOneMachineSettingsArgs {
    data: InstanceType<typeof MachineSettingsUpdateInput>;
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
}
export declare class UpsertOneMachineSettingsArgs {
    where: Prisma.AtLeast<MachineSettingsWhereUniqueInput, 'id' | 'machineId'>;
    create: InstanceType<typeof MachineSettingsCreateInput>;
    update: InstanceType<typeof MachineSettingsUpdateInput>;
}
export declare class AggregateMarketSalePriceHistory {
    _count?: InstanceType<typeof MarketSalePriceHistoryCountAggregate>;
    _avg?: InstanceType<typeof MarketSalePriceHistoryAvgAggregate>;
    _sum?: InstanceType<typeof MarketSalePriceHistorySumAggregate>;
    _min?: InstanceType<typeof MarketSalePriceHistoryMinAggregate>;
    _max?: InstanceType<typeof MarketSalePriceHistoryMaxAggregate>;
}
export declare class CreateManyMarketSalePriceHistoryArgs {
    data: Array<MarketSalePriceHistoryCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneMarketSalePriceHistoryArgs {
    data: InstanceType<typeof MarketSalePriceHistoryCreateInput>;
}
export declare class DeleteManyMarketSalePriceHistoryArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
}
export declare class DeleteOneMarketSalePriceHistoryArgs {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
}
export declare class FindFirstMarketSalePriceHistoryOrThrowArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    orderBy?: Array<MarketSalePriceHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MarketSalePriceHistoryScalarFieldEnum>;
}
export declare class FindFirstMarketSalePriceHistoryArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    orderBy?: Array<MarketSalePriceHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MarketSalePriceHistoryScalarFieldEnum>;
}
export declare class FindManyMarketSalePriceHistoryArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    orderBy?: Array<MarketSalePriceHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MarketSalePriceHistoryScalarFieldEnum>;
}
export declare class FindUniqueMarketSalePriceHistoryOrThrowArgs {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
}
export declare class FindUniqueMarketSalePriceHistoryArgs {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
}
export declare class MarketSalePriceHistoryAggregateArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    orderBy?: Array<MarketSalePriceHistoryOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MarketSalePriceHistoryCountAggregateInput>;
    _avg?: InstanceType<typeof MarketSalePriceHistoryAvgAggregateInput>;
    _sum?: InstanceType<typeof MarketSalePriceHistorySumAggregateInput>;
    _min?: InstanceType<typeof MarketSalePriceHistoryMinAggregateInput>;
    _max?: InstanceType<typeof MarketSalePriceHistoryMaxAggregateInput>;
}
export declare class MarketSalePriceHistoryAvgAggregateInput {
    id?: true;
    price?: true;
    laundryItemId?: true;
}
export declare class MarketSalePriceHistoryAvgAggregate {
    id?: number;
    price?: number;
    laundryItemId?: number;
}
export declare class MarketSalePriceHistoryAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryCountAggregateInput {
    id?: true;
    price?: true;
    createdAt?: true;
    updatedAt?: true;
    laundryItemId?: true;
    _all?: true;
}
export declare class MarketSalePriceHistoryCountAggregate {
    id: number;
    price: number;
    createdAt: number;
    updatedAt: number;
    laundryItemId: number;
    _all: number;
}
export declare class MarketSalePriceHistoryCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryCreateManyLaundryInputEnvelope {
    data: Array<MarketSalePriceHistoryCreateManyLaundryInput>;
    skipDuplicates?: boolean;
}
export declare class MarketSalePriceHistoryCreateManyLaundryInput {
    id?: number;
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MarketSalePriceHistoryCreateManyInput {
    id?: number;
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId: number;
}
export declare class MarketSalePriceHistoryCreateNestedManyWithoutLaundryInput {
    create?: Array<MarketSalePriceHistoryCreateWithoutLaundryInput>;
    connectOrCreate?: Array<MarketSalePriceHistoryCreateOrConnectWithoutLaundryInput>;
    createMany?: InstanceType<typeof MarketSalePriceHistoryCreateManyLaundryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
}
export declare class MarketSalePriceHistoryCreateOrConnectWithoutLaundryInput {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MarketSalePriceHistoryCreateWithoutLaundryInput>;
}
export declare class MarketSalePriceHistoryCreateWithoutLaundryInput {
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MarketSalePriceHistoryCreateInput {
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundry: InstanceType<typeof LaundryItemCreateNestedOneWithoutMarketSalePriceInput>;
}
export declare class MarketSalePriceHistoryGroupByArgs {
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    orderBy?: Array<MarketSalePriceHistoryOrderByWithAggregationInput>;
    by: Array<keyof typeof MarketSalePriceHistoryScalarFieldEnum>;
    having?: InstanceType<typeof MarketSalePriceHistoryScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MarketSalePriceHistoryCountAggregateInput>;
    _avg?: InstanceType<typeof MarketSalePriceHistoryAvgAggregateInput>;
    _sum?: InstanceType<typeof MarketSalePriceHistorySumAggregateInput>;
    _min?: InstanceType<typeof MarketSalePriceHistoryMinAggregateInput>;
    _max?: InstanceType<typeof MarketSalePriceHistoryMaxAggregateInput>;
}
export declare class MarketSalePriceHistoryGroupBy {
    id: number;
    price: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    laundryItemId: number;
    _count?: InstanceType<typeof MarketSalePriceHistoryCountAggregate>;
    _avg?: InstanceType<typeof MarketSalePriceHistoryAvgAggregate>;
    _sum?: InstanceType<typeof MarketSalePriceHistorySumAggregate>;
    _min?: InstanceType<typeof MarketSalePriceHistoryMinAggregate>;
    _max?: InstanceType<typeof MarketSalePriceHistoryMaxAggregate>;
}
export declare class MarketSalePriceHistoryListRelationFilter {
    every?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    some?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
    none?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
}
export declare class MarketSalePriceHistoryMaxAggregateInput {
    id?: true;
    price?: true;
    createdAt?: true;
    updatedAt?: true;
    laundryItemId?: true;
}
export declare class MarketSalePriceHistoryMaxAggregate {
    id?: number;
    price?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId?: number;
}
export declare class MarketSalePriceHistoryMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryMinAggregateInput {
    id?: true;
    price?: true;
    createdAt?: true;
    updatedAt?: true;
    laundryItemId?: true;
}
export declare class MarketSalePriceHistoryMinAggregate {
    id?: number;
    price?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId?: number;
}
export declare class MarketSalePriceHistoryMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof MarketSalePriceHistoryCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof MarketSalePriceHistoryAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof MarketSalePriceHistoryMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof MarketSalePriceHistoryMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof MarketSalePriceHistorySumOrderByAggregateInput>;
}
export declare class MarketSalePriceHistoryOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
    laundry?: InstanceType<typeof LaundryItemOrderByWithRelationInput>;
}
export declare class MarketSalePriceHistoryScalarWhereWithAggregatesInput {
    AND?: Array<MarketSalePriceHistoryScalarWhereWithAggregatesInput>;
    OR?: Array<MarketSalePriceHistoryScalarWhereWithAggregatesInput>;
    NOT?: Array<MarketSalePriceHistoryScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    price?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    laundryItemId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class MarketSalePriceHistoryScalarWhereInput {
    AND?: Array<MarketSalePriceHistoryScalarWhereInput>;
    OR?: Array<MarketSalePriceHistoryScalarWhereInput>;
    NOT?: Array<MarketSalePriceHistoryScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    price?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
}
export declare class MarketSalePriceHistorySumAggregateInput {
    id?: true;
    price?: true;
    laundryItemId?: true;
}
export declare class MarketSalePriceHistorySumAggregate {
    id?: number;
    price?: number;
    laundryItemId?: number;
}
export declare class MarketSalePriceHistorySumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    price?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class MarketSalePriceHistoryUncheckedCreateNestedManyWithoutLaundryInput {
    create?: Array<MarketSalePriceHistoryCreateWithoutLaundryInput>;
    connectOrCreate?: Array<MarketSalePriceHistoryCreateOrConnectWithoutLaundryInput>;
    createMany?: InstanceType<typeof MarketSalePriceHistoryCreateManyLaundryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
}
export declare class MarketSalePriceHistoryUncheckedCreateWithoutLaundryInput {
    id?: number;
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class MarketSalePriceHistoryUncheckedCreateInput {
    id?: number;
    price: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId: number;
}
export declare class MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryNestedInput {
    create?: Array<MarketSalePriceHistoryCreateWithoutLaundryInput>;
    connectOrCreate?: Array<MarketSalePriceHistoryCreateOrConnectWithoutLaundryInput>;
    upsert?: Array<MarketSalePriceHistoryUpsertWithWhereUniqueWithoutLaundryInput>;
    createMany?: InstanceType<typeof MarketSalePriceHistoryCreateManyLaundryInputEnvelope>;
    set?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    update?: Array<MarketSalePriceHistoryUpdateWithWhereUniqueWithoutLaundryInput>;
    updateMany?: Array<MarketSalePriceHistoryUpdateManyWithWhereWithoutLaundryInput>;
    deleteMany?: Array<MarketSalePriceHistoryScalarWhereInput>;
}
export declare class MarketSalePriceHistoryUncheckedUpdateManyWithoutLaundryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUncheckedUpdateWithoutLaundryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUpdateManyMutationInput {
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUpdateManyWithWhereWithoutLaundryInput {
    where: InstanceType<typeof MarketSalePriceHistoryScalarWhereInput>;
    data: InstanceType<typeof MarketSalePriceHistoryUpdateManyMutationInput>;
}
export declare class MarketSalePriceHistoryUpdateManyWithoutLaundryNestedInput {
    create?: Array<MarketSalePriceHistoryCreateWithoutLaundryInput>;
    connectOrCreate?: Array<MarketSalePriceHistoryCreateOrConnectWithoutLaundryInput>;
    upsert?: Array<MarketSalePriceHistoryUpsertWithWhereUniqueWithoutLaundryInput>;
    createMany?: InstanceType<typeof MarketSalePriceHistoryCreateManyLaundryInputEnvelope>;
    set?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>>;
    update?: Array<MarketSalePriceHistoryUpdateWithWhereUniqueWithoutLaundryInput>;
    updateMany?: Array<MarketSalePriceHistoryUpdateManyWithWhereWithoutLaundryInput>;
    deleteMany?: Array<MarketSalePriceHistoryScalarWhereInput>;
}
export declare class MarketSalePriceHistoryUpdateWithWhereUniqueWithoutLaundryInput {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MarketSalePriceHistoryUpdateWithoutLaundryInput>;
}
export declare class MarketSalePriceHistoryUpdateWithoutLaundryInput {
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MarketSalePriceHistoryUpdateInput {
    price?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundry?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutMarketSalePriceNestedInput>;
}
export declare class MarketSalePriceHistoryUpsertWithWhereUniqueWithoutLaundryInput {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MarketSalePriceHistoryUpdateWithoutLaundryInput>;
    create: InstanceType<typeof MarketSalePriceHistoryCreateWithoutLaundryInput>;
}
export declare class MarketSalePriceHistoryWhereUniqueInput {
    id?: number;
    AND?: Array<MarketSalePriceHistoryWhereInput>;
    OR?: Array<MarketSalePriceHistoryWhereInput>;
    NOT?: Array<MarketSalePriceHistoryWhereInput>;
    price?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
    laundry?: InstanceType<typeof LaundryItemRelationFilter>;
}
export declare class MarketSalePriceHistoryWhereInput {
    AND?: Array<MarketSalePriceHistoryWhereInput>;
    OR?: Array<MarketSalePriceHistoryWhereInput>;
    NOT?: Array<MarketSalePriceHistoryWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    price?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
    laundry?: InstanceType<typeof LaundryItemRelationFilter>;
}
export declare class MarketSalePriceHistory {
    id: number;
    price: number;
    createdAt: Date;
    updatedAt: Date;
    laundryItemId: number;
    laundry?: InstanceType<typeof LaundryItem>;
}
export declare class UpdateManyMarketSalePriceHistoryArgs {
    data: InstanceType<typeof MarketSalePriceHistoryUpdateManyMutationInput>;
    where?: InstanceType<typeof MarketSalePriceHistoryWhereInput>;
}
export declare class UpdateOneMarketSalePriceHistoryArgs {
    data: InstanceType<typeof MarketSalePriceHistoryUpdateInput>;
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
}
export declare class UpsertOneMarketSalePriceHistoryArgs {
    where: Prisma.AtLeast<MarketSalePriceHistoryWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MarketSalePriceHistoryCreateInput>;
    update: InstanceType<typeof MarketSalePriceHistoryUpdateInput>;
}
export declare class AggregateMessage {
    _count?: InstanceType<typeof MessageCountAggregate>;
    _avg?: InstanceType<typeof MessageAvgAggregate>;
    _sum?: InstanceType<typeof MessageSumAggregate>;
    _min?: InstanceType<typeof MessageMinAggregate>;
    _max?: InstanceType<typeof MessageMaxAggregate>;
}
export declare class CreateManyMessageArgs {
    data: Array<MessageCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneMessageArgs {
    data: InstanceType<typeof MessageCreateInput>;
}
export declare class DeleteManyMessageArgs {
    where?: InstanceType<typeof MessageWhereInput>;
}
export declare class DeleteOneMessageArgs {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
}
export declare class FindFirstMessageOrThrowArgs {
    where?: InstanceType<typeof MessageWhereInput>;
    orderBy?: Array<MessageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MessageScalarFieldEnum>;
}
export declare class FindFirstMessageArgs {
    where?: InstanceType<typeof MessageWhereInput>;
    orderBy?: Array<MessageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MessageScalarFieldEnum>;
}
export declare class FindManyMessageArgs {
    where?: InstanceType<typeof MessageWhereInput>;
    orderBy?: Array<MessageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof MessageScalarFieldEnum>;
}
export declare class FindUniqueMessageOrThrowArgs {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
}
export declare class FindUniqueMessageArgs {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
}
export declare class MessageAggregateArgs {
    where?: InstanceType<typeof MessageWhereInput>;
    orderBy?: Array<MessageOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MessageCountAggregateInput>;
    _avg?: InstanceType<typeof MessageAvgAggregateInput>;
    _sum?: InstanceType<typeof MessageSumAggregateInput>;
    _min?: InstanceType<typeof MessageMinAggregateInput>;
    _max?: InstanceType<typeof MessageMaxAggregateInput>;
}
export declare class MessageAvgAggregateInput {
    id?: true;
    chatRoomId?: true;
    reviewId?: true;
}
export declare class MessageAvgAggregate {
    id?: number;
    chatRoomId?: number;
    reviewId?: number;
}
export declare class MessageAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: keyof typeof SortOrder;
}
export declare class MessageCountAggregateInput {
    id?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    senderId?: true;
    chatRoomId?: true;
    reviewId?: true;
    _all?: true;
}
export declare class MessageCountAggregate {
    id: number;
    content: number;
    createdAt: number;
    updatedAt: number;
    senderId: number;
    chatRoomId: number;
    reviewId: number;
    _all: number;
}
export declare class MessageCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    senderId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: keyof typeof SortOrder;
}
export declare class MessageCount {
    reads?: number;
    likes?: number;
    images?: number;
    files?: number;
}
export declare class MessageCreateManyChatRoomInputEnvelope {
    data: Array<MessageCreateManyChatRoomInput>;
    skipDuplicates?: boolean;
}
export declare class MessageCreateManyChatRoomInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    reviewId?: number;
}
export declare class MessageCreateManyReviewInputEnvelope {
    data: Array<MessageCreateManyReviewInput>;
    skipDuplicates?: boolean;
}
export declare class MessageCreateManyReviewInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
}
export declare class MessageCreateManySenderInputEnvelope {
    data: Array<MessageCreateManySenderInput>;
    skipDuplicates?: boolean;
}
export declare class MessageCreateManySenderInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    chatRoomId: number;
    reviewId?: number;
}
export declare class MessageCreateManyInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
}
export declare class MessageCreateNestedManyWithoutChatRoomInput {
    create?: Array<MessageCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutChatRoomInput>;
    createMany?: InstanceType<typeof MessageCreateManyChatRoomInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedManyWithoutImagesInput {
    create?: Array<MessageCreateWithoutImagesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedManyWithoutLikesInput {
    create?: Array<MessageCreateWithoutLikesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutLikesInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedManyWithoutReadsInput {
    create?: Array<MessageCreateWithoutReadsInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReadsInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedManyWithoutReviewInput {
    create?: Array<MessageCreateWithoutReviewInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReviewInput>;
    createMany?: InstanceType<typeof MessageCreateManyReviewInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedManyWithoutSenderInput {
    create?: Array<MessageCreateWithoutSenderInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutSenderInput>;
    createMany?: InstanceType<typeof MessageCreateManySenderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageCreateNestedOneWithoutFilesInput {
    create?: InstanceType<typeof MessageCreateWithoutFilesInput>;
    connectOrCreate?: InstanceType<typeof MessageCreateOrConnectWithoutFilesInput>;
    connect?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
}
export declare class MessageCreateOrConnectWithoutChatRoomInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutChatRoomInput>;
}
export declare class MessageCreateOrConnectWithoutFilesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutFilesInput>;
}
export declare class MessageCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutImagesInput>;
}
export declare class MessageCreateOrConnectWithoutLikesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutLikesInput>;
}
export declare class MessageCreateOrConnectWithoutReadsInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutReadsInput>;
}
export declare class MessageCreateOrConnectWithoutReviewInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutReviewInput>;
}
export declare class MessageCreateOrConnectWithoutSenderInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateWithoutSenderInput>;
}
export declare class MessageCreateWithoutChatRoomInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateWithoutFilesInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
}
export declare class MessageCreateWithoutImagesInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateWithoutLikesInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateWithoutReadsInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateWithoutReviewInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateWithoutSenderInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageCreateInput {
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    sender: InstanceType<typeof UserCreateNestedOneWithoutMessageSenderInput>;
    chatRoom: InstanceType<typeof ChatRoomCreateNestedOneWithoutMessagesInput>;
    review?: InstanceType<typeof ReviewCreateNestedOneWithoutMessageInput>;
    reads?: InstanceType<typeof UserCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileCreateNestedManyWithoutMessageInput>;
}
export declare class MessageGroupByArgs {
    where?: InstanceType<typeof MessageWhereInput>;
    orderBy?: Array<MessageOrderByWithAggregationInput>;
    by: Array<keyof typeof MessageScalarFieldEnum>;
    having?: InstanceType<typeof MessageScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof MessageCountAggregateInput>;
    _avg?: InstanceType<typeof MessageAvgAggregateInput>;
    _sum?: InstanceType<typeof MessageSumAggregateInput>;
    _min?: InstanceType<typeof MessageMinAggregateInput>;
    _max?: InstanceType<typeof MessageMaxAggregateInput>;
}
export declare class MessageGroupBy {
    id: number;
    content: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    _count?: InstanceType<typeof MessageCountAggregate>;
    _avg?: InstanceType<typeof MessageAvgAggregate>;
    _sum?: InstanceType<typeof MessageSumAggregate>;
    _min?: InstanceType<typeof MessageMinAggregate>;
    _max?: InstanceType<typeof MessageMaxAggregate>;
}
export declare class MessageListRelationFilter {
    every?: InstanceType<typeof MessageWhereInput>;
    some?: InstanceType<typeof MessageWhereInput>;
    none?: InstanceType<typeof MessageWhereInput>;
}
export declare class MessageMaxAggregateInput {
    id?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    senderId?: true;
    chatRoomId?: true;
    reviewId?: true;
}
export declare class MessageMaxAggregate {
    id?: number;
    content?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId?: string;
    chatRoomId?: number;
    reviewId?: number;
}
export declare class MessageMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    senderId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: keyof typeof SortOrder;
}
export declare class MessageMinAggregateInput {
    id?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    senderId?: true;
    chatRoomId?: true;
    reviewId?: true;
}
export declare class MessageMinAggregate {
    id?: number;
    content?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId?: string;
    chatRoomId?: number;
    reviewId?: number;
}
export declare class MessageMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    senderId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: keyof typeof SortOrder;
}
export declare class MessageOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class MessageOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    senderId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof MessageCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof MessageAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof MessageMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof MessageMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof MessageSumOrderByAggregateInput>;
}
export declare class MessageOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    senderId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: InstanceType<typeof SortOrderInput>;
    sender?: InstanceType<typeof UserOrderByWithRelationInput>;
    chatRoom?: InstanceType<typeof ChatRoomOrderByWithRelationInput>;
    review?: InstanceType<typeof ReviewOrderByWithRelationInput>;
    reads?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    likes?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
    files?: InstanceType<typeof FileOrderByRelationAggregateInput>;
}
export declare class MessageRelationFilter {
    is?: InstanceType<typeof MessageWhereInput>;
    isNot?: InstanceType<typeof MessageWhereInput>;
}
export declare class MessageScalarWhereWithAggregatesInput {
    AND?: Array<MessageScalarWhereWithAggregatesInput>;
    OR?: Array<MessageScalarWhereWithAggregatesInput>;
    NOT?: Array<MessageScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    content?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    senderId?: InstanceType<typeof StringWithAggregatesFilter>;
    chatRoomId?: InstanceType<typeof IntWithAggregatesFilter>;
    reviewId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class MessageScalarWhereInput {
    AND?: Array<MessageScalarWhereInput>;
    OR?: Array<MessageScalarWhereInput>;
    NOT?: Array<MessageScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    senderId?: InstanceType<typeof StringFilter>;
    chatRoomId?: InstanceType<typeof IntFilter>;
    reviewId?: InstanceType<typeof IntNullableFilter>;
}
export declare class MessageSumAggregateInput {
    id?: true;
    chatRoomId?: true;
    reviewId?: true;
}
export declare class MessageSumAggregate {
    id?: number;
    chatRoomId?: number;
    reviewId?: number;
}
export declare class MessageSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
    reviewId?: keyof typeof SortOrder;
}
export declare class MessageUncheckedCreateNestedManyWithoutChatRoomInput {
    create?: Array<MessageCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutChatRoomInput>;
    createMany?: InstanceType<typeof MessageCreateManyChatRoomInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateNestedManyWithoutImagesInput {
    create?: Array<MessageCreateWithoutImagesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateNestedManyWithoutLikesInput {
    create?: Array<MessageCreateWithoutLikesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutLikesInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateNestedManyWithoutReadsInput {
    create?: Array<MessageCreateWithoutReadsInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReadsInput>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateNestedManyWithoutReviewInput {
    create?: Array<MessageCreateWithoutReviewInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReviewInput>;
    createMany?: InstanceType<typeof MessageCreateManyReviewInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateNestedManyWithoutSenderInput {
    create?: Array<MessageCreateWithoutSenderInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutSenderInput>;
    createMany?: InstanceType<typeof MessageCreateManySenderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
}
export declare class MessageUncheckedCreateWithoutChatRoomInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateWithoutFilesInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
}
export declare class MessageUncheckedCreateWithoutImagesInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateWithoutLikesInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateWithoutReadsInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateWithoutReviewInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateWithoutSenderInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    chatRoomId: number;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedCreateInput {
    id?: number;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    senderId: string;
    chatRoomId: number;
    reviewId?: number;
    reads?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageReadsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutMessageLikesInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutMessagesInput>;
    files?: InstanceType<typeof FileUncheckedCreateNestedManyWithoutMessageInput>;
}
export declare class MessageUncheckedUpdateManyWithoutChatRoomNestedInput {
    create?: Array<MessageCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutChatRoomInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutChatRoomInput>;
    createMany?: InstanceType<typeof MessageCreateManyChatRoomInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutChatRoomInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutChatRoomInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutChatRoomInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyWithoutImagesNestedInput {
    create?: Array<MessageCreateWithoutImagesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutImagesInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyWithoutLikesNestedInput {
    create?: Array<MessageCreateWithoutLikesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutLikesInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutLikesInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutLikesInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutLikesInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutLikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyWithoutReadsNestedInput {
    create?: Array<MessageCreateWithoutReadsInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReadsInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutReadsInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutReadsInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutReadsInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutReadsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyWithoutReviewNestedInput {
    create?: Array<MessageCreateWithoutReviewInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReviewInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutReviewInput>;
    createMany?: InstanceType<typeof MessageCreateManyReviewInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutReviewInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutReviewInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutReviewInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyWithoutSenderNestedInput {
    create?: Array<MessageCreateWithoutSenderInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutSenderInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutSenderInput>;
    createMany?: InstanceType<typeof MessageCreateManySenderInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutSenderInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutSenderInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUncheckedUpdateManyWithoutSenderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class MessageUncheckedUpdateWithoutChatRoomInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutFilesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutLikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutReadsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutReviewInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateWithoutSenderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    senderId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    reviewId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    reads?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUncheckedUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateManyMutationInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class MessageUpdateManyWithWhereWithoutChatRoomInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithWhereWithoutImagesInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithWhereWithoutLikesInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithWhereWithoutReadsInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithWhereWithoutReviewInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithWhereWithoutSenderInput {
    where: InstanceType<typeof MessageScalarWhereInput>;
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
}
export declare class MessageUpdateManyWithoutChatRoomNestedInput {
    create?: Array<MessageCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutChatRoomInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutChatRoomInput>;
    createMany?: InstanceType<typeof MessageCreateManyChatRoomInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutChatRoomInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutChatRoomInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateManyWithoutImagesNestedInput {
    create?: Array<MessageCreateWithoutImagesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutImagesInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateManyWithoutLikesNestedInput {
    create?: Array<MessageCreateWithoutLikesInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutLikesInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutLikesInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutLikesInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutLikesInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateManyWithoutReadsNestedInput {
    create?: Array<MessageCreateWithoutReadsInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReadsInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutReadsInput>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutReadsInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutReadsInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateManyWithoutReviewNestedInput {
    create?: Array<MessageCreateWithoutReviewInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutReviewInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutReviewInput>;
    createMany?: InstanceType<typeof MessageCreateManyReviewInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutReviewInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutReviewInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateManyWithoutSenderNestedInput {
    create?: Array<MessageCreateWithoutSenderInput>;
    connectOrCreate?: Array<MessageCreateOrConnectWithoutSenderInput>;
    upsert?: Array<MessageUpsertWithWhereUniqueWithoutSenderInput>;
    createMany?: InstanceType<typeof MessageCreateManySenderInputEnvelope>;
    set?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<MessageWhereUniqueInput, 'id'>>;
    update?: Array<MessageUpdateWithWhereUniqueWithoutSenderInput>;
    updateMany?: Array<MessageUpdateManyWithWhereWithoutSenderInput>;
    deleteMany?: Array<MessageScalarWhereInput>;
}
export declare class MessageUpdateOneRequiredWithoutFilesNestedInput {
    create?: InstanceType<typeof MessageCreateWithoutFilesInput>;
    connectOrCreate?: InstanceType<typeof MessageCreateOrConnectWithoutFilesInput>;
    upsert?: InstanceType<typeof MessageUpsertWithoutFilesInput>;
    connect?: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof MessageUpdateToOneWithWhereWithoutFilesInput>;
}
export declare class MessageUpdateToOneWithWhereWithoutFilesInput {
    where?: InstanceType<typeof MessageWhereInput>;
    data: InstanceType<typeof MessageUpdateWithoutFilesInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutChatRoomInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutChatRoomInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutImagesInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutLikesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutLikesInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutReadsInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutReadsInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutReviewInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutReviewInput>;
}
export declare class MessageUpdateWithWhereUniqueWithoutSenderInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    data: InstanceType<typeof MessageUpdateWithoutSenderInput>;
}
export declare class MessageUpdateWithoutChatRoomInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateWithoutFilesInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
}
export declare class MessageUpdateWithoutImagesInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateWithoutLikesInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateWithoutReadsInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateWithoutReviewInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateWithoutSenderInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpdateInput {
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    sender?: InstanceType<typeof UserUpdateOneRequiredWithoutMessageSenderNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneRequiredWithoutMessagesNestedInput>;
    review?: InstanceType<typeof ReviewUpdateOneWithoutMessageNestedInput>;
    reads?: InstanceType<typeof UserUpdateManyWithoutMessageReadsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutMessageLikesNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutMessagesNestedInput>;
    files?: InstanceType<typeof FileUpdateManyWithoutMessageNestedInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutChatRoomInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutChatRoomInput>;
    create: InstanceType<typeof MessageCreateWithoutChatRoomInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutImagesInput>;
    create: InstanceType<typeof MessageCreateWithoutImagesInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutLikesInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutLikesInput>;
    create: InstanceType<typeof MessageCreateWithoutLikesInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutReadsInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutReadsInput>;
    create: InstanceType<typeof MessageCreateWithoutReadsInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutReviewInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutReviewInput>;
    create: InstanceType<typeof MessageCreateWithoutReviewInput>;
}
export declare class MessageUpsertWithWhereUniqueWithoutSenderInput {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    update: InstanceType<typeof MessageUpdateWithoutSenderInput>;
    create: InstanceType<typeof MessageCreateWithoutSenderInput>;
}
export declare class MessageUpsertWithoutFilesInput {
    update: InstanceType<typeof MessageUpdateWithoutFilesInput>;
    create: InstanceType<typeof MessageCreateWithoutFilesInput>;
    where?: InstanceType<typeof MessageWhereInput>;
}
export declare class MessageWhereUniqueInput {
    id?: number;
    AND?: Array<MessageWhereInput>;
    OR?: Array<MessageWhereInput>;
    NOT?: Array<MessageWhereInput>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    senderId?: InstanceType<typeof StringFilter>;
    chatRoomId?: InstanceType<typeof IntFilter>;
    reviewId?: InstanceType<typeof IntNullableFilter>;
    sender?: InstanceType<typeof UserRelationFilter>;
    chatRoom?: InstanceType<typeof ChatRoomRelationFilter>;
    review?: InstanceType<typeof ReviewNullableRelationFilter>;
    reads?: InstanceType<typeof UserListRelationFilter>;
    likes?: InstanceType<typeof UserListRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    files?: InstanceType<typeof FileListRelationFilter>;
}
export declare class MessageWhereInput {
    AND?: Array<MessageWhereInput>;
    OR?: Array<MessageWhereInput>;
    NOT?: Array<MessageWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    senderId?: InstanceType<typeof StringFilter>;
    chatRoomId?: InstanceType<typeof IntFilter>;
    reviewId?: InstanceType<typeof IntNullableFilter>;
    sender?: InstanceType<typeof UserRelationFilter>;
    chatRoom?: InstanceType<typeof ChatRoomRelationFilter>;
    review?: InstanceType<typeof ReviewNullableRelationFilter>;
    reads?: InstanceType<typeof UserListRelationFilter>;
    likes?: InstanceType<typeof UserListRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    files?: InstanceType<typeof FileListRelationFilter>;
}
export declare class Message {
    id: number;
    content: string;
    createdAt: Date;
    updatedAt: Date;
    senderId: string;
    chatRoomId: number;
    reviewId: number | null;
    sender?: InstanceType<typeof User>;
    chatRoom?: InstanceType<typeof ChatRoom>;
    review?: InstanceType<typeof Review> | null;
    reads?: Array<User>;
    likes?: Array<User>;
    images?: Array<Image>;
    files?: Array<File>;
    _count?: InstanceType<typeof MessageCount>;
}
export declare class UpdateManyMessageArgs {
    data: InstanceType<typeof MessageUpdateManyMutationInput>;
    where?: InstanceType<typeof MessageWhereInput>;
}
export declare class UpdateOneMessageArgs {
    data: InstanceType<typeof MessageUpdateInput>;
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
}
export declare class UpsertOneMessageArgs {
    where: Prisma.AtLeast<MessageWhereUniqueInput, 'id'>;
    create: InstanceType<typeof MessageCreateInput>;
    update: InstanceType<typeof MessageUpdateInput>;
}
export declare class AggregateNotification {
    _count?: InstanceType<typeof NotificationCountAggregate>;
    _avg?: InstanceType<typeof NotificationAvgAggregate>;
    _sum?: InstanceType<typeof NotificationSumAggregate>;
    _min?: InstanceType<typeof NotificationMinAggregate>;
    _max?: InstanceType<typeof NotificationMaxAggregate>;
}
export declare class CreateManyNotificationArgs {
    data: Array<NotificationCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneNotificationArgs {
    data: InstanceType<typeof NotificationCreateInput>;
}
export declare class DeleteManyNotificationArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
}
export declare class DeleteOneNotificationArgs {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}
export declare class FindFirstNotificationOrThrowArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof NotificationScalarFieldEnum>;
}
export declare class FindFirstNotificationArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof NotificationScalarFieldEnum>;
}
export declare class FindManyNotificationArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof NotificationScalarFieldEnum>;
}
export declare class FindUniqueNotificationOrThrowArgs {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}
export declare class FindUniqueNotificationArgs {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}
export declare class NotificationAggregateArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
    orderBy?: Array<NotificationOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof NotificationCountAggregateInput>;
    _avg?: InstanceType<typeof NotificationAvgAggregateInput>;
    _sum?: InstanceType<typeof NotificationSumAggregateInput>;
    _min?: InstanceType<typeof NotificationMinAggregateInput>;
    _max?: InstanceType<typeof NotificationMaxAggregateInput>;
}
export declare class NotificationAvgAggregateInput {
    id?: true;
}
export declare class NotificationAvgAggregate {
    id?: number;
}
export declare class NotificationAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class NotificationCountAggregateInput {
    id?: true;
    title?: true;
    subTitle?: true;
    content?: true;
    createdAt?: true;
    isRead?: true;
    fcmToken?: true;
    type?: true;
    userId?: true;
    _all?: true;
}
export declare class NotificationCountAggregate {
    id: number;
    title: number;
    subTitle: number;
    content: number;
    createdAt: number;
    isRead: number;
    fcmToken: number;
    type: number;
    userId: number;
    _all: number;
}
export declare class NotificationCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    subTitle?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    isRead?: keyof typeof SortOrder;
    fcmToken?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class NotificationCreateManyUserInputEnvelope {
    data: Array<NotificationCreateManyUserInput>;
    skipDuplicates?: boolean;
}
export declare class NotificationCreateManyUserInput {
    id?: number;
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
}
export declare class NotificationCreateManyInput {
    id?: number;
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
    userId: string;
}
export declare class NotificationCreateNestedManyWithoutUserInput {
    create?: Array<NotificationCreateWithoutUserInput>;
    connectOrCreate?: Array<NotificationCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof NotificationCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
}
export declare class NotificationCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    create: InstanceType<typeof NotificationCreateWithoutUserInput>;
}
export declare class NotificationCreateWithoutUserInput {
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
}
export declare class NotificationCreateInput {
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
    user: InstanceType<typeof UserCreateNestedOneWithoutNotificationsInput>;
}
export declare class NotificationGroupByArgs {
    where?: InstanceType<typeof NotificationWhereInput>;
    orderBy?: Array<NotificationOrderByWithAggregationInput>;
    by: Array<keyof typeof NotificationScalarFieldEnum>;
    having?: InstanceType<typeof NotificationScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof NotificationCountAggregateInput>;
    _avg?: InstanceType<typeof NotificationAvgAggregateInput>;
    _sum?: InstanceType<typeof NotificationSumAggregateInput>;
    _min?: InstanceType<typeof NotificationMinAggregateInput>;
    _max?: InstanceType<typeof NotificationMaxAggregateInput>;
}
export declare class NotificationGroupBy {
    id: number;
    title: string;
    subTitle?: string;
    content: string;
    createdAt: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
    userId: string;
    _count?: InstanceType<typeof NotificationCountAggregate>;
    _avg?: InstanceType<typeof NotificationAvgAggregate>;
    _sum?: InstanceType<typeof NotificationSumAggregate>;
    _min?: InstanceType<typeof NotificationMinAggregate>;
    _max?: InstanceType<typeof NotificationMaxAggregate>;
}
export declare class NotificationListRelationFilter {
    every?: InstanceType<typeof NotificationWhereInput>;
    some?: InstanceType<typeof NotificationWhereInput>;
    none?: InstanceType<typeof NotificationWhereInput>;
}
export declare class NotificationMaxAggregateInput {
    id?: true;
    title?: true;
    subTitle?: true;
    content?: true;
    createdAt?: true;
    isRead?: true;
    fcmToken?: true;
    type?: true;
    userId?: true;
}
export declare class NotificationMaxAggregate {
    id?: number;
    title?: string;
    subTitle?: string;
    content?: string;
    createdAt?: Date | string;
    isRead?: boolean;
    fcmToken?: string;
    type?: keyof typeof NotificationType;
    userId?: string;
}
export declare class NotificationMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    subTitle?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    isRead?: keyof typeof SortOrder;
    fcmToken?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class NotificationMinAggregateInput {
    id?: true;
    title?: true;
    subTitle?: true;
    content?: true;
    createdAt?: true;
    isRead?: true;
    fcmToken?: true;
    type?: true;
    userId?: true;
}
export declare class NotificationMinAggregate {
    id?: number;
    title?: string;
    subTitle?: string;
    content?: string;
    createdAt?: Date | string;
    isRead?: boolean;
    fcmToken?: string;
    type?: keyof typeof NotificationType;
    userId?: string;
}
export declare class NotificationMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    subTitle?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    isRead?: keyof typeof SortOrder;
    fcmToken?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class NotificationOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class NotificationOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    subTitle?: InstanceType<typeof SortOrderInput>;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    isRead?: keyof typeof SortOrder;
    fcmToken?: InstanceType<typeof SortOrderInput>;
    type?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof NotificationCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof NotificationAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof NotificationMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof NotificationMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof NotificationSumOrderByAggregateInput>;
}
export declare class NotificationOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    subTitle?: InstanceType<typeof SortOrderInput>;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    isRead?: keyof typeof SortOrder;
    fcmToken?: InstanceType<typeof SortOrderInput>;
    type?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
}
export declare class NotificationScalarWhereWithAggregatesInput {
    AND?: Array<NotificationScalarWhereWithAggregatesInput>;
    OR?: Array<NotificationScalarWhereWithAggregatesInput>;
    NOT?: Array<NotificationScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    subTitle?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    content?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    isRead?: InstanceType<typeof BoolWithAggregatesFilter>;
    fcmToken?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    type?: InstanceType<typeof EnumNotificationTypeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class NotificationScalarWhereInput {
    AND?: Array<NotificationScalarWhereInput>;
    OR?: Array<NotificationScalarWhereInput>;
    NOT?: Array<NotificationScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    title?: InstanceType<typeof StringFilter>;
    subTitle?: InstanceType<typeof StringNullableFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    isRead?: InstanceType<typeof BoolFilter>;
    fcmToken?: InstanceType<typeof StringNullableFilter>;
    type?: InstanceType<typeof EnumNotificationTypeFilter>;
    userId?: InstanceType<typeof StringFilter>;
}
export declare class NotificationSumAggregateInput {
    id?: true;
}
export declare class NotificationSumAggregate {
    id?: number;
}
export declare class NotificationSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class NotificationUncheckedCreateNestedManyWithoutUserInput {
    create?: Array<NotificationCreateWithoutUserInput>;
    connectOrCreate?: Array<NotificationCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof NotificationCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
}
export declare class NotificationUncheckedCreateWithoutUserInput {
    id?: number;
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
}
export declare class NotificationUncheckedCreateInput {
    id?: number;
    title: string;
    subTitle?: string;
    content: string;
    createdAt?: Date | string;
    isRead: boolean;
    fcmToken?: string;
    type: keyof typeof NotificationType;
    userId: string;
}
export declare class NotificationUncheckedUpdateManyWithoutUserNestedInput {
    create?: Array<NotificationCreateWithoutUserInput>;
    connectOrCreate?: Array<NotificationCreateOrConnectWithoutUserInput>;
    upsert?: Array<NotificationUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof NotificationCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    update?: Array<NotificationUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<NotificationUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<NotificationScalarWhereInput>;
}
export declare class NotificationUncheckedUpdateManyWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
}
export declare class NotificationUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class NotificationUncheckedUpdateWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
}
export declare class NotificationUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class NotificationUpdateManyMutationInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
}
export declare class NotificationUpdateManyWithWhereWithoutUserInput {
    where: InstanceType<typeof NotificationScalarWhereInput>;
    data: InstanceType<typeof NotificationUpdateManyMutationInput>;
}
export declare class NotificationUpdateManyWithoutUserNestedInput {
    create?: Array<NotificationCreateWithoutUserInput>;
    connectOrCreate?: Array<NotificationCreateOrConnectWithoutUserInput>;
    upsert?: Array<NotificationUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof NotificationCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>>;
    update?: Array<NotificationUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<NotificationUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<NotificationScalarWhereInput>;
}
export declare class NotificationUpdateWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    data: InstanceType<typeof NotificationUpdateWithoutUserInput>;
}
export declare class NotificationUpdateWithoutUserInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
}
export declare class NotificationUpdateInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    subTitle?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isRead?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    fcmToken?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumNotificationTypeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutNotificationsNestedInput>;
}
export declare class NotificationUpsertWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    update: InstanceType<typeof NotificationUpdateWithoutUserInput>;
    create: InstanceType<typeof NotificationCreateWithoutUserInput>;
}
export declare class NotificationWhereUniqueInput {
    id?: number;
    AND?: Array<NotificationWhereInput>;
    OR?: Array<NotificationWhereInput>;
    NOT?: Array<NotificationWhereInput>;
    title?: InstanceType<typeof StringFilter>;
    subTitle?: InstanceType<typeof StringNullableFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    isRead?: InstanceType<typeof BoolFilter>;
    fcmToken?: InstanceType<typeof StringNullableFilter>;
    type?: InstanceType<typeof EnumNotificationTypeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class NotificationWhereInput {
    AND?: Array<NotificationWhereInput>;
    OR?: Array<NotificationWhereInput>;
    NOT?: Array<NotificationWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    title?: InstanceType<typeof StringFilter>;
    subTitle?: InstanceType<typeof StringNullableFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    isRead?: InstanceType<typeof BoolFilter>;
    fcmToken?: InstanceType<typeof StringNullableFilter>;
    type?: InstanceType<typeof EnumNotificationTypeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class Notification {
    id: number;
    title: string;
    subTitle: string | null;
    content: string;
    createdAt: Date;
    isRead: boolean;
    fcmToken: string | null;
    type: keyof typeof NotificationType;
    userId: string;
    user?: InstanceType<typeof User>;
}
export declare class UpdateManyNotificationArgs {
    data: InstanceType<typeof NotificationUpdateManyMutationInput>;
    where?: InstanceType<typeof NotificationWhereInput>;
}
export declare class UpdateOneNotificationArgs {
    data: InstanceType<typeof NotificationUpdateInput>;
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
}
export declare class UpsertOneNotificationArgs {
    where: Prisma.AtLeast<NotificationWhereUniqueInput, 'id'>;
    create: InstanceType<typeof NotificationCreateInput>;
    update: InstanceType<typeof NotificationUpdateInput>;
}
export declare class AggregateOrderStatus {
    _count?: InstanceType<typeof OrderStatusCountAggregate>;
    _avg?: InstanceType<typeof OrderStatusAvgAggregate>;
    _sum?: InstanceType<typeof OrderStatusSumAggregate>;
    _min?: InstanceType<typeof OrderStatusMinAggregate>;
    _max?: InstanceType<typeof OrderStatusMaxAggregate>;
}
export declare class CreateManyOrderStatusArgs {
    data: Array<OrderStatusCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOrderStatusArgs {
    data: InstanceType<typeof OrderStatusCreateInput>;
}
export declare class DeleteManyOrderStatusArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
}
export declare class DeleteOneOrderStatusArgs {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
}
export declare class FindFirstOrderStatusOrThrowArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
    orderBy?: Array<OrderStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OrderStatusScalarFieldEnum>;
}
export declare class FindFirstOrderStatusArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
    orderBy?: Array<OrderStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OrderStatusScalarFieldEnum>;
}
export declare class FindManyOrderStatusArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
    orderBy?: Array<OrderStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OrderStatusScalarFieldEnum>;
}
export declare class FindUniqueOrderStatusOrThrowArgs {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
}
export declare class FindUniqueOrderStatusArgs {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
}
export declare class OrderStatusAggregateArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
    orderBy?: Array<OrderStatusOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OrderStatusCountAggregateInput>;
    _avg?: InstanceType<typeof OrderStatusAvgAggregateInput>;
    _sum?: InstanceType<typeof OrderStatusSumAggregateInput>;
    _min?: InstanceType<typeof OrderStatusMinAggregateInput>;
    _max?: InstanceType<typeof OrderStatusMaxAggregateInput>;
}
export declare class OrderStatusAvgAggregateInput {
    id?: true;
    platformOrderId?: true;
    ServiceOrderId?: true;
}
export declare class OrderStatusAvgAggregate {
    id?: number;
    platformOrderId?: number;
    ServiceOrderId?: number;
}
export declare class OrderStatusAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    ServiceOrderId?: keyof typeof SortOrder;
}
export declare class OrderStatusCountAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
    platformOrderId?: true;
    ServiceOrderId?: true;
    changedById?: true;
    _all?: true;
}
export declare class OrderStatusCountAggregate {
    id: number;
    createdAt: number;
    status: number;
    platformOrderId: number;
    ServiceOrderId: number;
    changedById: number;
    _all: number;
}
export declare class OrderStatusCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    ServiceOrderId?: keyof typeof SortOrder;
    changedById?: keyof typeof SortOrder;
}
export declare class OrderStatusCreateManyChangedByInputEnvelope {
    data: Array<OrderStatusCreateManyChangedByInput>;
    skipDuplicates?: boolean;
}
export declare class OrderStatusCreateManyChangedByInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
}
export declare class OrderStatusCreateManyPlatformOrderInputEnvelope {
    data: Array<OrderStatusCreateManyPlatformOrderInput>;
    skipDuplicates?: boolean;
}
export declare class OrderStatusCreateManyPlatformOrderInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    ServiceOrderId?: number;
    changedById: string;
}
export declare class OrderStatusCreateManyServiceOrderInputEnvelope {
    data: Array<OrderStatusCreateManyServiceOrderInput>;
    skipDuplicates?: boolean;
}
export declare class OrderStatusCreateManyServiceOrderInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    changedById: string;
}
export declare class OrderStatusCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
    changedById: string;
}
export declare class OrderStatusCreateNestedManyWithoutChangedByInput {
    create?: Array<OrderStatusCreateWithoutChangedByInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutChangedByInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyChangedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<OrderStatusCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusCreateNestedManyWithoutServiceOrderInput {
    create?: Array<OrderStatusCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusCreateOrConnectWithoutChangedByInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OrderStatusCreateWithoutChangedByInput>;
}
export declare class OrderStatusCreateOrConnectWithoutPlatformOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OrderStatusCreateWithoutPlatformOrderInput>;
}
export declare class OrderStatusCreateOrConnectWithoutServiceOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OrderStatusCreateWithoutServiceOrderInput>;
}
export declare class OrderStatusCreateWithoutChangedByInput {
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutStatusInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutStatusInput>;
}
export declare class OrderStatusCreateWithoutPlatformOrderInput {
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutStatusInput>;
    changedBy: InstanceType<typeof UserCreateNestedOneWithoutChangedStatusesInput>;
}
export declare class OrderStatusCreateWithoutServiceOrderInput {
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutStatusInput>;
    changedBy: InstanceType<typeof UserCreateNestedOneWithoutChangedStatusesInput>;
}
export declare class OrderStatusCreateInput {
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrder?: InstanceType<typeof PlatformOrderCreateNestedOneWithoutStatusInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderCreateNestedOneWithoutStatusInput>;
    changedBy: InstanceType<typeof UserCreateNestedOneWithoutChangedStatusesInput>;
}
export declare class OrderStatusGroupByArgs {
    where?: InstanceType<typeof OrderStatusWhereInput>;
    orderBy?: Array<OrderStatusOrderByWithAggregationInput>;
    by: Array<keyof typeof OrderStatusScalarFieldEnum>;
    having?: InstanceType<typeof OrderStatusScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OrderStatusCountAggregateInput>;
    _avg?: InstanceType<typeof OrderStatusAvgAggregateInput>;
    _sum?: InstanceType<typeof OrderStatusSumAggregateInput>;
    _min?: InstanceType<typeof OrderStatusMinAggregateInput>;
    _max?: InstanceType<typeof OrderStatusMaxAggregateInput>;
}
export declare class OrderStatusGroupBy {
    id: number;
    createdAt: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
    changedById: string;
    _count?: InstanceType<typeof OrderStatusCountAggregate>;
    _avg?: InstanceType<typeof OrderStatusAvgAggregate>;
    _sum?: InstanceType<typeof OrderStatusSumAggregate>;
    _min?: InstanceType<typeof OrderStatusMinAggregate>;
    _max?: InstanceType<typeof OrderStatusMaxAggregate>;
}
export declare class OrderStatusListRelationFilter {
    every?: InstanceType<typeof OrderStatusWhereInput>;
    some?: InstanceType<typeof OrderStatusWhereInput>;
    none?: InstanceType<typeof OrderStatusWhereInput>;
}
export declare class OrderStatusMaxAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
    platformOrderId?: true;
    ServiceOrderId?: true;
    changedById?: true;
}
export declare class OrderStatusMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    status?: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
    changedById?: string;
}
export declare class OrderStatusMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    ServiceOrderId?: keyof typeof SortOrder;
    changedById?: keyof typeof SortOrder;
}
export declare class OrderStatusMinAggregateInput {
    id?: true;
    createdAt?: true;
    status?: true;
    platformOrderId?: true;
    ServiceOrderId?: true;
    changedById?: true;
}
export declare class OrderStatusMinAggregate {
    id?: number;
    createdAt?: Date | string;
    status?: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
    changedById?: string;
}
export declare class OrderStatusMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    ServiceOrderId?: keyof typeof SortOrder;
    changedById?: keyof typeof SortOrder;
}
export declare class OrderStatusOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class OrderStatusOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    ServiceOrderId?: InstanceType<typeof SortOrderInput>;
    changedById?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OrderStatusCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof OrderStatusAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof OrderStatusMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OrderStatusMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof OrderStatusSumOrderByAggregateInput>;
}
export declare class OrderStatusOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    platformOrderId?: InstanceType<typeof SortOrderInput>;
    ServiceOrderId?: InstanceType<typeof SortOrderInput>;
    changedById?: keyof typeof SortOrder;
    platformOrder?: InstanceType<typeof PlatformOrderOrderByWithRelationInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderOrderByWithRelationInput>;
    changedBy?: InstanceType<typeof UserOrderByWithRelationInput>;
}
export declare class OrderStatusScalarWhereWithAggregatesInput {
    AND?: Array<OrderStatusScalarWhereWithAggregatesInput>;
    OR?: Array<OrderStatusScalarWhereWithAggregatesInput>;
    NOT?: Array<OrderStatusScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    status?: InstanceType<typeof EnumOrderStatusEnumWithAggregatesFilter>;
    platformOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    ServiceOrderId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    changedById?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class OrderStatusScalarWhereInput {
    AND?: Array<OrderStatusScalarWhereInput>;
    OR?: Array<OrderStatusScalarWhereInput>;
    NOT?: Array<OrderStatusScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumOrderStatusEnumFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    ServiceOrderId?: InstanceType<typeof IntNullableFilter>;
    changedById?: InstanceType<typeof StringFilter>;
}
export declare class OrderStatusSumAggregateInput {
    id?: true;
    platformOrderId?: true;
    ServiceOrderId?: true;
}
export declare class OrderStatusSumAggregate {
    id?: number;
    platformOrderId?: number;
    ServiceOrderId?: number;
}
export declare class OrderStatusSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformOrderId?: keyof typeof SortOrder;
    ServiceOrderId?: keyof typeof SortOrder;
}
export declare class OrderStatusUncheckedCreateNestedManyWithoutChangedByInput {
    create?: Array<OrderStatusCreateWithoutChangedByInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutChangedByInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyChangedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput {
    create?: Array<OrderStatusCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyPlatformOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput {
    create?: Array<OrderStatusCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyServiceOrderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
}
export declare class OrderStatusUncheckedCreateWithoutChangedByInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
}
export declare class OrderStatusUncheckedCreateWithoutPlatformOrderInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    ServiceOrderId?: number;
    changedById: string;
}
export declare class OrderStatusUncheckedCreateWithoutServiceOrderInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    changedById: string;
}
export declare class OrderStatusUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    status: keyof typeof OrderStatusEnum;
    platformOrderId?: number;
    ServiceOrderId?: number;
    changedById: string;
}
export declare class OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput {
    create?: Array<OrderStatusCreateWithoutChangedByInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutChangedByInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutChangedByInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyChangedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutChangedByInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutChangedByInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUncheckedUpdateManyWithoutChangedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<OrderStatusCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUncheckedUpdateManyWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<OrderStatusCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUncheckedUpdateManyWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateWithoutChangedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateWithoutPlatformOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateWithoutServiceOrderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    ServiceOrderId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    changedById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OrderStatusUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
}
export declare class OrderStatusUpdateManyWithWhereWithoutChangedByInput {
    where: InstanceType<typeof OrderStatusScalarWhereInput>;
    data: InstanceType<typeof OrderStatusUpdateManyMutationInput>;
}
export declare class OrderStatusUpdateManyWithWhereWithoutPlatformOrderInput {
    where: InstanceType<typeof OrderStatusScalarWhereInput>;
    data: InstanceType<typeof OrderStatusUpdateManyMutationInput>;
}
export declare class OrderStatusUpdateManyWithWhereWithoutServiceOrderInput {
    where: InstanceType<typeof OrderStatusScalarWhereInput>;
    data: InstanceType<typeof OrderStatusUpdateManyMutationInput>;
}
export declare class OrderStatusUpdateManyWithoutChangedByNestedInput {
    create?: Array<OrderStatusCreateWithoutChangedByInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutChangedByInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutChangedByInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyChangedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutChangedByInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutChangedByInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUpdateManyWithoutPlatformOrderNestedInput {
    create?: Array<OrderStatusCreateWithoutPlatformOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutPlatformOrderInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutPlatformOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyPlatformOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutPlatformOrderInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutPlatformOrderInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUpdateManyWithoutServiceOrderNestedInput {
    create?: Array<OrderStatusCreateWithoutServiceOrderInput>;
    connectOrCreate?: Array<OrderStatusCreateOrConnectWithoutServiceOrderInput>;
    upsert?: Array<OrderStatusUpsertWithWhereUniqueWithoutServiceOrderInput>;
    createMany?: InstanceType<typeof OrderStatusCreateManyServiceOrderInputEnvelope>;
    set?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>>;
    update?: Array<OrderStatusUpdateWithWhereUniqueWithoutServiceOrderInput>;
    updateMany?: Array<OrderStatusUpdateManyWithWhereWithoutServiceOrderInput>;
    deleteMany?: Array<OrderStatusScalarWhereInput>;
}
export declare class OrderStatusUpdateWithWhereUniqueWithoutChangedByInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OrderStatusUpdateWithoutChangedByInput>;
}
export declare class OrderStatusUpdateWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OrderStatusUpdateWithoutPlatformOrderInput>;
}
export declare class OrderStatusUpdateWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OrderStatusUpdateWithoutServiceOrderInput>;
}
export declare class OrderStatusUpdateWithoutChangedByInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutStatusNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutStatusNestedInput>;
}
export declare class OrderStatusUpdateWithoutPlatformOrderInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutStatusNestedInput>;
    changedBy?: InstanceType<typeof UserUpdateOneRequiredWithoutChangedStatusesNestedInput>;
}
export declare class OrderStatusUpdateWithoutServiceOrderInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutStatusNestedInput>;
    changedBy?: InstanceType<typeof UserUpdateOneRequiredWithoutChangedStatusesNestedInput>;
}
export declare class OrderStatusUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumOrderStatusEnumFieldUpdateOperationsInput>;
    platformOrder?: InstanceType<typeof PlatformOrderUpdateOneWithoutStatusNestedInput>;
    ServiceOrder?: InstanceType<typeof ServiceOrderUpdateOneWithoutStatusNestedInput>;
    changedBy?: InstanceType<typeof UserUpdateOneRequiredWithoutChangedStatusesNestedInput>;
}
export declare class OrderStatusUpsertWithWhereUniqueWithoutChangedByInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OrderStatusUpdateWithoutChangedByInput>;
    create: InstanceType<typeof OrderStatusCreateWithoutChangedByInput>;
}
export declare class OrderStatusUpsertWithWhereUniqueWithoutPlatformOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OrderStatusUpdateWithoutPlatformOrderInput>;
    create: InstanceType<typeof OrderStatusCreateWithoutPlatformOrderInput>;
}
export declare class OrderStatusUpsertWithWhereUniqueWithoutServiceOrderInput {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OrderStatusUpdateWithoutServiceOrderInput>;
    create: InstanceType<typeof OrderStatusCreateWithoutServiceOrderInput>;
}
export declare class OrderStatusWhereUniqueInput {
    id?: number;
    AND?: Array<OrderStatusWhereInput>;
    OR?: Array<OrderStatusWhereInput>;
    NOT?: Array<OrderStatusWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumOrderStatusEnumFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    ServiceOrderId?: InstanceType<typeof IntNullableFilter>;
    changedById?: InstanceType<typeof StringFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    ServiceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    changedBy?: InstanceType<typeof UserRelationFilter>;
}
export declare class OrderStatusWhereInput {
    AND?: Array<OrderStatusWhereInput>;
    OR?: Array<OrderStatusWhereInput>;
    NOT?: Array<OrderStatusWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    status?: InstanceType<typeof EnumOrderStatusEnumFilter>;
    platformOrderId?: InstanceType<typeof IntNullableFilter>;
    ServiceOrderId?: InstanceType<typeof IntNullableFilter>;
    changedById?: InstanceType<typeof StringFilter>;
    platformOrder?: InstanceType<typeof PlatformOrderNullableRelationFilter>;
    ServiceOrder?: InstanceType<typeof ServiceOrderNullableRelationFilter>;
    changedBy?: InstanceType<typeof UserRelationFilter>;
}
export declare class OrderStatus {
    id: number;
    createdAt: Date;
    status: keyof typeof OrderStatusEnum;
    platformOrderId: number | null;
    ServiceOrderId: number | null;
    changedById: string;
    platformOrder?: InstanceType<typeof PlatformOrder> | null;
    ServiceOrder?: InstanceType<typeof ServiceOrder> | null;
    changedBy?: InstanceType<typeof User>;
}
export declare class UpdateManyOrderStatusArgs {
    data: InstanceType<typeof OrderStatusUpdateManyMutationInput>;
    where?: InstanceType<typeof OrderStatusWhereInput>;
}
export declare class UpdateOneOrderStatusArgs {
    data: InstanceType<typeof OrderStatusUpdateInput>;
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
}
export declare class UpsertOneOrderStatusArgs {
    where: Prisma.AtLeast<OrderStatusWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OrderStatusCreateInput>;
    update: InstanceType<typeof OrderStatusUpdateInput>;
}
export declare class AggregateOutlet {
    _count?: InstanceType<typeof OutletCountAggregate>;
    _avg?: InstanceType<typeof OutletAvgAggregate>;
    _sum?: InstanceType<typeof OutletSumAggregate>;
    _min?: InstanceType<typeof OutletMinAggregate>;
    _max?: InstanceType<typeof OutletMaxAggregate>;
}
export declare class CreateManyOutletArgs {
    data: Array<OutletCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOutletArgs {
    data: InstanceType<typeof OutletCreateInput>;
}
export declare class DeleteManyOutletArgs {
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class DeleteOneOutletArgs {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class FindFirstOutletOrThrowArgs {
    where?: InstanceType<typeof OutletWhereInput>;
    orderBy?: Array<OutletOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletScalarFieldEnum>;
}
export declare class FindFirstOutletArgs {
    where?: InstanceType<typeof OutletWhereInput>;
    orderBy?: Array<OutletOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletScalarFieldEnum>;
}
export declare class FindManyOutletArgs {
    where?: InstanceType<typeof OutletWhereInput>;
    orderBy?: Array<OutletOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletScalarFieldEnum>;
}
export declare class FindUniqueOutletOrThrowArgs {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class FindUniqueOutletArgs {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletAggregateArgs {
    where?: InstanceType<typeof OutletWhereInput>;
    orderBy?: Array<OutletOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletCountAggregateInput>;
    _avg?: InstanceType<typeof OutletAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletSumAggregateInput>;
    _min?: InstanceType<typeof OutletMinAggregateInput>;
    _max?: InstanceType<typeof OutletMaxAggregateInput>;
}
export declare class OutletAvgAggregateInput {
    id?: true;
    addressId?: true;
    settingId?: true;
}
export declare class OutletAvgAggregate {
    id?: number;
    addressId?: number;
    settingId?: number;
}
export declare class OutletAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class OutletCountAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    description?: true;
    phone?: true;
    email?: true;
    createdAt?: true;
    updatedAt?: true;
    ownerId?: true;
    addressId?: true;
    settingId?: true;
    _all?: true;
}
export declare class OutletCountAggregate {
    id: number;
    name: number;
    isActive: number;
    description: number;
    phone: number;
    email: number;
    createdAt: number;
    updatedAt: number;
    ownerId: number;
    addressId: number;
    settingId: number;
    _all: number;
}
export declare class OutletCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    phone?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class OutletCount {
    image?: number;
    orders?: number;
    bussinessHours?: number;
    employees?: number;
    reviews?: number;
    schedules?: number;
    services?: number;
    customers?: number;
    machines?: number;
    edcMachines?: number;
    printerMachines?: number;
    outletVouchers?: number;
}
export declare class OutletCreateManyOwnerInputEnvelope {
    data: Array<OutletCreateManyOwnerInput>;
    skipDuplicates?: boolean;
}
export declare class OutletCreateManyOwnerInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    addressId: number;
    settingId: number;
}
export declare class OutletCreateManyInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
}
export declare class OutletCreateNestedManyWithoutBussinessHoursInput {
    create?: Array<OutletCreateWithoutBussinessHoursInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutBussinessHoursInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletCreateNestedManyWithoutCustomersInput {
    create?: Array<OutletCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutCustomersInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletCreateNestedManyWithoutImageInput {
    create?: Array<OutletCreateWithoutImageInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutImageInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletCreateNestedManyWithoutOwnerInput {
    create?: Array<OutletCreateWithoutOwnerInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutOwnerInput>;
    createMany?: InstanceType<typeof OutletCreateManyOwnerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletCreateNestedOneWithoutAddressInput {
    create?: InstanceType<typeof OutletCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutAddressInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutEdcMachinesInput {
    create?: InstanceType<typeof OutletCreateWithoutEdcMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutEdcMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutEmployeesInput {
    create?: InstanceType<typeof OutletCreateWithoutEmployeesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutEmployeesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutMachinesInput {
    create?: InstanceType<typeof OutletCreateWithoutMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutOrdersInput {
    create?: InstanceType<typeof OutletCreateWithoutOrdersInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutOrdersInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutOutletVouchersInput {
    create?: InstanceType<typeof OutletCreateWithoutOutletVouchersInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutOutletVouchersInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutPrinterMachinesInput {
    create?: InstanceType<typeof OutletCreateWithoutPrinterMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutPrinterMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutReviewsInput {
    create?: InstanceType<typeof OutletCreateWithoutReviewsInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutReviewsInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutSchedulesInput {
    create?: InstanceType<typeof OutletCreateWithoutSchedulesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSchedulesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutServicesInput {
    create?: InstanceType<typeof OutletCreateWithoutServicesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutServicesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateNestedOneWithoutSettingInput {
    create?: InstanceType<typeof OutletCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSettingInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletCreateOrConnectWithoutAddressInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutAddressInput>;
}
export declare class OutletCreateOrConnectWithoutBussinessHoursInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutBussinessHoursInput>;
}
export declare class OutletCreateOrConnectWithoutCustomersInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutCustomersInput>;
}
export declare class OutletCreateOrConnectWithoutEdcMachinesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutEdcMachinesInput>;
}
export declare class OutletCreateOrConnectWithoutEmployeesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutEmployeesInput>;
}
export declare class OutletCreateOrConnectWithoutImageInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutImageInput>;
}
export declare class OutletCreateOrConnectWithoutMachinesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutMachinesInput>;
}
export declare class OutletCreateOrConnectWithoutOrdersInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutOrdersInput>;
}
export declare class OutletCreateOrConnectWithoutOutletVouchersInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutOutletVouchersInput>;
}
export declare class OutletCreateOrConnectWithoutOwnerInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutOwnerInput>;
}
export declare class OutletCreateOrConnectWithoutPrinterMachinesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutPrinterMachinesInput>;
}
export declare class OutletCreateOrConnectWithoutReviewsInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutReviewsInput>;
}
export declare class OutletCreateOrConnectWithoutSchedulesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutSchedulesInput>;
}
export declare class OutletCreateOrConnectWithoutServicesInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutServicesInput>;
}
export declare class OutletCreateOrConnectWithoutSettingInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateWithoutSettingInput>;
}
export declare class OutletCreateWithoutAddressInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutBussinessHoursInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutCustomersInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutEdcMachinesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutEmployeesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutImageInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutMachinesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutOrdersInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutOutletVouchersInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutOwnerInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutPrinterMachinesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutReviewsInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutSchedulesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutServicesInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateWithoutSettingInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletCreateInput {
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    owner: InstanceType<typeof OwnerCreateNestedOneWithoutOutletesInput>;
    address: InstanceType<typeof AddressCreateNestedOneWithoutOutletInput>;
    setting: InstanceType<typeof OutletSettingCreateNestedOneWithoutOutletInput>;
    image?: InstanceType<typeof ImageCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutOutletInput>;
}
export declare class OutletGroupByArgs {
    where?: InstanceType<typeof OutletWhereInput>;
    orderBy?: Array<OutletOrderByWithAggregationInput>;
    by: Array<keyof typeof OutletScalarFieldEnum>;
    having?: InstanceType<typeof OutletScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletCountAggregateInput>;
    _avg?: InstanceType<typeof OutletAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletSumAggregateInput>;
    _min?: InstanceType<typeof OutletMinAggregateInput>;
    _max?: InstanceType<typeof OutletMaxAggregateInput>;
}
export declare class OutletGroupBy {
    id: number;
    name: string;
    isActive: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    _count?: InstanceType<typeof OutletCountAggregate>;
    _avg?: InstanceType<typeof OutletAvgAggregate>;
    _sum?: InstanceType<typeof OutletSumAggregate>;
    _min?: InstanceType<typeof OutletMinAggregate>;
    _max?: InstanceType<typeof OutletMaxAggregate>;
}
export declare class OutletListRelationFilter {
    every?: InstanceType<typeof OutletWhereInput>;
    some?: InstanceType<typeof OutletWhereInput>;
    none?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletMaxAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    description?: true;
    phone?: true;
    email?: true;
    createdAt?: true;
    updatedAt?: true;
    ownerId?: true;
    addressId?: true;
    settingId?: true;
}
export declare class OutletMaxAggregate {
    id?: number;
    name?: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    ownerId?: string;
    addressId?: number;
    settingId?: number;
}
export declare class OutletMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    phone?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class OutletMinAggregateInput {
    id?: true;
    name?: true;
    isActive?: true;
    description?: true;
    phone?: true;
    email?: true;
    createdAt?: true;
    updatedAt?: true;
    ownerId?: true;
    addressId?: true;
    settingId?: true;
}
export declare class OutletMinAggregate {
    id?: number;
    name?: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    ownerId?: string;
    addressId?: number;
    settingId?: number;
}
export declare class OutletMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    phone?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class OutletNullableRelationFilter {
    is?: InstanceType<typeof OutletWhereInput>;
    isNot?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class OutletOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    phone?: InstanceType<typeof SortOrderInput>;
    email?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OutletCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof OutletAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof OutletMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OutletMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof OutletSumOrderByAggregateInput>;
}
export declare class OutletOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    phone?: InstanceType<typeof SortOrderInput>;
    email?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    ownerId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
    owner?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    address?: InstanceType<typeof AddressOrderByWithRelationInput>;
    setting?: InstanceType<typeof OutletSettingOrderByWithRelationInput>;
    image?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
    orders?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
    bussinessHours?: InstanceType<typeof BusinessHourOrderByRelationAggregateInput>;
    employees?: InstanceType<typeof EmployeeOrderByRelationAggregateInput>;
    reviews?: InstanceType<typeof ReviewOrderByRelationAggregateInput>;
    schedules?: InstanceType<typeof ScheduleOrderByRelationAggregateInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceOrderByRelationAggregateInput>;
    customers?: InstanceType<typeof CustomerOrderByRelationAggregateInput>;
    machines?: InstanceType<typeof MachineOrderByRelationAggregateInput>;
    edcMachines?: InstanceType<typeof EdcMachineOrderByRelationAggregateInput>;
    printerMachines?: InstanceType<typeof PrinterMachineOrderByRelationAggregateInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherOrderByRelationAggregateInput>;
}
export declare class OutletRelationFilter {
    is?: InstanceType<typeof OutletWhereInput>;
    isNot?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletScalarWhereWithAggregatesInput {
    AND?: Array<OutletScalarWhereWithAggregatesInput>;
    OR?: Array<OutletScalarWhereWithAggregatesInput>;
    NOT?: Array<OutletScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    isActive?: InstanceType<typeof BoolWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    phone?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    email?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    ownerId?: InstanceType<typeof StringWithAggregatesFilter>;
    addressId?: InstanceType<typeof IntWithAggregatesFilter>;
    settingId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class OutletScalarWhereInput {
    AND?: Array<OutletScalarWhereInput>;
    OR?: Array<OutletScalarWhereInput>;
    NOT?: Array<OutletScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    phone?: InstanceType<typeof StringNullableFilter>;
    email?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    ownerId?: InstanceType<typeof StringFilter>;
    addressId?: InstanceType<typeof IntFilter>;
    settingId?: InstanceType<typeof IntFilter>;
}
export declare class OutletSumAggregateInput {
    id?: true;
    addressId?: true;
    settingId?: true;
}
export declare class OutletSumAggregate {
    id?: number;
    addressId?: number;
    settingId?: number;
}
export declare class OutletSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    settingId?: keyof typeof SortOrder;
}
export declare class OutletUncheckedCreateNestedManyWithoutBussinessHoursInput {
    create?: Array<OutletCreateWithoutBussinessHoursInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutBussinessHoursInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletUncheckedCreateNestedManyWithoutCustomersInput {
    create?: Array<OutletCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutCustomersInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletUncheckedCreateNestedManyWithoutImageInput {
    create?: Array<OutletCreateWithoutImageInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutImageInput>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletUncheckedCreateNestedManyWithoutOwnerInput {
    create?: Array<OutletCreateWithoutOwnerInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutOwnerInput>;
    createMany?: InstanceType<typeof OutletCreateManyOwnerInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
}
export declare class OutletUncheckedCreateNestedOneWithoutAddressInput {
    create?: InstanceType<typeof OutletCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutAddressInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletUncheckedCreateNestedOneWithoutSettingInput {
    create?: InstanceType<typeof OutletCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSettingInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class OutletUncheckedCreateWithoutAddressInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutBussinessHoursInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutCustomersInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutEdcMachinesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutEmployeesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutImageInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutMachinesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutOrdersInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutOutletVouchersInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutOwnerInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutPrinterMachinesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutReviewsInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutSchedulesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutServicesInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateWithoutSettingInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedCreateInput {
    id?: number;
    name: string;
    isActive?: boolean;
    description?: string;
    phone?: string;
    email?: string;
    createdAt?: Date | string;
    updatedAt: Date | string;
    ownerId: string;
    addressId: number;
    settingId: number;
    image?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletesInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutOutletInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedCreateNestedManyWithoutOutletInput>;
    employees?: InstanceType<typeof EmployeeUncheckedCreateNestedManyWithoutOutletInput>;
    reviews?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutOutletInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutOutletInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput>;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutFavoriteOutletesInput>;
    machines?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutOutletInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedCreateNestedManyWithoutOutletInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedCreateNestedManyWithoutOutletInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutOutletInput>;
}
export declare class OutletUncheckedUpdateManyWithoutBussinessHoursNestedInput {
    create?: Array<OutletCreateWithoutBussinessHoursInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutBussinessHoursInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutBussinessHoursInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutBussinessHoursInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutBussinessHoursInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUncheckedUpdateManyWithoutBussinessHoursInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletUncheckedUpdateManyWithoutCustomersNestedInput {
    create?: Array<OutletCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutCustomersInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutCustomersInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutCustomersInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutCustomersInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUncheckedUpdateManyWithoutCustomersInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletUncheckedUpdateManyWithoutImageNestedInput {
    create?: Array<OutletCreateWithoutImageInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutImageInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutImageInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUncheckedUpdateManyWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletUncheckedUpdateManyWithoutOwnerNestedInput {
    create?: Array<OutletCreateWithoutOwnerInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutOwnerInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutOwnerInput>;
    createMany?: InstanceType<typeof OutletCreateManyOwnerInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutOwnerInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutOwnerInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUncheckedUpdateManyWithoutOwnerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletUncheckedUpdateOneWithoutAddressNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutAddressInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutAddressInput>;
    disconnect?: InstanceType<typeof OutletWhereInput>;
    delete?: InstanceType<typeof OutletWhereInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutAddressInput>;
}
export declare class OutletUncheckedUpdateOneWithoutSettingNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSettingInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutSettingInput>;
    disconnect?: InstanceType<typeof OutletWhereInput>;
    delete?: InstanceType<typeof OutletWhereInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutSettingInput>;
}
export declare class OutletUncheckedUpdateWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutBussinessHoursInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutCustomersInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutEdcMachinesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutEmployeesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutMachinesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutOrdersInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutOutletVouchersInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutOwnerInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutPrinterMachinesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutReviewsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutSchedulesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutServicesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateWithoutSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    ownerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    settingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    image?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUncheckedUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUncheckedUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUncheckedUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class OutletUpdateManyWithWhereWithoutBussinessHoursInput {
    where: InstanceType<typeof OutletScalarWhereInput>;
    data: InstanceType<typeof OutletUpdateManyMutationInput>;
}
export declare class OutletUpdateManyWithWhereWithoutCustomersInput {
    where: InstanceType<typeof OutletScalarWhereInput>;
    data: InstanceType<typeof OutletUpdateManyMutationInput>;
}
export declare class OutletUpdateManyWithWhereWithoutImageInput {
    where: InstanceType<typeof OutletScalarWhereInput>;
    data: InstanceType<typeof OutletUpdateManyMutationInput>;
}
export declare class OutletUpdateManyWithWhereWithoutOwnerInput {
    where: InstanceType<typeof OutletScalarWhereInput>;
    data: InstanceType<typeof OutletUpdateManyMutationInput>;
}
export declare class OutletUpdateManyWithoutBussinessHoursNestedInput {
    create?: Array<OutletCreateWithoutBussinessHoursInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutBussinessHoursInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutBussinessHoursInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutBussinessHoursInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutBussinessHoursInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUpdateManyWithoutCustomersNestedInput {
    create?: Array<OutletCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutCustomersInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutCustomersInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutCustomersInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutCustomersInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUpdateManyWithoutImageNestedInput {
    create?: Array<OutletCreateWithoutImageInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutImageInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutImageInput>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUpdateManyWithoutOwnerNestedInput {
    create?: Array<OutletCreateWithoutOwnerInput>;
    connectOrCreate?: Array<OutletCreateOrConnectWithoutOwnerInput>;
    upsert?: Array<OutletUpsertWithWhereUniqueWithoutOwnerInput>;
    createMany?: InstanceType<typeof OutletCreateManyOwnerInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    delete?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    connect?: Array<Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>>;
    update?: Array<OutletUpdateWithWhereUniqueWithoutOwnerInput>;
    updateMany?: Array<OutletUpdateManyWithWhereWithoutOwnerInput>;
    deleteMany?: Array<OutletScalarWhereInput>;
}
export declare class OutletUpdateOneRequiredWithoutEdcMachinesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutEdcMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutEdcMachinesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutEdcMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutEdcMachinesInput>;
}
export declare class OutletUpdateOneRequiredWithoutEmployeesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutEmployeesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutEmployeesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutEmployeesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutEmployeesInput>;
}
export declare class OutletUpdateOneRequiredWithoutMachinesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutMachinesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutMachinesInput>;
}
export declare class OutletUpdateOneRequiredWithoutOrdersNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutOrdersInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutOrdersInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutOrdersInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutOrdersInput>;
}
export declare class OutletUpdateOneRequiredWithoutOutletVouchersNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutOutletVouchersInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutOutletVouchersInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutOutletVouchersInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutOutletVouchersInput>;
}
export declare class OutletUpdateOneRequiredWithoutPrinterMachinesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutPrinterMachinesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutPrinterMachinesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutPrinterMachinesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutPrinterMachinesInput>;
}
export declare class OutletUpdateOneRequiredWithoutReviewsNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutReviewsInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutReviewsInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutReviewsInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutReviewsInput>;
}
export declare class OutletUpdateOneRequiredWithoutSchedulesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutSchedulesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSchedulesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutSchedulesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutSchedulesInput>;
}
export declare class OutletUpdateOneRequiredWithoutServicesNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutServicesInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutServicesInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutServicesInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutServicesInput>;
}
export declare class OutletUpdateOneWithoutAddressNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutAddressInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutAddressInput>;
    disconnect?: InstanceType<typeof OutletWhereInput>;
    delete?: InstanceType<typeof OutletWhereInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutAddressInput>;
}
export declare class OutletUpdateOneWithoutSettingNestedInput {
    create?: InstanceType<typeof OutletCreateWithoutSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletCreateOrConnectWithoutSettingInput>;
    upsert?: InstanceType<typeof OutletUpsertWithoutSettingInput>;
    disconnect?: InstanceType<typeof OutletWhereInput>;
    delete?: InstanceType<typeof OutletWhereInput>;
    connect?: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update?: InstanceType<typeof OutletUpdateToOneWithWhereWithoutSettingInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutAddressInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutAddressInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutEdcMachinesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutEdcMachinesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutEmployeesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutEmployeesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutMachinesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutMachinesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutOrdersInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutOrdersInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutOutletVouchersInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutOutletVouchersInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutPrinterMachinesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutPrinterMachinesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutReviewsInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutReviewsInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutSchedulesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutSchedulesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutServicesInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutServicesInput>;
}
export declare class OutletUpdateToOneWithWhereWithoutSettingInput {
    where?: InstanceType<typeof OutletWhereInput>;
    data: InstanceType<typeof OutletUpdateWithoutSettingInput>;
}
export declare class OutletUpdateWithWhereUniqueWithoutBussinessHoursInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    data: InstanceType<typeof OutletUpdateWithoutBussinessHoursInput>;
}
export declare class OutletUpdateWithWhereUniqueWithoutCustomersInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    data: InstanceType<typeof OutletUpdateWithoutCustomersInput>;
}
export declare class OutletUpdateWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    data: InstanceType<typeof OutletUpdateWithoutImageInput>;
}
export declare class OutletUpdateWithWhereUniqueWithoutOwnerInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    data: InstanceType<typeof OutletUpdateWithoutOwnerInput>;
}
export declare class OutletUpdateWithoutAddressInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutBussinessHoursInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutCustomersInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutEdcMachinesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutEmployeesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutImageInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutMachinesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutOrdersInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutOutletVouchersInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutOwnerInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutPrinterMachinesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutReviewsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutSchedulesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutServicesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateWithoutSettingInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    phone?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    owner?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOutletesNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutOutletNestedInput>;
    setting?: InstanceType<typeof OutletSettingUpdateOneRequiredWithoutOutletNestedInput>;
    image?: InstanceType<typeof ImageUpdateManyWithoutOutletesNestedInput>;
    orders?: InstanceType<typeof ServiceOrderUpdateManyWithoutOutletNestedInput>;
    bussinessHours?: InstanceType<typeof BusinessHourUpdateManyWithoutOutletNestedInput>;
    employees?: InstanceType<typeof EmployeeUpdateManyWithoutOutletNestedInput>;
    reviews?: InstanceType<typeof ReviewUpdateManyWithoutOutletNestedInput>;
    schedules?: InstanceType<typeof ScheduleUpdateManyWithoutOutletNestedInput>;
    services?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutFavoriteOutletesNestedInput>;
    machines?: InstanceType<typeof MachineUpdateManyWithoutOutletNestedInput>;
    edcMachines?: InstanceType<typeof EdcMachineUpdateManyWithoutOutletNestedInput>;
    printerMachines?: InstanceType<typeof PrinterMachineUpdateManyWithoutOutletNestedInput>;
    outletVouchers?: InstanceType<typeof OutletVoucherUpdateManyWithoutOutletNestedInput>;
}
export declare class OutletUpsertWithWhereUniqueWithoutBussinessHoursInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update: InstanceType<typeof OutletUpdateWithoutBussinessHoursInput>;
    create: InstanceType<typeof OutletCreateWithoutBussinessHoursInput>;
}
export declare class OutletUpsertWithWhereUniqueWithoutCustomersInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update: InstanceType<typeof OutletUpdateWithoutCustomersInput>;
    create: InstanceType<typeof OutletCreateWithoutCustomersInput>;
}
export declare class OutletUpsertWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update: InstanceType<typeof OutletUpdateWithoutImageInput>;
    create: InstanceType<typeof OutletCreateWithoutImageInput>;
}
export declare class OutletUpsertWithWhereUniqueWithoutOwnerInput {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    update: InstanceType<typeof OutletUpdateWithoutOwnerInput>;
    create: InstanceType<typeof OutletCreateWithoutOwnerInput>;
}
export declare class OutletUpsertWithoutAddressInput {
    update: InstanceType<typeof OutletUpdateWithoutAddressInput>;
    create: InstanceType<typeof OutletCreateWithoutAddressInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutEdcMachinesInput {
    update: InstanceType<typeof OutletUpdateWithoutEdcMachinesInput>;
    create: InstanceType<typeof OutletCreateWithoutEdcMachinesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutEmployeesInput {
    update: InstanceType<typeof OutletUpdateWithoutEmployeesInput>;
    create: InstanceType<typeof OutletCreateWithoutEmployeesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutMachinesInput {
    update: InstanceType<typeof OutletUpdateWithoutMachinesInput>;
    create: InstanceType<typeof OutletCreateWithoutMachinesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutOrdersInput {
    update: InstanceType<typeof OutletUpdateWithoutOrdersInput>;
    create: InstanceType<typeof OutletCreateWithoutOrdersInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutOutletVouchersInput {
    update: InstanceType<typeof OutletUpdateWithoutOutletVouchersInput>;
    create: InstanceType<typeof OutletCreateWithoutOutletVouchersInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutPrinterMachinesInput {
    update: InstanceType<typeof OutletUpdateWithoutPrinterMachinesInput>;
    create: InstanceType<typeof OutletCreateWithoutPrinterMachinesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutReviewsInput {
    update: InstanceType<typeof OutletUpdateWithoutReviewsInput>;
    create: InstanceType<typeof OutletCreateWithoutReviewsInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutSchedulesInput {
    update: InstanceType<typeof OutletUpdateWithoutSchedulesInput>;
    create: InstanceType<typeof OutletCreateWithoutSchedulesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutServicesInput {
    update: InstanceType<typeof OutletUpdateWithoutServicesInput>;
    create: InstanceType<typeof OutletCreateWithoutServicesInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletUpsertWithoutSettingInput {
    update: InstanceType<typeof OutletUpdateWithoutSettingInput>;
    create: InstanceType<typeof OutletCreateWithoutSettingInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class OutletWhereUniqueInput {
    id?: number;
    addressId?: number;
    settingId?: number;
    AND?: Array<OutletWhereInput>;
    OR?: Array<OutletWhereInput>;
    NOT?: Array<OutletWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    phone?: InstanceType<typeof StringNullableFilter>;
    email?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    ownerId?: InstanceType<typeof StringFilter>;
    owner?: InstanceType<typeof OwnerRelationFilter>;
    address?: InstanceType<typeof AddressRelationFilter>;
    setting?: InstanceType<typeof OutletSettingRelationFilter>;
    image?: InstanceType<typeof ImageListRelationFilter>;
    orders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    bussinessHours?: InstanceType<typeof BusinessHourListRelationFilter>;
    employees?: InstanceType<typeof EmployeeListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    schedules?: InstanceType<typeof ScheduleListRelationFilter>;
    services?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    customers?: InstanceType<typeof CustomerListRelationFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
    edcMachines?: InstanceType<typeof EdcMachineListRelationFilter>;
    printerMachines?: InstanceType<typeof PrinterMachineListRelationFilter>;
    outletVouchers?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class OutletWhereInput {
    AND?: Array<OutletWhereInput>;
    OR?: Array<OutletWhereInput>;
    NOT?: Array<OutletWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    phone?: InstanceType<typeof StringNullableFilter>;
    email?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    ownerId?: InstanceType<typeof StringFilter>;
    addressId?: InstanceType<typeof IntFilter>;
    settingId?: InstanceType<typeof IntFilter>;
    owner?: InstanceType<typeof OwnerRelationFilter>;
    address?: InstanceType<typeof AddressRelationFilter>;
    setting?: InstanceType<typeof OutletSettingRelationFilter>;
    image?: InstanceType<typeof ImageListRelationFilter>;
    orders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    bussinessHours?: InstanceType<typeof BusinessHourListRelationFilter>;
    employees?: InstanceType<typeof EmployeeListRelationFilter>;
    reviews?: InstanceType<typeof ReviewListRelationFilter>;
    schedules?: InstanceType<typeof ScheduleListRelationFilter>;
    services?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    customers?: InstanceType<typeof CustomerListRelationFilter>;
    machines?: InstanceType<typeof MachineListRelationFilter>;
    edcMachines?: InstanceType<typeof EdcMachineListRelationFilter>;
    printerMachines?: InstanceType<typeof PrinterMachineListRelationFilter>;
    outletVouchers?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class Outlet {
    id: number;
    name: string;
    isActive: boolean;
    description: string | null;
    phone: string | null;
    email: string | null;
    createdAt: Date;
    updatedAt: Date;
    ownerId: string;
    addressId: number;
    settingId: number;
    owner?: InstanceType<typeof Owner>;
    address?: InstanceType<typeof Address>;
    setting?: InstanceType<typeof OutletSetting>;
    image?: Array<Image>;
    orders?: Array<ServiceOrder>;
    bussinessHours?: Array<BusinessHour>;
    employees?: Array<Employee>;
    reviews?: Array<Review>;
    schedules?: Array<Schedule>;
    services?: Array<OutletLaundryItemService>;
    customers?: Array<Customer>;
    machines?: Array<Machine>;
    edcMachines?: Array<EdcMachine>;
    printerMachines?: Array<PrinterMachine>;
    outletVouchers?: Array<OutletVoucher>;
    _count?: InstanceType<typeof OutletCount>;
}
export declare class UpdateManyOutletArgs {
    data: InstanceType<typeof OutletUpdateManyMutationInput>;
    where?: InstanceType<typeof OutletWhereInput>;
}
export declare class UpdateOneOutletArgs {
    data: InstanceType<typeof OutletUpdateInput>;
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
}
export declare class UpsertOneOutletArgs {
    where: Prisma.AtLeast<OutletWhereUniqueInput, 'id' | 'addressId' | 'settingId'>;
    create: InstanceType<typeof OutletCreateInput>;
    update: InstanceType<typeof OutletUpdateInput>;
}
export declare class AggregateOutletLaundryItemService {
    _count?: InstanceType<typeof OutletLaundryItemServiceCountAggregate>;
    _avg?: InstanceType<typeof OutletLaundryItemServiceAvgAggregate>;
    _sum?: InstanceType<typeof OutletLaundryItemServiceSumAggregate>;
    _min?: InstanceType<typeof OutletLaundryItemServiceMinAggregate>;
    _max?: InstanceType<typeof OutletLaundryItemServiceMaxAggregate>;
}
export declare class CreateManyOutletLaundryItemServiceArgs {
    data: Array<OutletLaundryItemServiceCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOutletLaundryItemServiceArgs {
    data: InstanceType<typeof OutletLaundryItemServiceCreateInput>;
}
export declare class DeleteManyOutletLaundryItemServiceArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
}
export declare class DeleteOneOutletLaundryItemServiceArgs {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
}
export declare class FindFirstOutletLaundryItemServiceOrThrowArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    orderBy?: Array<OutletLaundryItemServiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletLaundryItemServiceScalarFieldEnum>;
}
export declare class FindFirstOutletLaundryItemServiceArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    orderBy?: Array<OutletLaundryItemServiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletLaundryItemServiceScalarFieldEnum>;
}
export declare class FindManyOutletLaundryItemServiceArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    orderBy?: Array<OutletLaundryItemServiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletLaundryItemServiceScalarFieldEnum>;
}
export declare class FindUniqueOutletLaundryItemServiceOrThrowArgs {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
}
export declare class FindUniqueOutletLaundryItemServiceArgs {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
}
export declare class OutletLaundryItemServiceAggregateArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    orderBy?: Array<OutletLaundryItemServiceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletLaundryItemServiceCountAggregateInput>;
    _avg?: InstanceType<typeof OutletLaundryItemServiceAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletLaundryItemServiceSumAggregateInput>;
    _min?: InstanceType<typeof OutletLaundryItemServiceMinAggregateInput>;
    _max?: InstanceType<typeof OutletLaundryItemServiceMaxAggregateInput>;
}
export declare class OutletLaundryItemServiceAvgAggregateInput {
    id?: true;
    durationInMinute?: true;
    maxWeight?: true;
    minWeight?: true;
    cost?: true;
    salePrice?: true;
    outletId?: true;
    laundryItemId?: true;
}
export declare class OutletLaundryItemServiceAvgAggregate {
    id?: number;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice?: number;
    outletId?: number;
    laundryItemId?: number;
}
export declare class OutletLaundryItemServiceAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    durationInMinute?: keyof typeof SortOrder;
    maxWeight?: keyof typeof SortOrder;
    minWeight?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceCountAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    durationInMinute?: true;
    maxWeight?: true;
    minWeight?: true;
    cost?: true;
    salePrice?: true;
    isActive?: true;
    isOnSale?: true;
    createdAt?: true;
    updatedAt?: true;
    outletId?: true;
    laundryItemId?: true;
    activities?: true;
    orderTypes?: true;
    _all?: true;
}
export declare class OutletLaundryItemServiceCountAggregate {
    id: number;
    name: number;
    description: number;
    durationInMinute: number;
    maxWeight: number;
    minWeight: number;
    cost: number;
    salePrice: number;
    isActive: number;
    isOnSale: number;
    createdAt: number;
    updatedAt: number;
    outletId: number;
    laundryItemId: number;
    activities: number;
    orderTypes: number;
    _all: number;
}
export declare class OutletLaundryItemServiceCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    durationInMinute?: keyof typeof SortOrder;
    maxWeight?: keyof typeof SortOrder;
    minWeight?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    isOnSale?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
    orderTypes?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceCount {
    Images?: number;
    cart?: number;
    districtAreas?: number;
    onVoucherSetting?: number;
}
export declare class OutletLaundryItemServiceCreateManyLaundryItemInputEnvelope {
    data: Array<OutletLaundryItemServiceCreateManyLaundryItemInput>;
    skipDuplicates?: boolean;
}
export declare class OutletLaundryItemServiceCreateManyLaundryItemInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
}
export declare class OutletLaundryItemServiceCreateManyOutletInputEnvelope {
    data: Array<OutletLaundryItemServiceCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class OutletLaundryItemServiceCreateManyOutletInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
}
export declare class OutletLaundryItemServiceCreateManyInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
}
export declare class OutletLaundryItemServiceCreateNestedManyWithoutDistrictAreasInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutDistrictAreasInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceCreateNestedManyWithoutImagesInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutImagesInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceCreateNestedManyWithoutLaundryItemInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyLaundryItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOnVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceCreateNestedManyWithoutOutletInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceCreateNestedOneWithoutCartInput {
    create?: InstanceType<typeof OutletLaundryItemServiceCreateWithoutCartInput>;
    connectOrCreate?: InstanceType<typeof OutletLaundryItemServiceCreateOrConnectWithoutCartInput>;
    connect?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutCartInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutCartInput>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutDistrictAreasInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutImagesInput>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutLaundryItemInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
}
export declare class OutletLaundryItemServiceCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutOutletInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutCartInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutDistrictAreasInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutImagesInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutLaundryItemInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
}
export declare class OutletLaundryItemServiceCreateWithoutOutletInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateInput {
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutServicesInput>;
    laundryItem: InstanceType<typeof LaundryItemCreateNestedOneWithoutOutletServicesInput>;
    Images?: InstanceType<typeof ImageCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceCreateactivitiesInput {
    set: Array<keyof typeof ItemActivity>;
}
export declare class OutletLaundryItemServiceCreateorderTypesInput {
    set: Array<keyof typeof OrderType>;
}
export declare class OutletLaundryItemServiceGroupByArgs {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    orderBy?: Array<OutletLaundryItemServiceOrderByWithAggregationInput>;
    by: Array<keyof typeof OutletLaundryItemServiceScalarFieldEnum>;
    having?: InstanceType<typeof OutletLaundryItemServiceScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletLaundryItemServiceCountAggregateInput>;
    _avg?: InstanceType<typeof OutletLaundryItemServiceAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletLaundryItemServiceSumAggregateInput>;
    _min?: InstanceType<typeof OutletLaundryItemServiceMinAggregateInput>;
    _max?: InstanceType<typeof OutletLaundryItemServiceMaxAggregateInput>;
}
export declare class OutletLaundryItemServiceGroupBy {
    id: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive: boolean;
    isOnSale: boolean;
    createdAt: Date | string;
    updatedAt: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: Array<keyof typeof ItemActivity>;
    orderTypes?: Array<keyof typeof OrderType>;
    _count?: InstanceType<typeof OutletLaundryItemServiceCountAggregate>;
    _avg?: InstanceType<typeof OutletLaundryItemServiceAvgAggregate>;
    _sum?: InstanceType<typeof OutletLaundryItemServiceSumAggregate>;
    _min?: InstanceType<typeof OutletLaundryItemServiceMinAggregate>;
    _max?: InstanceType<typeof OutletLaundryItemServiceMaxAggregate>;
}
export declare class OutletLaundryItemServiceListRelationFilter {
    every?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    some?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    none?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
}
export declare class OutletLaundryItemServiceMaxAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    durationInMinute?: true;
    maxWeight?: true;
    minWeight?: true;
    cost?: true;
    salePrice?: true;
    isActive?: true;
    isOnSale?: true;
    createdAt?: true;
    updatedAt?: true;
    outletId?: true;
    laundryItemId?: true;
}
export declare class OutletLaundryItemServiceMaxAggregate {
    id?: number;
    name?: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice?: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId?: number;
    laundryItemId?: number;
}
export declare class OutletLaundryItemServiceMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    durationInMinute?: keyof typeof SortOrder;
    maxWeight?: keyof typeof SortOrder;
    minWeight?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    isOnSale?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceMinAggregateInput {
    id?: true;
    name?: true;
    description?: true;
    durationInMinute?: true;
    maxWeight?: true;
    minWeight?: true;
    cost?: true;
    salePrice?: true;
    isActive?: true;
    isOnSale?: true;
    createdAt?: true;
    updatedAt?: true;
    outletId?: true;
    laundryItemId?: true;
}
export declare class OutletLaundryItemServiceMinAggregate {
    id?: number;
    name?: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice?: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId?: number;
    laundryItemId?: number;
}
export declare class OutletLaundryItemServiceMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    durationInMinute?: keyof typeof SortOrder;
    maxWeight?: keyof typeof SortOrder;
    minWeight?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    isOnSale?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceNullableRelationFilter {
    is?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    isNot?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
}
export declare class OutletLaundryItemServiceOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    durationInMinute?: InstanceType<typeof SortOrderInput>;
    maxWeight?: InstanceType<typeof SortOrderInput>;
    minWeight?: InstanceType<typeof SortOrderInput>;
    cost?: InstanceType<typeof SortOrderInput>;
    salePrice?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    isOnSale?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
    orderTypes?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OutletLaundryItemServiceCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof OutletLaundryItemServiceAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof OutletLaundryItemServiceMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OutletLaundryItemServiceMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof OutletLaundryItemServiceSumOrderByAggregateInput>;
}
export declare class OutletLaundryItemServiceOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    durationInMinute?: InstanceType<typeof SortOrderInput>;
    maxWeight?: InstanceType<typeof SortOrderInput>;
    minWeight?: InstanceType<typeof SortOrderInput>;
    cost?: InstanceType<typeof SortOrderInput>;
    salePrice?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    isOnSale?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
    activities?: keyof typeof SortOrder;
    orderTypes?: keyof typeof SortOrder;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    laundryItem?: InstanceType<typeof LaundryItemOrderByWithRelationInput>;
    Images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
    cart?: InstanceType<typeof CartOrderByRelationAggregateInput>;
    districtAreas?: InstanceType<typeof DistrictOrderByRelationAggregateInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingOrderByRelationAggregateInput>;
}
export declare class OutletLaundryItemServiceScalarWhereWithAggregatesInput {
    AND?: Array<OutletLaundryItemServiceScalarWhereWithAggregatesInput>;
    OR?: Array<OutletLaundryItemServiceScalarWhereWithAggregatesInput>;
    NOT?: Array<OutletLaundryItemServiceScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    durationInMinute?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    maxWeight?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    minWeight?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    cost?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    salePrice?: InstanceType<typeof IntWithAggregatesFilter>;
    isActive?: InstanceType<typeof BoolWithAggregatesFilter>;
    isOnSale?: InstanceType<typeof BoolWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
    laundryItemId?: InstanceType<typeof IntWithAggregatesFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    orderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
}
export declare class OutletLaundryItemServiceScalarWhereInput {
    AND?: Array<OutletLaundryItemServiceScalarWhereInput>;
    OR?: Array<OutletLaundryItemServiceScalarWhereInput>;
    NOT?: Array<OutletLaundryItemServiceScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    durationInMinute?: InstanceType<typeof IntNullableFilter>;
    maxWeight?: InstanceType<typeof FloatNullableFilter>;
    minWeight?: InstanceType<typeof FloatNullableFilter>;
    cost?: InstanceType<typeof IntNullableFilter>;
    salePrice?: InstanceType<typeof IntFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    isOnSale?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    orderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
}
export declare class OutletLaundryItemServiceSumAggregateInput {
    id?: true;
    durationInMinute?: true;
    maxWeight?: true;
    minWeight?: true;
    cost?: true;
    salePrice?: true;
    outletId?: true;
    laundryItemId?: true;
}
export declare class OutletLaundryItemServiceSumAggregate {
    id?: number;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice?: number;
    outletId?: number;
    laundryItemId?: number;
}
export declare class OutletLaundryItemServiceSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    durationInMinute?: keyof typeof SortOrder;
    maxWeight?: keyof typeof SortOrder;
    minWeight?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    laundryItemId?: keyof typeof SortOrder;
}
export declare class OutletLaundryItemServiceUncheckedCreateNestedManyWithoutDistrictAreasInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutDistrictAreasInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceUncheckedCreateNestedManyWithoutImagesInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutImagesInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceUncheckedCreateNestedManyWithoutLaundryItemInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyLaundryItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOnVoucherSettingInput>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutCartInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutDistrictAreasInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutImagesInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutLaundryItemInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutOnVoucherSettingInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateWithoutOutletInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedCreateInput {
    id?: number;
    name: string;
    description?: string;
    durationInMinute?: number;
    maxWeight?: number;
    minWeight?: number;
    cost?: number;
    salePrice: number;
    isActive?: boolean;
    isOnSale?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    laundryItemId: number;
    activities?: InstanceType<typeof OutletLaundryItemServiceCreateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceCreateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutOutletLaundryItemServicesInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutOutletLaundryItemServiceInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnOutletLaundryItemServiceAreaInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutDistrictAreasInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutDistrictAreasInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutDistrictAreasInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutDistrictAreasInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutDistrictAreasInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutImagesInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutImagesInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutLaundryItemInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyLaundryItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutLaundryItemInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutLaundryItemInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutLaundryItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOnVoucherSettingInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOnVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOnVoucherSettingInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutOnVoucherSettingInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOutletInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutCartInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutDistrictAreasInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutLaundryItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutOnVoucherSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    laundryItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    Images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithWhereWithoutDistrictAreasInput {
    where: InstanceType<typeof OutletLaundryItemServiceScalarWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithWhereWithoutImagesInput {
    where: InstanceType<typeof OutletLaundryItemServiceScalarWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithWhereWithoutLaundryItemInput {
    where: InstanceType<typeof OutletLaundryItemServiceScalarWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithWhereWithoutOnVoucherSettingInput {
    where: InstanceType<typeof OutletLaundryItemServiceScalarWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof OutletLaundryItemServiceScalarWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithoutDistrictAreasNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutDistrictAreasInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutDistrictAreasInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutDistrictAreasInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutDistrictAreasInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithoutImagesNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutImagesInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutImagesInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithoutLaundryItemNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutLaundryItemInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutLaundryItemInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyLaundryItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutLaundryItemInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutLaundryItemInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOnVoucherSettingInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOnVoucherSettingInput>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOnVoucherSettingInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutOnVoucherSettingInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUpdateManyWithoutOutletNestedInput {
    create?: Array<OutletLaundryItemServiceCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletLaundryItemServiceCreateOrConnectWithoutOutletInput>;
    upsert?: Array<OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletLaundryItemServiceCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>>;
    update?: Array<OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<OutletLaundryItemServiceUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<OutletLaundryItemServiceScalarWhereInput>;
}
export declare class OutletLaundryItemServiceUpdateOneWithoutCartNestedInput {
    create?: InstanceType<typeof OutletLaundryItemServiceCreateWithoutCartInput>;
    connectOrCreate?: InstanceType<typeof OutletLaundryItemServiceCreateOrConnectWithoutCartInput>;
    upsert?: InstanceType<typeof OutletLaundryItemServiceUpsertWithoutCartInput>;
    disconnect?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    delete?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    connect?: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof OutletLaundryItemServiceUpdateToOneWithWhereWithoutCartInput>;
}
export declare class OutletLaundryItemServiceUpdateToOneWithWhereWithoutCartInput {
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutCartInput>;
}
export declare class OutletLaundryItemServiceUpdateWithWhereUniqueWithoutDistrictAreasInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutDistrictAreasInput>;
}
export declare class OutletLaundryItemServiceUpdateWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutImagesInput>;
}
export declare class OutletLaundryItemServiceUpdateWithWhereUniqueWithoutLaundryItemInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutLaundryItemInput>;
}
export declare class OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutOnVoucherSettingInput>;
}
export declare class OutletLaundryItemServiceUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    data: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutOutletInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutCartInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutDistrictAreasInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutImagesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutLaundryItemInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutOnVoucherSettingInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateWithoutOutletInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    durationInMinute?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    minWeight?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isOnSale?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    activities?: InstanceType<typeof OutletLaundryItemServiceUpdateactivitiesInput>;
    orderTypes?: InstanceType<typeof OutletLaundryItemServiceUpdateorderTypesInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutServicesNestedInput>;
    laundryItem?: InstanceType<typeof LaundryItemUpdateOneRequiredWithoutOutletServicesNestedInput>;
    Images?: InstanceType<typeof ImageUpdateManyWithoutOutletLaundryItemServicesNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutOutletLaundryItemServiceNestedInput>;
    districtAreas?: InstanceType<typeof DistrictUpdateManyWithoutOnOutletLaundryItemServiceAreaNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput>;
}
export declare class OutletLaundryItemServiceUpdateactivitiesInput {
    set?: Array<keyof typeof ItemActivity>;
    push?: Array<keyof typeof ItemActivity>;
}
export declare class OutletLaundryItemServiceUpdateorderTypesInput {
    set?: Array<keyof typeof OrderType>;
    push?: Array<keyof typeof OrderType>;
}
export declare class OutletLaundryItemServiceUpsertWithWhereUniqueWithoutDistrictAreasInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutDistrictAreasInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutDistrictAreasInput>;
}
export declare class OutletLaundryItemServiceUpsertWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutImagesInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutImagesInput>;
}
export declare class OutletLaundryItemServiceUpsertWithWhereUniqueWithoutLaundryItemInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutLaundryItemInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutLaundryItemInput>;
}
export declare class OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutOnVoucherSettingInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutOnVoucherSettingInput>;
}
export declare class OutletLaundryItemServiceUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutOutletInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutOutletInput>;
}
export declare class OutletLaundryItemServiceUpsertWithoutCartInput {
    update: InstanceType<typeof OutletLaundryItemServiceUpdateWithoutCartInput>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateWithoutCartInput>;
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
}
export declare class OutletLaundryItemServiceWhereUniqueInput {
    id?: number;
    AND?: Array<OutletLaundryItemServiceWhereInput>;
    OR?: Array<OutletLaundryItemServiceWhereInput>;
    NOT?: Array<OutletLaundryItemServiceWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    durationInMinute?: InstanceType<typeof IntNullableFilter>;
    maxWeight?: InstanceType<typeof FloatNullableFilter>;
    minWeight?: InstanceType<typeof FloatNullableFilter>;
    cost?: InstanceType<typeof IntNullableFilter>;
    salePrice?: InstanceType<typeof IntFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    isOnSale?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    orderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    laundryItem?: InstanceType<typeof LaundryItemRelationFilter>;
    Images?: InstanceType<typeof ImageListRelationFilter>;
    cart?: InstanceType<typeof CartListRelationFilter>;
    districtAreas?: InstanceType<typeof DistrictListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class OutletLaundryItemServiceWhereInput {
    AND?: Array<OutletLaundryItemServiceWhereInput>;
    OR?: Array<OutletLaundryItemServiceWhereInput>;
    NOT?: Array<OutletLaundryItemServiceWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    durationInMinute?: InstanceType<typeof IntNullableFilter>;
    maxWeight?: InstanceType<typeof FloatNullableFilter>;
    minWeight?: InstanceType<typeof FloatNullableFilter>;
    cost?: InstanceType<typeof IntNullableFilter>;
    salePrice?: InstanceType<typeof IntFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    isOnSale?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    laundryItemId?: InstanceType<typeof IntFilter>;
    activities?: InstanceType<typeof EnumItemActivityNullableListFilter>;
    orderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    laundryItem?: InstanceType<typeof LaundryItemRelationFilter>;
    Images?: InstanceType<typeof ImageListRelationFilter>;
    cart?: InstanceType<typeof CartListRelationFilter>;
    districtAreas?: InstanceType<typeof DistrictListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class OutletLaundryItemService {
    id: number;
    name: string;
    description: string | null;
    durationInMinute: number | null;
    maxWeight: number | null;
    minWeight: number | null;
    cost: number | null;
    salePrice: number;
    isActive: boolean;
    isOnSale: boolean;
    createdAt: Date;
    updatedAt: Date;
    outletId: number;
    laundryItemId: number;
    activities: Array<keyof typeof ItemActivity>;
    orderTypes: Array<keyof typeof OrderType>;
    outlet?: InstanceType<typeof Outlet>;
    laundryItem?: InstanceType<typeof LaundryItem>;
    Images?: Array<Image>;
    cart?: Array<Cart>;
    districtAreas?: Array<District>;
    onVoucherSetting?: Array<VoucherSetting>;
    _count?: InstanceType<typeof OutletLaundryItemServiceCount>;
}
export declare class UpdateManyOutletLaundryItemServiceArgs {
    data: InstanceType<typeof OutletLaundryItemServiceUpdateManyMutationInput>;
    where?: InstanceType<typeof OutletLaundryItemServiceWhereInput>;
}
export declare class UpdateOneOutletLaundryItemServiceArgs {
    data: InstanceType<typeof OutletLaundryItemServiceUpdateInput>;
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
}
export declare class UpsertOneOutletLaundryItemServiceArgs {
    where: Prisma.AtLeast<OutletLaundryItemServiceWhereUniqueInput, 'id'>;
    create: InstanceType<typeof OutletLaundryItemServiceCreateInput>;
    update: InstanceType<typeof OutletLaundryItemServiceUpdateInput>;
}
export declare class AggregateOutletSetting {
    _count?: InstanceType<typeof OutletSettingCountAggregate>;
    _avg?: InstanceType<typeof OutletSettingAvgAggregate>;
    _sum?: InstanceType<typeof OutletSettingSumAggregate>;
    _min?: InstanceType<typeof OutletSettingMinAggregate>;
    _max?: InstanceType<typeof OutletSettingMaxAggregate>;
}
export declare class CreateManyOutletSettingArgs {
    data: Array<OutletSettingCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOutletSettingArgs {
    data: InstanceType<typeof OutletSettingCreateInput>;
}
export declare class DeleteManyOutletSettingArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class DeleteOneOutletSettingArgs {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class FindFirstOutletSettingOrThrowArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    orderBy?: Array<OutletSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletSettingScalarFieldEnum>;
}
export declare class FindFirstOutletSettingArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    orderBy?: Array<OutletSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletSettingScalarFieldEnum>;
}
export declare class FindManyOutletSettingArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    orderBy?: Array<OutletSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletSettingScalarFieldEnum>;
}
export declare class FindUniqueOutletSettingOrThrowArgs {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class FindUniqueOutletSettingArgs {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class OutletSettingAggregateArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    orderBy?: Array<OutletSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletSettingCountAggregateInput>;
    _avg?: InstanceType<typeof OutletSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletSettingSumAggregateInput>;
    _min?: InstanceType<typeof OutletSettingMinAggregateInput>;
    _max?: InstanceType<typeof OutletSettingMaxAggregateInput>;
}
export declare class OutletSettingAvgAggregateInput {
    id?: true;
    attendanceRadius?: true;
    printerSettingId?: true;
    outletId?: true;
}
export declare class OutletSettingAvgAggregate {
    id?: number;
    attendanceRadius?: number;
    printerSettingId?: number;
    outletId?: number;
}
export declare class OutletSettingAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    attendanceRadius?: keyof typeof SortOrder;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletSettingCountAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    attendanceRadius?: true;
    printerSettingId?: true;
    outletId?: true;
    _all?: true;
}
export declare class OutletSettingCountAggregate {
    id: number;
    createdAt: number;
    updatedAt: number;
    attendanceRadius: number;
    printerSettingId: number;
    outletId: number;
    _all: number;
}
export declare class OutletSettingCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    attendanceRadius?: keyof typeof SortOrder;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletSettingCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    printerSettingId: number;
    outletId: number;
}
export declare class OutletSettingCreateNestedOneWithoutOutletInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutOutletInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutOutletInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class OutletSettingCreateNestedOneWithoutPrinterSettingInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutPrinterSettingInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class OutletSettingCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    create: InstanceType<typeof OutletSettingCreateWithoutOutletInput>;
}
export declare class OutletSettingCreateOrConnectWithoutPrinterSettingInput {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    create: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
}
export declare class OutletSettingCreateWithoutOutletInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    outletId: number;
    printerSetting: InstanceType<typeof PrinterSettingCreateNestedOneWithoutOutletSettingInput>;
}
export declare class OutletSettingCreateWithoutPrinterSettingInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    outletId: number;
    outlet?: InstanceType<typeof OutletCreateNestedOneWithoutSettingInput>;
}
export declare class OutletSettingCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    outletId: number;
    printerSetting: InstanceType<typeof PrinterSettingCreateNestedOneWithoutOutletSettingInput>;
    outlet?: InstanceType<typeof OutletCreateNestedOneWithoutSettingInput>;
}
export declare class OutletSettingGroupByArgs {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    orderBy?: Array<OutletSettingOrderByWithAggregationInput>;
    by: Array<keyof typeof OutletSettingScalarFieldEnum>;
    having?: InstanceType<typeof OutletSettingScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletSettingCountAggregateInput>;
    _avg?: InstanceType<typeof OutletSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletSettingSumAggregateInput>;
    _min?: InstanceType<typeof OutletSettingMinAggregateInput>;
    _max?: InstanceType<typeof OutletSettingMaxAggregateInput>;
}
export declare class OutletSettingGroupBy {
    id: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    attendanceRadius?: number;
    printerSettingId: number;
    outletId: number;
    _count?: InstanceType<typeof OutletSettingCountAggregate>;
    _avg?: InstanceType<typeof OutletSettingAvgAggregate>;
    _sum?: InstanceType<typeof OutletSettingSumAggregate>;
    _min?: InstanceType<typeof OutletSettingMinAggregate>;
    _max?: InstanceType<typeof OutletSettingMaxAggregate>;
}
export declare class OutletSettingMaxAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    attendanceRadius?: true;
    printerSettingId?: true;
    outletId?: true;
}
export declare class OutletSettingMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    printerSettingId?: number;
    outletId?: number;
}
export declare class OutletSettingMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    attendanceRadius?: keyof typeof SortOrder;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletSettingMinAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    attendanceRadius?: true;
    printerSettingId?: true;
    outletId?: true;
}
export declare class OutletSettingMinAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    printerSettingId?: number;
    outletId?: number;
}
export declare class OutletSettingMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    attendanceRadius?: keyof typeof SortOrder;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletSettingNullableRelationFilter {
    is?: InstanceType<typeof OutletSettingWhereInput>;
    isNot?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class OutletSettingOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    attendanceRadius?: InstanceType<typeof SortOrderInput>;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OutletSettingCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof OutletSettingAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof OutletSettingMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OutletSettingMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof OutletSettingSumOrderByAggregateInput>;
}
export declare class OutletSettingOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    attendanceRadius?: InstanceType<typeof SortOrderInput>;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSetting?: InstanceType<typeof PrinterSettingOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
}
export declare class OutletSettingRelationFilter {
    is?: InstanceType<typeof OutletSettingWhereInput>;
    isNot?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class OutletSettingScalarWhereWithAggregatesInput {
    AND?: Array<OutletSettingScalarWhereWithAggregatesInput>;
    OR?: Array<OutletSettingScalarWhereWithAggregatesInput>;
    NOT?: Array<OutletSettingScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    attendanceRadius?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    printerSettingId?: InstanceType<typeof IntWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class OutletSettingSumAggregateInput {
    id?: true;
    attendanceRadius?: true;
    printerSettingId?: true;
    outletId?: true;
}
export declare class OutletSettingSumAggregate {
    id?: number;
    attendanceRadius?: number;
    printerSettingId?: number;
    outletId?: number;
}
export declare class OutletSettingSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    attendanceRadius?: keyof typeof SortOrder;
    printerSettingId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletSettingUncheckedCreateNestedOneWithoutPrinterSettingInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutPrinterSettingInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class OutletSettingUncheckedCreateWithoutOutletInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    printerSettingId: number;
    outletId: number;
}
export declare class OutletSettingUncheckedCreateWithoutPrinterSettingInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    outletId: number;
    outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutSettingInput>;
}
export declare class OutletSettingUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    attendanceRadius?: number;
    printerSettingId: number;
    outletId: number;
    outlet?: InstanceType<typeof OutletUncheckedCreateNestedOneWithoutSettingInput>;
}
export declare class OutletSettingUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    printerSettingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletSettingUncheckedUpdateOneWithoutPrinterSettingNestedInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutPrinterSettingInput>;
    upsert?: InstanceType<typeof OutletSettingUpsertWithoutPrinterSettingInput>;
    disconnect?: InstanceType<typeof OutletSettingWhereInput>;
    delete?: InstanceType<typeof OutletSettingWhereInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    update?: InstanceType<typeof OutletSettingUpdateToOneWithWhereWithoutPrinterSettingInput>;
}
export declare class OutletSettingUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    printerSettingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletSettingUncheckedUpdateWithoutPrinterSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutSettingNestedInput>;
}
export declare class OutletSettingUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    printerSettingId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUncheckedUpdateOneWithoutSettingNestedInput>;
}
export declare class OutletSettingUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletSettingUpdateOneRequiredWithoutOutletNestedInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutOutletInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutOutletInput>;
    upsert?: InstanceType<typeof OutletSettingUpsertWithoutOutletInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    update?: InstanceType<typeof OutletSettingUpdateToOneWithWhereWithoutOutletInput>;
}
export declare class OutletSettingUpdateOneWithoutPrinterSettingNestedInput {
    create?: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
    connectOrCreate?: InstanceType<typeof OutletSettingCreateOrConnectWithoutPrinterSettingInput>;
    upsert?: InstanceType<typeof OutletSettingUpsertWithoutPrinterSettingInput>;
    disconnect?: InstanceType<typeof OutletSettingWhereInput>;
    delete?: InstanceType<typeof OutletSettingWhereInput>;
    connect?: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    update?: InstanceType<typeof OutletSettingUpdateToOneWithWhereWithoutPrinterSettingInput>;
}
export declare class OutletSettingUpdateToOneWithWhereWithoutOutletInput {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    data: InstanceType<typeof OutletSettingUpdateWithoutOutletInput>;
}
export declare class OutletSettingUpdateToOneWithWhereWithoutPrinterSettingInput {
    where?: InstanceType<typeof OutletSettingWhereInput>;
    data: InstanceType<typeof OutletSettingUpdateWithoutPrinterSettingInput>;
}
export declare class OutletSettingUpdateWithoutOutletInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSetting?: InstanceType<typeof PrinterSettingUpdateOneRequiredWithoutOutletSettingNestedInput>;
}
export declare class OutletSettingUpdateWithoutPrinterSettingInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneWithoutSettingNestedInput>;
}
export declare class OutletSettingUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    attendanceRadius?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSetting?: InstanceType<typeof PrinterSettingUpdateOneRequiredWithoutOutletSettingNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneWithoutSettingNestedInput>;
}
export declare class OutletSettingUpsertWithoutOutletInput {
    update: InstanceType<typeof OutletSettingUpdateWithoutOutletInput>;
    create: InstanceType<typeof OutletSettingCreateWithoutOutletInput>;
    where?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class OutletSettingUpsertWithoutPrinterSettingInput {
    update: InstanceType<typeof OutletSettingUpdateWithoutPrinterSettingInput>;
    create: InstanceType<typeof OutletSettingCreateWithoutPrinterSettingInput>;
    where?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class OutletSettingWhereUniqueInput {
    id?: number;
    printerSettingId?: number;
    AND?: Array<OutletSettingWhereInput>;
    OR?: Array<OutletSettingWhereInput>;
    NOT?: Array<OutletSettingWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    attendanceRadius?: InstanceType<typeof FloatNullableFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    printerSetting?: InstanceType<typeof PrinterSettingRelationFilter>;
    outlet?: InstanceType<typeof OutletNullableRelationFilter>;
}
export declare class OutletSettingWhereInput {
    AND?: Array<OutletSettingWhereInput>;
    OR?: Array<OutletSettingWhereInput>;
    NOT?: Array<OutletSettingWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    attendanceRadius?: InstanceType<typeof FloatNullableFilter>;
    printerSettingId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    printerSetting?: InstanceType<typeof PrinterSettingRelationFilter>;
    outlet?: InstanceType<typeof OutletNullableRelationFilter>;
}
export declare class OutletSetting {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    attendanceRadius: number | null;
    printerSettingId: number;
    outletId: number;
    printerSetting?: InstanceType<typeof PrinterSetting>;
    outlet?: InstanceType<typeof Outlet> | null;
}
export declare class UpdateManyOutletSettingArgs {
    data: InstanceType<typeof OutletSettingUpdateManyMutationInput>;
    where?: InstanceType<typeof OutletSettingWhereInput>;
}
export declare class UpdateOneOutletSettingArgs {
    data: InstanceType<typeof OutletSettingUpdateInput>;
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
}
export declare class UpsertOneOutletSettingArgs {
    where: Prisma.AtLeast<OutletSettingWhereUniqueInput, 'id' | 'printerSettingId'>;
    create: InstanceType<typeof OutletSettingCreateInput>;
    update: InstanceType<typeof OutletSettingUpdateInput>;
}
export declare class AggregateOutletVoucher {
    _count?: InstanceType<typeof OutletVoucherCountAggregate>;
    _avg?: InstanceType<typeof OutletVoucherAvgAggregate>;
    _sum?: InstanceType<typeof OutletVoucherSumAggregate>;
    _min?: InstanceType<typeof OutletVoucherMinAggregate>;
    _max?: InstanceType<typeof OutletVoucherMaxAggregate>;
}
export declare class CreateManyOutletVoucherArgs {
    data: Array<OutletVoucherCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOutletVoucherArgs {
    data: InstanceType<typeof OutletVoucherCreateInput>;
}
export declare class DeleteManyOutletVoucherArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
}
export declare class DeleteOneOutletVoucherArgs {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class FindFirstOutletVoucherOrThrowArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    orderBy?: Array<OutletVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletVoucherScalarFieldEnum>;
}
export declare class FindFirstOutletVoucherArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    orderBy?: Array<OutletVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletVoucherScalarFieldEnum>;
}
export declare class FindManyOutletVoucherArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    orderBy?: Array<OutletVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OutletVoucherScalarFieldEnum>;
}
export declare class FindUniqueOutletVoucherOrThrowArgs {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class FindUniqueOutletVoucherArgs {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class OutletVoucherAggregateArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    orderBy?: Array<OutletVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletVoucherCountAggregateInput>;
    _avg?: InstanceType<typeof OutletVoucherAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletVoucherSumAggregateInput>;
    _min?: InstanceType<typeof OutletVoucherMinAggregateInput>;
    _max?: InstanceType<typeof OutletVoucherMaxAggregateInput>;
}
export declare class OutletVoucherAvgAggregateInput {
    outletId?: true;
}
export declare class OutletVoucherAvgAggregate {
    outletId?: number;
}
export declare class OutletVoucherAvgOrderByAggregateInput {
    outletId?: keyof typeof SortOrder;
}
export declare class OutletVoucherCountAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    outletId?: true;
    _all?: true;
}
export declare class OutletVoucherCountAggregate {
    createdAt: number;
    updatedAt: number;
    voucherId: number;
    outletId: number;
    _all: number;
}
export declare class OutletVoucherCountOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletVoucherCount {
    customers?: number;
    platforms?: number;
}
export declare class OutletVoucherCreateManyOutletInputEnvelope {
    data: Array<OutletVoucherCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class OutletVoucherCreateManyOutletInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
}
export declare class OutletVoucherCreateManyInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    outletId: number;
}
export declare class OutletVoucherCreateNestedManyWithoutCustomersInput {
    create?: Array<OutletVoucherCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutCustomersInput>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherCreateNestedManyWithoutOutletInput {
    create?: Array<OutletVoucherCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletVoucherCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherCreateNestedManyWithoutPlatformsInput {
    create?: Array<OutletVoucherCreateWithoutPlatformsInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutPlatformsInput>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherCreateNestedOneWithoutVoucherInput {
    create?: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof OutletVoucherCreateOrConnectWithoutVoucherInput>;
    connect?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class OutletVoucherCreateOrConnectWithoutCustomersInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof OutletVoucherCreateWithoutCustomersInput>;
}
export declare class OutletVoucherCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof OutletVoucherCreateWithoutOutletInput>;
}
export declare class OutletVoucherCreateOrConnectWithoutPlatformsInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof OutletVoucherCreateWithoutPlatformsInput>;
}
export declare class OutletVoucherCreateOrConnectWithoutVoucherInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
}
export declare class OutletVoucherCreateWithoutCustomersInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutOutletVoucherInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOutletVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherCreateWithoutOutletInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutOutletVoucherInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherCreateWithoutPlatformsInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutOutletVoucherInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOutletVouchersInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutVouchersInput>;
}
export declare class OutletVoucherCreateWithoutVoucherInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOutletVouchersInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutOutletVoucherInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOutletVouchersInput>;
    customers?: InstanceType<typeof CustomerCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherGroupByArgs {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    orderBy?: Array<OutletVoucherOrderByWithAggregationInput>;
    by: Array<keyof typeof OutletVoucherScalarFieldEnum>;
    having?: InstanceType<typeof OutletVoucherScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OutletVoucherCountAggregateInput>;
    _avg?: InstanceType<typeof OutletVoucherAvgAggregateInput>;
    _sum?: InstanceType<typeof OutletVoucherSumAggregateInput>;
    _min?: InstanceType<typeof OutletVoucherMinAggregateInput>;
    _max?: InstanceType<typeof OutletVoucherMaxAggregateInput>;
}
export declare class OutletVoucherGroupBy {
    createdAt: Date | string;
    updatedAt: Date | string;
    voucherId: string;
    outletId: number;
    _count?: InstanceType<typeof OutletVoucherCountAggregate>;
    _avg?: InstanceType<typeof OutletVoucherAvgAggregate>;
    _sum?: InstanceType<typeof OutletVoucherSumAggregate>;
    _min?: InstanceType<typeof OutletVoucherMinAggregate>;
    _max?: InstanceType<typeof OutletVoucherMaxAggregate>;
}
export declare class OutletVoucherListRelationFilter {
    every?: InstanceType<typeof OutletVoucherWhereInput>;
    some?: InstanceType<typeof OutletVoucherWhereInput>;
    none?: InstanceType<typeof OutletVoucherWhereInput>;
}
export declare class OutletVoucherMaxAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    outletId?: true;
}
export declare class OutletVoucherMaxAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
    outletId?: number;
}
export declare class OutletVoucherMaxOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletVoucherMinAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    outletId?: true;
}
export declare class OutletVoucherMinAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
    outletId?: number;
}
export declare class OutletVoucherMinOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class OutletVoucherNullableRelationFilter {
    is?: InstanceType<typeof OutletVoucherWhereInput>;
    isNot?: InstanceType<typeof OutletVoucherWhereInput>;
}
export declare class OutletVoucherOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class OutletVoucherOrderByWithAggregationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OutletVoucherCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof OutletVoucherAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof OutletVoucherMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OutletVoucherMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof OutletVoucherSumOrderByAggregateInput>;
}
export declare class OutletVoucherOrderByWithRelationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    voucher?: InstanceType<typeof VoucherOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    customers?: InstanceType<typeof CustomerOrderByRelationAggregateInput>;
    platforms?: InstanceType<typeof PlatformVoucherOrderByRelationAggregateInput>;
}
export declare class OutletVoucherScalarWhereWithAggregatesInput {
    AND?: Array<OutletVoucherScalarWhereWithAggregatesInput>;
    OR?: Array<OutletVoucherScalarWhereWithAggregatesInput>;
    NOT?: Array<OutletVoucherScalarWhereWithAggregatesInput>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    voucherId?: InstanceType<typeof StringWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class OutletVoucherScalarWhereInput {
    AND?: Array<OutletVoucherScalarWhereInput>;
    OR?: Array<OutletVoucherScalarWhereInput>;
    NOT?: Array<OutletVoucherScalarWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
}
export declare class OutletVoucherSumAggregateInput {
    outletId?: true;
}
export declare class OutletVoucherSumAggregate {
    outletId?: number;
}
export declare class OutletVoucherSumOrderByAggregateInput {
    outletId?: keyof typeof SortOrder;
}
export declare class OutletVoucherUncheckedCreateNestedManyWithoutCustomersInput {
    create?: Array<OutletVoucherCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutCustomersInput>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<OutletVoucherCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletVoucherCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherUncheckedCreateNestedManyWithoutPlatformsInput {
    create?: Array<OutletVoucherCreateWithoutPlatformsInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutPlatformsInput>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput {
    create?: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof OutletVoucherCreateOrConnectWithoutVoucherInput>;
    connect?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class OutletVoucherUncheckedCreateWithoutCustomersInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    outletId: number;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherUncheckedCreateWithoutOutletInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherUncheckedCreateWithoutPlatformsInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    outletId: number;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutVouchersInput>;
}
export declare class OutletVoucherUncheckedCreateWithoutVoucherInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherUncheckedCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    outletId: number;
    customers?: InstanceType<typeof CustomerUncheckedCreateNestedManyWithoutVouchersInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedManyWithoutOutletsInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutCustomersNestedInput {
    create?: Array<OutletVoucherCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutCustomersInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutCustomersInput>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutCustomersInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutCustomersInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutCustomersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<OutletVoucherCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutOutletInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletVoucherCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutOutletInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutPlatformsNestedInput {
    create?: Array<OutletVoucherCreateWithoutPlatformsInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutPlatformsInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutPlatformsInput>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutPlatformsInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutPlatformsInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUncheckedUpdateManyWithoutPlatformsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletVoucherUncheckedUpdateManyInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput {
    create?: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof OutletVoucherCreateOrConnectWithoutVoucherInput>;
    upsert?: InstanceType<typeof OutletVoucherUpsertWithoutVoucherInput>;
    disconnect?: InstanceType<typeof OutletVoucherWhereInput>;
    delete?: InstanceType<typeof OutletVoucherWhereInput>;
    connect?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    update?: InstanceType<typeof OutletVoucherUpdateToOneWithWhereWithoutVoucherInput>;
}
export declare class OutletVoucherUncheckedUpdateWithoutCustomersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUncheckedUpdateWithoutOutletInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUncheckedUpdateWithoutPlatformsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutVouchersNestedInput>;
}
export declare class OutletVoucherUncheckedUpdateWithoutVoucherInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUncheckedUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    customers?: InstanceType<typeof CustomerUncheckedUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUncheckedUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class OutletVoucherUpdateManyWithWhereWithoutCustomersInput {
    where: InstanceType<typeof OutletVoucherScalarWhereInput>;
    data: InstanceType<typeof OutletVoucherUpdateManyMutationInput>;
}
export declare class OutletVoucherUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof OutletVoucherScalarWhereInput>;
    data: InstanceType<typeof OutletVoucherUpdateManyMutationInput>;
}
export declare class OutletVoucherUpdateManyWithWhereWithoutPlatformsInput {
    where: InstanceType<typeof OutletVoucherScalarWhereInput>;
    data: InstanceType<typeof OutletVoucherUpdateManyMutationInput>;
}
export declare class OutletVoucherUpdateManyWithoutCustomersNestedInput {
    create?: Array<OutletVoucherCreateWithoutCustomersInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutCustomersInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutCustomersInput>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutCustomersInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutCustomersInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUpdateManyWithoutOutletNestedInput {
    create?: Array<OutletVoucherCreateWithoutOutletInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutOutletInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof OutletVoucherCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUpdateManyWithoutPlatformsNestedInput {
    create?: Array<OutletVoucherCreateWithoutPlatformsInput>;
    connectOrCreate?: Array<OutletVoucherCreateOrConnectWithoutPlatformsInput>;
    upsert?: Array<OutletVoucherUpsertWithWhereUniqueWithoutPlatformsInput>;
    set?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<OutletVoucherUpdateWithWhereUniqueWithoutPlatformsInput>;
    updateMany?: Array<OutletVoucherUpdateManyWithWhereWithoutPlatformsInput>;
    deleteMany?: Array<OutletVoucherScalarWhereInput>;
}
export declare class OutletVoucherUpdateOneWithoutVoucherNestedInput {
    create?: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof OutletVoucherCreateOrConnectWithoutVoucherInput>;
    upsert?: InstanceType<typeof OutletVoucherUpsertWithoutVoucherInput>;
    disconnect?: InstanceType<typeof OutletVoucherWhereInput>;
    delete?: InstanceType<typeof OutletVoucherWhereInput>;
    connect?: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    update?: InstanceType<typeof OutletVoucherUpdateToOneWithWhereWithoutVoucherInput>;
}
export declare class OutletVoucherUpdateToOneWithWhereWithoutVoucherInput {
    where?: InstanceType<typeof OutletVoucherWhereInput>;
    data: InstanceType<typeof OutletVoucherUpdateWithoutVoucherInput>;
}
export declare class OutletVoucherUpdateWithWhereUniqueWithoutCustomersInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof OutletVoucherUpdateWithoutCustomersInput>;
}
export declare class OutletVoucherUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof OutletVoucherUpdateWithoutOutletInput>;
}
export declare class OutletVoucherUpdateWithWhereUniqueWithoutPlatformsInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof OutletVoucherUpdateWithoutPlatformsInput>;
}
export declare class OutletVoucherUpdateWithoutCustomersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutOutletVoucherNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOutletVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUpdateWithoutOutletInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutOutletVoucherNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUpdateWithoutPlatformsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutOutletVoucherNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOutletVouchersNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutVouchersNestedInput>;
}
export declare class OutletVoucherUpdateWithoutVoucherInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOutletVouchersNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutOutletVoucherNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOutletVouchersNestedInput>;
    customers?: InstanceType<typeof CustomerUpdateManyWithoutVouchersNestedInput>;
    platforms?: InstanceType<typeof PlatformVoucherUpdateManyWithoutOutletsNestedInput>;
}
export declare class OutletVoucherUpsertWithWhereUniqueWithoutCustomersInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof OutletVoucherUpdateWithoutCustomersInput>;
    create: InstanceType<typeof OutletVoucherCreateWithoutCustomersInput>;
}
export declare class OutletVoucherUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof OutletVoucherUpdateWithoutOutletInput>;
    create: InstanceType<typeof OutletVoucherCreateWithoutOutletInput>;
}
export declare class OutletVoucherUpsertWithWhereUniqueWithoutPlatformsInput {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof OutletVoucherUpdateWithoutPlatformsInput>;
    create: InstanceType<typeof OutletVoucherCreateWithoutPlatformsInput>;
}
export declare class OutletVoucherUpsertWithoutVoucherInput {
    update: InstanceType<typeof OutletVoucherUpdateWithoutVoucherInput>;
    create: InstanceType<typeof OutletVoucherCreateWithoutVoucherInput>;
    where?: InstanceType<typeof OutletVoucherWhereInput>;
}
export declare class OutletVoucherWhereUniqueInput {
    voucherId?: string;
    AND?: Array<OutletVoucherWhereInput>;
    OR?: Array<OutletVoucherWhereInput>;
    NOT?: Array<OutletVoucherWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    voucher?: InstanceType<typeof VoucherRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    customers?: InstanceType<typeof CustomerListRelationFilter>;
    platforms?: InstanceType<typeof PlatformVoucherListRelationFilter>;
}
export declare class OutletVoucherWhereInput {
    AND?: Array<OutletVoucherWhereInput>;
    OR?: Array<OutletVoucherWhereInput>;
    NOT?: Array<OutletVoucherWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    voucher?: InstanceType<typeof VoucherRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    customers?: InstanceType<typeof CustomerListRelationFilter>;
    platforms?: InstanceType<typeof PlatformVoucherListRelationFilter>;
}
export declare class OutletVoucher {
    createdAt: Date;
    updatedAt: Date;
    voucherId: string;
    outletId: number;
    voucher?: InstanceType<typeof Voucher>;
    outlet?: InstanceType<typeof Outlet>;
    customers?: Array<Customer>;
    platforms?: Array<PlatformVoucher>;
    _count?: InstanceType<typeof OutletVoucherCount>;
}
export declare class UpdateManyOutletVoucherArgs {
    data: InstanceType<typeof OutletVoucherUpdateManyMutationInput>;
    where?: InstanceType<typeof OutletVoucherWhereInput>;
}
export declare class UpdateOneOutletVoucherArgs {
    data: InstanceType<typeof OutletVoucherUpdateInput>;
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class UpsertOneOutletVoucherArgs {
    where: Prisma.AtLeast<OutletVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof OutletVoucherCreateInput>;
    update: InstanceType<typeof OutletVoucherUpdateInput>;
}
export declare class AggregateOwner {
    _count?: InstanceType<typeof OwnerCountAggregate>;
    _min?: InstanceType<typeof OwnerMinAggregate>;
    _max?: InstanceType<typeof OwnerMaxAggregate>;
}
export declare class CreateManyOwnerArgs {
    data: Array<OwnerCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneOwnerArgs {
    data: InstanceType<typeof OwnerCreateInput>;
}
export declare class DeleteManyOwnerArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class DeleteOneOwnerArgs {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class FindFirstOwnerOrThrowArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
    orderBy?: Array<OwnerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OwnerScalarFieldEnum>;
}
export declare class FindFirstOwnerArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
    orderBy?: Array<OwnerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OwnerScalarFieldEnum>;
}
export declare class FindManyOwnerArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
    orderBy?: Array<OwnerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof OwnerScalarFieldEnum>;
}
export declare class FindUniqueOwnerOrThrowArgs {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class FindUniqueOwnerArgs {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerAggregateArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
    orderBy?: Array<OwnerOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OwnerCountAggregateInput>;
    _min?: InstanceType<typeof OwnerMinAggregateInput>;
    _max?: InstanceType<typeof OwnerMaxAggregateInput>;
}
export declare class OwnerCountAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
    _all?: true;
}
export declare class OwnerCountAggregate {
    createdAt: number;
    updatedAt: number;
    userId: number;
    _all: number;
}
export declare class OwnerCountOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class OwnerCount {
    creditCard?: number;
    platformOrders?: number;
    outletes?: number;
    laundryItemRequests?: number;
    schedulesCreated?: number;
    TermOrFaqsCreated?: number;
    onVoucherSetting?: number;
}
export declare class OwnerCreateManyInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
}
export declare class OwnerCreateNestedOneWithoutCreditCardInput {
    create?: InstanceType<typeof OwnerCreateWithoutCreditCardInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutCreditCardInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutLaundryItemRequestsInput {
    create?: InstanceType<typeof OwnerCreateWithoutLaundryItemRequestsInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutLaundryItemRequestsInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutOnVoucherSettingInput {
    create?: InstanceType<typeof OwnerCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutOnVoucherSettingInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutOutletesInput {
    create?: InstanceType<typeof OwnerCreateWithoutOutletesInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutOutletesInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutPlatformOrdersInput {
    create?: InstanceType<typeof OwnerCreateWithoutPlatformOrdersInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutPlatformOrdersInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutSchedulesCreatedInput {
    create?: InstanceType<typeof OwnerCreateWithoutSchedulesCreatedInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutSchedulesCreatedInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutTermOrFaqsCreatedInput {
    create?: InstanceType<typeof OwnerCreateWithoutTermOrFaqsCreatedInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutTermOrFaqsCreatedInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof OwnerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerCreateOrConnectWithoutCreditCardInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutCreditCardInput>;
}
export declare class OwnerCreateOrConnectWithoutLaundryItemRequestsInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutLaundryItemRequestsInput>;
}
export declare class OwnerCreateOrConnectWithoutOnVoucherSettingInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutOnVoucherSettingInput>;
}
export declare class OwnerCreateOrConnectWithoutOutletesInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutOutletesInput>;
}
export declare class OwnerCreateOrConnectWithoutPlatformOrdersInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutPlatformOrdersInput>;
}
export declare class OwnerCreateOrConnectWithoutSchedulesCreatedInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutSchedulesCreatedInput>;
}
export declare class OwnerCreateOrConnectWithoutTermOrFaqsCreatedInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutTermOrFaqsCreatedInput>;
}
export declare class OwnerCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateWithoutUserInput>;
}
export declare class OwnerCreateWithoutCreditCardInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutLaundryItemRequestsInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutOnVoucherSettingInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutOutletesInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutPlatformOrdersInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutSchedulesCreatedInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutTermOrFaqsCreatedInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateWithoutUserInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerCreateInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutOwnerInfoInput>;
    creditCard?: InstanceType<typeof CreditCardCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerGroupByArgs {
    where?: InstanceType<typeof OwnerWhereInput>;
    orderBy?: Array<OwnerOrderByWithAggregationInput>;
    by: Array<keyof typeof OwnerScalarFieldEnum>;
    having?: InstanceType<typeof OwnerScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof OwnerCountAggregateInput>;
    _min?: InstanceType<typeof OwnerMinAggregateInput>;
    _max?: InstanceType<typeof OwnerMaxAggregateInput>;
}
export declare class OwnerGroupBy {
    createdAt: Date | string;
    updatedAt: Date | string;
    userId: string;
    _count?: InstanceType<typeof OwnerCountAggregate>;
    _min?: InstanceType<typeof OwnerMinAggregate>;
    _max?: InstanceType<typeof OwnerMaxAggregate>;
}
export declare class OwnerMaxAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
}
export declare class OwnerMaxAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
}
export declare class OwnerMaxOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class OwnerMinAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    userId?: true;
}
export declare class OwnerMinAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    userId?: string;
}
export declare class OwnerMinOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
}
export declare class OwnerNullableRelationFilter {
    is?: InstanceType<typeof OwnerWhereInput>;
    isNot?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerOrderByWithAggregationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof OwnerCountOrderByAggregateInput>;
    _max?: InstanceType<typeof OwnerMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof OwnerMinOrderByAggregateInput>;
}
export declare class OwnerOrderByWithRelationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
    creditCard?: InstanceType<typeof CreditCardOrderByRelationAggregateInput>;
    platformOrders?: InstanceType<typeof PlatformOrderOrderByRelationAggregateInput>;
    outletes?: InstanceType<typeof OutletOrderByRelationAggregateInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestOrderByRelationAggregateInput>;
    schedulesCreated?: InstanceType<typeof ScheduleOrderByRelationAggregateInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqOrderByRelationAggregateInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingOrderByRelationAggregateInput>;
}
export declare class OwnerRelationFilter {
    is?: InstanceType<typeof OwnerWhereInput>;
    isNot?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerScalarWhereWithAggregatesInput {
    AND?: Array<OwnerScalarWhereWithAggregatesInput>;
    OR?: Array<OwnerScalarWhereWithAggregatesInput>;
    NOT?: Array<OwnerScalarWhereWithAggregatesInput>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class OwnerUncheckedCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof OwnerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class OwnerUncheckedCreateWithoutCreditCardInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutLaundryItemRequestsInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutOnVoucherSettingInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutOutletesInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutPlatformOrdersInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutSchedulesCreatedInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutTermOrFaqsCreatedInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateWithoutUserInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedCreateInput {
    createdAt?: Date | string;
    updatedAt: Date | string;
    userId: string;
    creditCard?: InstanceType<typeof CreditCardUncheckedCreateNestedManyWithoutOwnerInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput>;
    outletes?: InstanceType<typeof OutletUncheckedCreateNestedManyWithoutOwnerInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedCreateNestedManyWithoutRequestByInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedCreateNestedManyWithoutCreatedByInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput>;
}
export declare class OwnerUncheckedUpdateManyInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class OwnerUncheckedUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof OwnerWhereInput>;
    delete?: InstanceType<typeof OwnerWhereInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutUserInput>;
}
export declare class OwnerUncheckedUpdateWithoutCreditCardInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutLaundryItemRequestsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutOnVoucherSettingInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutOutletesInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutPlatformOrdersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutSchedulesCreatedInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutTermOrFaqsCreatedInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateWithoutUserInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUncheckedUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUncheckedUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUncheckedUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUncheckedUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class OwnerUpdateOneRequiredWithoutLaundryItemRequestsNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutLaundryItemRequestsInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutLaundryItemRequestsInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutLaundryItemRequestsInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutLaundryItemRequestsInput>;
}
export declare class OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutOnVoucherSettingInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutOnVoucherSettingInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutOnVoucherSettingInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutOnVoucherSettingInput>;
}
export declare class OwnerUpdateOneRequiredWithoutOutletesNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutOutletesInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutOutletesInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutOutletesInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutOutletesInput>;
}
export declare class OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutPlatformOrdersInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutPlatformOrdersInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutPlatformOrdersInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutPlatformOrdersInput>;
}
export declare class OwnerUpdateOneRequiredWithoutSchedulesCreatedNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutSchedulesCreatedInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutSchedulesCreatedInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutSchedulesCreatedInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutSchedulesCreatedInput>;
}
export declare class OwnerUpdateOneRequiredWithoutTermOrFaqsCreatedNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutTermOrFaqsCreatedInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutTermOrFaqsCreatedInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutTermOrFaqsCreatedInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutTermOrFaqsCreatedInput>;
}
export declare class OwnerUpdateOneWithoutCreditCardNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutCreditCardInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutCreditCardInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutCreditCardInput>;
    disconnect?: InstanceType<typeof OwnerWhereInput>;
    delete?: InstanceType<typeof OwnerWhereInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutCreditCardInput>;
}
export declare class OwnerUpdateOneWithoutUserNestedInput {
    create?: InstanceType<typeof OwnerCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof OwnerCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof OwnerUpsertWithoutUserInput>;
    disconnect?: InstanceType<typeof OwnerWhereInput>;
    delete?: InstanceType<typeof OwnerWhereInput>;
    connect?: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    update?: InstanceType<typeof OwnerUpdateToOneWithWhereWithoutUserInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutCreditCardInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutCreditCardInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutLaundryItemRequestsInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutLaundryItemRequestsInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutOnVoucherSettingInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutOnVoucherSettingInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutOutletesInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutOutletesInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutPlatformOrdersInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutPlatformOrdersInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutSchedulesCreatedInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutSchedulesCreatedInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutTermOrFaqsCreatedInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutTermOrFaqsCreatedInput>;
}
export declare class OwnerUpdateToOneWithWhereWithoutUserInput {
    where?: InstanceType<typeof OwnerWhereInput>;
    data: InstanceType<typeof OwnerUpdateWithoutUserInput>;
}
export declare class OwnerUpdateWithoutCreditCardInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutLaundryItemRequestsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutOnVoucherSettingInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutOutletesInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutPlatformOrdersInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutSchedulesCreatedInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutTermOrFaqsCreatedInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateWithoutUserInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutOwnerInfoNestedInput>;
    creditCard?: InstanceType<typeof CreditCardUpdateManyWithoutOwnerNestedInput>;
    platformOrders?: InstanceType<typeof PlatformOrderUpdateManyWithoutOrderByNestedInput>;
    outletes?: InstanceType<typeof OutletUpdateManyWithoutOwnerNestedInput>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestUpdateManyWithoutRequestByNestedInput>;
    schedulesCreated?: InstanceType<typeof ScheduleUpdateManyWithoutCreatedByNestedInput>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqUpdateManyWithoutCreatedByNestedInput>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingUpdateManyWithoutCreatedByNestedInput>;
}
export declare class OwnerUpsertWithoutCreditCardInput {
    update: InstanceType<typeof OwnerUpdateWithoutCreditCardInput>;
    create: InstanceType<typeof OwnerCreateWithoutCreditCardInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutLaundryItemRequestsInput {
    update: InstanceType<typeof OwnerUpdateWithoutLaundryItemRequestsInput>;
    create: InstanceType<typeof OwnerCreateWithoutLaundryItemRequestsInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutOnVoucherSettingInput {
    update: InstanceType<typeof OwnerUpdateWithoutOnVoucherSettingInput>;
    create: InstanceType<typeof OwnerCreateWithoutOnVoucherSettingInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutOutletesInput {
    update: InstanceType<typeof OwnerUpdateWithoutOutletesInput>;
    create: InstanceType<typeof OwnerCreateWithoutOutletesInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutPlatformOrdersInput {
    update: InstanceType<typeof OwnerUpdateWithoutPlatformOrdersInput>;
    create: InstanceType<typeof OwnerCreateWithoutPlatformOrdersInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutSchedulesCreatedInput {
    update: InstanceType<typeof OwnerUpdateWithoutSchedulesCreatedInput>;
    create: InstanceType<typeof OwnerCreateWithoutSchedulesCreatedInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutTermOrFaqsCreatedInput {
    update: InstanceType<typeof OwnerUpdateWithoutTermOrFaqsCreatedInput>;
    create: InstanceType<typeof OwnerCreateWithoutTermOrFaqsCreatedInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerUpsertWithoutUserInput {
    update: InstanceType<typeof OwnerUpdateWithoutUserInput>;
    create: InstanceType<typeof OwnerCreateWithoutUserInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class OwnerWhereUniqueInput {
    userId?: string;
    AND?: Array<OwnerWhereInput>;
    OR?: Array<OwnerWhereInput>;
    NOT?: Array<OwnerWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    creditCard?: InstanceType<typeof CreditCardListRelationFilter>;
    platformOrders?: InstanceType<typeof PlatformOrderListRelationFilter>;
    outletes?: InstanceType<typeof OutletListRelationFilter>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestListRelationFilter>;
    schedulesCreated?: InstanceType<typeof ScheduleListRelationFilter>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class OwnerWhereInput {
    AND?: Array<OwnerWhereInput>;
    OR?: Array<OwnerWhereInput>;
    NOT?: Array<OwnerWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
    creditCard?: InstanceType<typeof CreditCardListRelationFilter>;
    platformOrders?: InstanceType<typeof PlatformOrderListRelationFilter>;
    outletes?: InstanceType<typeof OutletListRelationFilter>;
    laundryItemRequests?: InstanceType<typeof LaundryItemRequestListRelationFilter>;
    schedulesCreated?: InstanceType<typeof ScheduleListRelationFilter>;
    TermOrFaqsCreated?: InstanceType<typeof TermOrFaqListRelationFilter>;
    onVoucherSetting?: InstanceType<typeof VoucherSettingListRelationFilter>;
}
export declare class Owner {
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    user?: InstanceType<typeof User>;
    creditCard?: Array<CreditCard>;
    platformOrders?: Array<PlatformOrder>;
    outletes?: Array<Outlet>;
    laundryItemRequests?: Array<LaundryItemRequest>;
    schedulesCreated?: Array<Schedule>;
    TermOrFaqsCreated?: Array<TermOrFaq>;
    onVoucherSetting?: Array<VoucherSetting>;
    _count?: InstanceType<typeof OwnerCount>;
}
export declare class UpdateManyOwnerArgs {
    data: InstanceType<typeof OwnerUpdateManyMutationInput>;
    where?: InstanceType<typeof OwnerWhereInput>;
}
export declare class UpdateOneOwnerArgs {
    data: InstanceType<typeof OwnerUpdateInput>;
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
}
export declare class UpsertOneOwnerArgs {
    where: Prisma.AtLeast<OwnerWhereUniqueInput, 'userId'>;
    create: InstanceType<typeof OwnerCreateInput>;
    update: InstanceType<typeof OwnerUpdateInput>;
}
export declare class AggregatePayment {
    _count?: InstanceType<typeof PaymentCountAggregate>;
    _avg?: InstanceType<typeof PaymentAvgAggregate>;
    _sum?: InstanceType<typeof PaymentSumAggregate>;
    _min?: InstanceType<typeof PaymentMinAggregate>;
    _max?: InstanceType<typeof PaymentMaxAggregate>;
}
export declare class CreateManyPaymentArgs {
    data: Array<PaymentCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePaymentArgs {
    data: InstanceType<typeof PaymentCreateInput>;
}
export declare class DeleteManyPaymentArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
}
export declare class DeleteOnePaymentArgs {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class FindFirstPaymentOrThrowArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PaymentScalarFieldEnum>;
}
export declare class FindFirstPaymentArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PaymentScalarFieldEnum>;
}
export declare class FindManyPaymentArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PaymentScalarFieldEnum>;
}
export declare class FindUniquePaymentOrThrowArgs {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class FindUniquePaymentArgs {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class PaymentAggregateArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
    orderBy?: Array<PaymentOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PaymentCountAggregateInput>;
    _avg?: InstanceType<typeof PaymentAvgAggregateInput>;
    _sum?: InstanceType<typeof PaymentSumAggregateInput>;
    _min?: InstanceType<typeof PaymentMinAggregateInput>;
    _max?: InstanceType<typeof PaymentMaxAggregateInput>;
}
export declare class PaymentAvgAggregateInput {
    id?: true;
    amount?: true;
    transactionId?: true;
    edcMachineId?: true;
}
export declare class PaymentAvgAggregate {
    id?: number;
    amount?: number;
    transactionId?: number;
    edcMachineId?: number;
}
export declare class PaymentAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: keyof typeof SortOrder;
}
export declare class PaymentCountAggregateInput {
    id?: true;
    amount?: true;
    createdAt?: true;
    updatedAt?: true;
    method?: true;
    status?: true;
    transactionId?: true;
    edcMachineId?: true;
    _all?: true;
}
export declare class PaymentCountAggregate {
    id: number;
    amount: number;
    createdAt: number;
    updatedAt: number;
    method: number;
    status: number;
    transactionId: number;
    edcMachineId: number;
    _all: number;
}
export declare class PaymentCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    method?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: keyof typeof SortOrder;
}
export declare class PaymentCreateManyEdcMachineInputEnvelope {
    data: Array<PaymentCreateManyEdcMachineInput>;
    skipDuplicates?: boolean;
}
export declare class PaymentCreateManyEdcMachineInput {
    id?: number;
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
}
export declare class PaymentCreateManyInput {
    id?: number;
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
    edcMachineId?: number;
}
export declare class PaymentCreateNestedManyWithoutEdcMachineInput {
    create?: Array<PaymentCreateWithoutEdcMachineInput>;
    connectOrCreate?: Array<PaymentCreateOrConnectWithoutEdcMachineInput>;
    createMany?: InstanceType<typeof PaymentCreateManyEdcMachineInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
}
export declare class PaymentCreateNestedOneWithoutTransactionInput {
    create?: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutTransactionInput>;
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class PaymentCreateOrConnectWithoutEdcMachineInput {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    create: InstanceType<typeof PaymentCreateWithoutEdcMachineInput>;
}
export declare class PaymentCreateOrConnectWithoutTransactionInput {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    create: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
}
export declare class PaymentCreateWithoutEdcMachineInput {
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transaction: InstanceType<typeof TransactionCreateNestedOneWithoutPaymentInput>;
}
export declare class PaymentCreateWithoutTransactionInput {
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    edcMachine?: InstanceType<typeof EdcMachineCreateNestedOneWithoutPaymentsInput>;
}
export declare class PaymentCreateInput {
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transaction: InstanceType<typeof TransactionCreateNestedOneWithoutPaymentInput>;
    edcMachine?: InstanceType<typeof EdcMachineCreateNestedOneWithoutPaymentsInput>;
}
export declare class PaymentGroupByArgs {
    where?: InstanceType<typeof PaymentWhereInput>;
    orderBy?: Array<PaymentOrderByWithAggregationInput>;
    by: Array<keyof typeof PaymentScalarFieldEnum>;
    having?: InstanceType<typeof PaymentScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PaymentCountAggregateInput>;
    _avg?: InstanceType<typeof PaymentAvgAggregateInput>;
    _sum?: InstanceType<typeof PaymentSumAggregateInput>;
    _min?: InstanceType<typeof PaymentMinAggregateInput>;
    _max?: InstanceType<typeof PaymentMaxAggregateInput>;
}
export declare class PaymentGroupBy {
    id: number;
    amount: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
    edcMachineId?: number;
    _count?: InstanceType<typeof PaymentCountAggregate>;
    _avg?: InstanceType<typeof PaymentAvgAggregate>;
    _sum?: InstanceType<typeof PaymentSumAggregate>;
    _min?: InstanceType<typeof PaymentMinAggregate>;
    _max?: InstanceType<typeof PaymentMaxAggregate>;
}
export declare class PaymentListRelationFilter {
    every?: InstanceType<typeof PaymentWhereInput>;
    some?: InstanceType<typeof PaymentWhereInput>;
    none?: InstanceType<typeof PaymentWhereInput>;
}
export declare class PaymentMaxAggregateInput {
    id?: true;
    amount?: true;
    createdAt?: true;
    updatedAt?: true;
    method?: true;
    status?: true;
    transactionId?: true;
    edcMachineId?: true;
}
export declare class PaymentMaxAggregate {
    id?: number;
    amount?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    method?: keyof typeof PaymentMethod;
    status?: keyof typeof PaymentStatus;
    transactionId?: number;
    edcMachineId?: number;
}
export declare class PaymentMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    method?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: keyof typeof SortOrder;
}
export declare class PaymentMinAggregateInput {
    id?: true;
    amount?: true;
    createdAt?: true;
    updatedAt?: true;
    method?: true;
    status?: true;
    transactionId?: true;
    edcMachineId?: true;
}
export declare class PaymentMinAggregate {
    id?: number;
    amount?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    method?: keyof typeof PaymentMethod;
    status?: keyof typeof PaymentStatus;
    transactionId?: number;
    edcMachineId?: number;
}
export declare class PaymentMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    method?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: keyof typeof SortOrder;
}
export declare class PaymentNullableRelationFilter {
    is?: InstanceType<typeof PaymentWhereInput>;
    isNot?: InstanceType<typeof PaymentWhereInput>;
}
export declare class PaymentOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class PaymentOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    method?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof PaymentCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PaymentAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PaymentMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PaymentMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PaymentSumOrderByAggregateInput>;
}
export declare class PaymentOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    method?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: InstanceType<typeof SortOrderInput>;
    transaction?: InstanceType<typeof TransactionOrderByWithRelationInput>;
    edcMachine?: InstanceType<typeof EdcMachineOrderByWithRelationInput>;
}
export declare class PaymentScalarWhereWithAggregatesInput {
    AND?: Array<PaymentScalarWhereWithAggregatesInput>;
    OR?: Array<PaymentScalarWhereWithAggregatesInput>;
    NOT?: Array<PaymentScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    amount?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    method?: InstanceType<typeof EnumPaymentMethodWithAggregatesFilter>;
    status?: InstanceType<typeof EnumPaymentStatusWithAggregatesFilter>;
    transactionId?: InstanceType<typeof IntWithAggregatesFilter>;
    edcMachineId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class PaymentScalarWhereInput {
    AND?: Array<PaymentScalarWhereInput>;
    OR?: Array<PaymentScalarWhereInput>;
    NOT?: Array<PaymentScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    method?: InstanceType<typeof EnumPaymentMethodFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    transactionId?: InstanceType<typeof IntFilter>;
    edcMachineId?: InstanceType<typeof IntNullableFilter>;
}
export declare class PaymentSumAggregateInput {
    id?: true;
    amount?: true;
    transactionId?: true;
    edcMachineId?: true;
}
export declare class PaymentSumAggregate {
    id?: number;
    amount?: number;
    transactionId?: number;
    edcMachineId?: number;
}
export declare class PaymentSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    transactionId?: keyof typeof SortOrder;
    edcMachineId?: keyof typeof SortOrder;
}
export declare class PaymentUncheckedCreateNestedManyWithoutEdcMachineInput {
    create?: Array<PaymentCreateWithoutEdcMachineInput>;
    connectOrCreate?: Array<PaymentCreateOrConnectWithoutEdcMachineInput>;
    createMany?: InstanceType<typeof PaymentCreateManyEdcMachineInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
}
export declare class PaymentUncheckedCreateNestedOneWithoutTransactionInput {
    create?: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutTransactionInput>;
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class PaymentUncheckedCreateWithoutEdcMachineInput {
    id?: number;
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
}
export declare class PaymentUncheckedCreateWithoutTransactionInput {
    id?: number;
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    edcMachineId?: number;
}
export declare class PaymentUncheckedCreateInput {
    id?: number;
    amount: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
    edcMachineId?: number;
}
export declare class PaymentUncheckedUpdateManyWithoutEdcMachineNestedInput {
    create?: Array<PaymentCreateWithoutEdcMachineInput>;
    connectOrCreate?: Array<PaymentCreateOrConnectWithoutEdcMachineInput>;
    upsert?: Array<PaymentUpsertWithWhereUniqueWithoutEdcMachineInput>;
    createMany?: InstanceType<typeof PaymentCreateManyEdcMachineInputEnvelope>;
    set?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    disconnect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    delete?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    connect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    update?: Array<PaymentUpdateWithWhereUniqueWithoutEdcMachineInput>;
    updateMany?: Array<PaymentUpdateManyWithWhereWithoutEdcMachineInput>;
    deleteMany?: Array<PaymentScalarWhereInput>;
}
export declare class PaymentUncheckedUpdateManyWithoutEdcMachineInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transactionId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PaymentUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transactionId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    edcMachineId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class PaymentUncheckedUpdateOneWithoutTransactionNestedInput {
    create?: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutTransactionInput>;
    upsert?: InstanceType<typeof PaymentUpsertWithoutTransactionInput>;
    disconnect?: InstanceType<typeof PaymentWhereInput>;
    delete?: InstanceType<typeof PaymentWhereInput>;
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    update?: InstanceType<typeof PaymentUpdateToOneWithWhereWithoutTransactionInput>;
}
export declare class PaymentUncheckedUpdateWithoutEdcMachineInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transactionId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PaymentUncheckedUpdateWithoutTransactionInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    edcMachineId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class PaymentUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transactionId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    edcMachineId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class PaymentUpdateManyMutationInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
}
export declare class PaymentUpdateManyWithWhereWithoutEdcMachineInput {
    where: InstanceType<typeof PaymentScalarWhereInput>;
    data: InstanceType<typeof PaymentUpdateManyMutationInput>;
}
export declare class PaymentUpdateManyWithoutEdcMachineNestedInput {
    create?: Array<PaymentCreateWithoutEdcMachineInput>;
    connectOrCreate?: Array<PaymentCreateOrConnectWithoutEdcMachineInput>;
    upsert?: Array<PaymentUpsertWithWhereUniqueWithoutEdcMachineInput>;
    createMany?: InstanceType<typeof PaymentCreateManyEdcMachineInputEnvelope>;
    set?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    disconnect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    delete?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    connect?: Array<Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>>;
    update?: Array<PaymentUpdateWithWhereUniqueWithoutEdcMachineInput>;
    updateMany?: Array<PaymentUpdateManyWithWhereWithoutEdcMachineInput>;
    deleteMany?: Array<PaymentScalarWhereInput>;
}
export declare class PaymentUpdateOneWithoutTransactionNestedInput {
    create?: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
    connectOrCreate?: InstanceType<typeof PaymentCreateOrConnectWithoutTransactionInput>;
    upsert?: InstanceType<typeof PaymentUpsertWithoutTransactionInput>;
    disconnect?: InstanceType<typeof PaymentWhereInput>;
    delete?: InstanceType<typeof PaymentWhereInput>;
    connect?: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    update?: InstanceType<typeof PaymentUpdateToOneWithWhereWithoutTransactionInput>;
}
export declare class PaymentUpdateToOneWithWhereWithoutTransactionInput {
    where?: InstanceType<typeof PaymentWhereInput>;
    data: InstanceType<typeof PaymentUpdateWithoutTransactionInput>;
}
export declare class PaymentUpdateWithWhereUniqueWithoutEdcMachineInput {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    data: InstanceType<typeof PaymentUpdateWithoutEdcMachineInput>;
}
export declare class PaymentUpdateWithoutEdcMachineInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transaction?: InstanceType<typeof TransactionUpdateOneRequiredWithoutPaymentNestedInput>;
}
export declare class PaymentUpdateWithoutTransactionInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    edcMachine?: InstanceType<typeof EdcMachineUpdateOneWithoutPaymentsNestedInput>;
}
export declare class PaymentUpdateInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    method?: InstanceType<typeof EnumPaymentMethodFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumPaymentStatusFieldUpdateOperationsInput>;
    transaction?: InstanceType<typeof TransactionUpdateOneRequiredWithoutPaymentNestedInput>;
    edcMachine?: InstanceType<typeof EdcMachineUpdateOneWithoutPaymentsNestedInput>;
}
export declare class PaymentUpsertWithWhereUniqueWithoutEdcMachineInput {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    update: InstanceType<typeof PaymentUpdateWithoutEdcMachineInput>;
    create: InstanceType<typeof PaymentCreateWithoutEdcMachineInput>;
}
export declare class PaymentUpsertWithoutTransactionInput {
    update: InstanceType<typeof PaymentUpdateWithoutTransactionInput>;
    create: InstanceType<typeof PaymentCreateWithoutTransactionInput>;
    where?: InstanceType<typeof PaymentWhereInput>;
}
export declare class PaymentWhereUniqueInput {
    id?: number;
    transactionId?: number;
    AND?: Array<PaymentWhereInput>;
    OR?: Array<PaymentWhereInput>;
    NOT?: Array<PaymentWhereInput>;
    amount?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    method?: InstanceType<typeof EnumPaymentMethodFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    edcMachineId?: InstanceType<typeof IntNullableFilter>;
    transaction?: InstanceType<typeof TransactionRelationFilter>;
    edcMachine?: InstanceType<typeof EdcMachineNullableRelationFilter>;
}
export declare class PaymentWhereInput {
    AND?: Array<PaymentWhereInput>;
    OR?: Array<PaymentWhereInput>;
    NOT?: Array<PaymentWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    method?: InstanceType<typeof EnumPaymentMethodFilter>;
    status?: InstanceType<typeof EnumPaymentStatusFilter>;
    transactionId?: InstanceType<typeof IntFilter>;
    edcMachineId?: InstanceType<typeof IntNullableFilter>;
    transaction?: InstanceType<typeof TransactionRelationFilter>;
    edcMachine?: InstanceType<typeof EdcMachineNullableRelationFilter>;
}
export declare class Payment {
    id: number;
    amount: number;
    createdAt: Date;
    updatedAt: Date;
    method: keyof typeof PaymentMethod;
    status: keyof typeof PaymentStatus;
    transactionId: number;
    edcMachineId: number | null;
    transaction?: InstanceType<typeof Transaction>;
    edcMachine?: InstanceType<typeof EdcMachine> | null;
}
export declare class UpdateManyPaymentArgs {
    data: InstanceType<typeof PaymentUpdateManyMutationInput>;
    where?: InstanceType<typeof PaymentWhereInput>;
}
export declare class UpdateOnePaymentArgs {
    data: InstanceType<typeof PaymentUpdateInput>;
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
}
export declare class UpsertOnePaymentArgs {
    where: Prisma.AtLeast<PaymentWhereUniqueInput, 'id' | 'transactionId'>;
    create: InstanceType<typeof PaymentCreateInput>;
    update: InstanceType<typeof PaymentUpdateInput>;
}
export declare class AggregatePhoneCountryCode {
    _count?: InstanceType<typeof PhoneCountryCodeCountAggregate>;
    _avg?: InstanceType<typeof PhoneCountryCodeAvgAggregate>;
    _sum?: InstanceType<typeof PhoneCountryCodeSumAggregate>;
    _min?: InstanceType<typeof PhoneCountryCodeMinAggregate>;
    _max?: InstanceType<typeof PhoneCountryCodeMaxAggregate>;
}
export declare class CreateManyPhoneCountryCodeArgs {
    data: Array<PhoneCountryCodeCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePhoneCountryCodeArgs {
    data: InstanceType<typeof PhoneCountryCodeCreateInput>;
}
export declare class DeleteManyPhoneCountryCodeArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
}
export declare class DeleteOnePhoneCountryCodeArgs {
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
}
export declare class FindFirstPhoneCountryCodeOrThrowArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    orderBy?: Array<PhoneCountryCodeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PhoneCountryCodeScalarFieldEnum>;
}
export declare class FindFirstPhoneCountryCodeArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    orderBy?: Array<PhoneCountryCodeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PhoneCountryCodeScalarFieldEnum>;
}
export declare class FindManyPhoneCountryCodeArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    orderBy?: Array<PhoneCountryCodeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PhoneCountryCodeScalarFieldEnum>;
}
export declare class FindUniquePhoneCountryCodeOrThrowArgs {
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
}
export declare class FindUniquePhoneCountryCodeArgs {
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
}
export declare class PhoneCountryCodeAggregateArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    orderBy?: Array<PhoneCountryCodeOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PhoneCountryCodeCountAggregateInput>;
    _avg?: InstanceType<typeof PhoneCountryCodeAvgAggregateInput>;
    _sum?: InstanceType<typeof PhoneCountryCodeSumAggregateInput>;
    _min?: InstanceType<typeof PhoneCountryCodeMinAggregateInput>;
    _max?: InstanceType<typeof PhoneCountryCodeMaxAggregateInput>;
}
export declare class PhoneCountryCodeAvgAggregateInput {
    phoneCode?: true;
}
export declare class PhoneCountryCodeAvgAggregate {
    phoneCode?: number;
}
export declare class PhoneCountryCodeAvgOrderByAggregateInput {
    phoneCode?: keyof typeof SortOrder;
}
export declare class PhoneCountryCodeCountAggregateInput {
    phoneCode?: true;
    country?: true;
    _all?: true;
}
export declare class PhoneCountryCodeCountAggregate {
    phoneCode: number;
    country: number;
    _all: number;
}
export declare class PhoneCountryCodeCountOrderByAggregateInput {
    phoneCode?: keyof typeof SortOrder;
    country?: keyof typeof SortOrder;
}
export declare class PhoneCountryCodeCount {
    User?: number;
}
export declare class PhoneCountryCodeCreateManyInput {
    phoneCode: number;
    country: string;
}
export declare class PhoneCountryCodeCreateNestedOneWithoutUserInput {
    create?: InstanceType<typeof PhoneCountryCodeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof PhoneCountryCodeCreateOrConnectWithoutUserInput>;
    connect?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
}
export declare class PhoneCountryCodeCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    create: InstanceType<typeof PhoneCountryCodeCreateWithoutUserInput>;
}
export declare class PhoneCountryCodeCreateWithoutUserInput {
    phoneCode: number;
    country: string;
}
export declare class PhoneCountryCodeCreateInput {
    phoneCode: number;
    country: string;
    User?: InstanceType<typeof UserCreateNestedManyWithoutPhoneCountryCodeInput>;
}
export declare class PhoneCountryCodeGroupByArgs {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    orderBy?: Array<PhoneCountryCodeOrderByWithAggregationInput>;
    by: Array<keyof typeof PhoneCountryCodeScalarFieldEnum>;
    having?: InstanceType<typeof PhoneCountryCodeScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PhoneCountryCodeCountAggregateInput>;
    _avg?: InstanceType<typeof PhoneCountryCodeAvgAggregateInput>;
    _sum?: InstanceType<typeof PhoneCountryCodeSumAggregateInput>;
    _min?: InstanceType<typeof PhoneCountryCodeMinAggregateInput>;
    _max?: InstanceType<typeof PhoneCountryCodeMaxAggregateInput>;
}
export declare class PhoneCountryCodeGroupBy {
    phoneCode: number;
    country: string;
    _count?: InstanceType<typeof PhoneCountryCodeCountAggregate>;
    _avg?: InstanceType<typeof PhoneCountryCodeAvgAggregate>;
    _sum?: InstanceType<typeof PhoneCountryCodeSumAggregate>;
    _min?: InstanceType<typeof PhoneCountryCodeMinAggregate>;
    _max?: InstanceType<typeof PhoneCountryCodeMaxAggregate>;
}
export declare class PhoneCountryCodeMaxAggregateInput {
    phoneCode?: true;
    country?: true;
}
export declare class PhoneCountryCodeMaxAggregate {
    phoneCode?: number;
    country?: string;
}
export declare class PhoneCountryCodeMaxOrderByAggregateInput {
    phoneCode?: keyof typeof SortOrder;
    country?: keyof typeof SortOrder;
}
export declare class PhoneCountryCodeMinAggregateInput {
    phoneCode?: true;
    country?: true;
}
export declare class PhoneCountryCodeMinAggregate {
    phoneCode?: number;
    country?: string;
}
export declare class PhoneCountryCodeMinOrderByAggregateInput {
    phoneCode?: keyof typeof SortOrder;
    country?: keyof typeof SortOrder;
}
export declare class PhoneCountryCodeOrderByWithAggregationInput {
    phoneCode?: keyof typeof SortOrder;
    country?: keyof typeof SortOrder;
    _count?: InstanceType<typeof PhoneCountryCodeCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PhoneCountryCodeAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PhoneCountryCodeMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PhoneCountryCodeMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PhoneCountryCodeSumOrderByAggregateInput>;
}
export declare class PhoneCountryCodeOrderByWithRelationInput {
    phoneCode?: keyof typeof SortOrder;
    country?: keyof typeof SortOrder;
    User?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}
export declare class PhoneCountryCodeRelationFilter {
    is?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    isNot?: InstanceType<typeof PhoneCountryCodeWhereInput>;
}
export declare class PhoneCountryCodeScalarWhereWithAggregatesInput {
    AND?: Array<PhoneCountryCodeScalarWhereWithAggregatesInput>;
    OR?: Array<PhoneCountryCodeScalarWhereWithAggregatesInput>;
    NOT?: Array<PhoneCountryCodeScalarWhereWithAggregatesInput>;
    phoneCode?: InstanceType<typeof IntWithAggregatesFilter>;
    country?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class PhoneCountryCodeSumAggregateInput {
    phoneCode?: true;
}
export declare class PhoneCountryCodeSumAggregate {
    phoneCode?: number;
}
export declare class PhoneCountryCodeSumOrderByAggregateInput {
    phoneCode?: keyof typeof SortOrder;
}
export declare class PhoneCountryCodeUncheckedCreateWithoutUserInput {
    phoneCode: number;
    country: string;
}
export declare class PhoneCountryCodeUncheckedCreateInput {
    phoneCode: number;
    country: string;
    User?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutPhoneCountryCodeInput>;
}
export declare class PhoneCountryCodeUncheckedUpdateManyInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PhoneCountryCodeUncheckedUpdateWithoutUserInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PhoneCountryCodeUncheckedUpdateInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    User?: InstanceType<typeof UserUncheckedUpdateManyWithoutPhoneCountryCodeNestedInput>;
}
export declare class PhoneCountryCodeUpdateManyMutationInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput {
    create?: InstanceType<typeof PhoneCountryCodeCreateWithoutUserInput>;
    connectOrCreate?: InstanceType<typeof PhoneCountryCodeCreateOrConnectWithoutUserInput>;
    upsert?: InstanceType<typeof PhoneCountryCodeUpsertWithoutUserInput>;
    connect?: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    update?: InstanceType<typeof PhoneCountryCodeUpdateToOneWithWhereWithoutUserInput>;
}
export declare class PhoneCountryCodeUpdateToOneWithWhereWithoutUserInput {
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
    data: InstanceType<typeof PhoneCountryCodeUpdateWithoutUserInput>;
}
export declare class PhoneCountryCodeUpdateWithoutUserInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PhoneCountryCodeUpdateInput {
    phoneCode?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    country?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    User?: InstanceType<typeof UserUpdateManyWithoutPhoneCountryCodeNestedInput>;
}
export declare class PhoneCountryCodeUpsertWithoutUserInput {
    update: InstanceType<typeof PhoneCountryCodeUpdateWithoutUserInput>;
    create: InstanceType<typeof PhoneCountryCodeCreateWithoutUserInput>;
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
}
export declare class PhoneCountryCodeWhereUniqueInput {
    phoneCode?: number;
    AND?: Array<PhoneCountryCodeWhereInput>;
    OR?: Array<PhoneCountryCodeWhereInput>;
    NOT?: Array<PhoneCountryCodeWhereInput>;
    country?: InstanceType<typeof StringFilter>;
    User?: InstanceType<typeof UserListRelationFilter>;
}
export declare class PhoneCountryCodeWhereInput {
    AND?: Array<PhoneCountryCodeWhereInput>;
    OR?: Array<PhoneCountryCodeWhereInput>;
    NOT?: Array<PhoneCountryCodeWhereInput>;
    phoneCode?: InstanceType<typeof IntFilter>;
    country?: InstanceType<typeof StringFilter>;
    User?: InstanceType<typeof UserListRelationFilter>;
}
export declare class PhoneCountryCode {
    phoneCode: number;
    country: string;
    User?: Array<User>;
    _count?: InstanceType<typeof PhoneCountryCodeCount>;
}
export declare class UpdateManyPhoneCountryCodeArgs {
    data: InstanceType<typeof PhoneCountryCodeUpdateManyMutationInput>;
    where?: InstanceType<typeof PhoneCountryCodeWhereInput>;
}
export declare class UpdateOnePhoneCountryCodeArgs {
    data: InstanceType<typeof PhoneCountryCodeUpdateInput>;
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
}
export declare class UpsertOnePhoneCountryCodeArgs {
    where: Prisma.AtLeast<PhoneCountryCodeWhereUniqueInput, 'phoneCode'>;
    create: InstanceType<typeof PhoneCountryCodeCreateInput>;
    update: InstanceType<typeof PhoneCountryCodeUpdateInput>;
}
export declare class AggregatePlatformItem {
    _count?: InstanceType<typeof PlatformItemCountAggregate>;
    _avg?: InstanceType<typeof PlatformItemAvgAggregate>;
    _sum?: InstanceType<typeof PlatformItemSumAggregate>;
    _min?: InstanceType<typeof PlatformItemMinAggregate>;
    _max?: InstanceType<typeof PlatformItemMaxAggregate>;
}
export declare class CreateManyPlatformItemArgs {
    data: Array<PlatformItemCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePlatformItemArgs {
    data: InstanceType<typeof PlatformItemCreateInput>;
}
export declare class DeleteManyPlatformItemArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class DeleteOnePlatformItemArgs {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class FindFirstPlatformItemOrThrowArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    orderBy?: Array<PlatformItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformItemScalarFieldEnum>;
}
export declare class FindFirstPlatformItemArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    orderBy?: Array<PlatformItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformItemScalarFieldEnum>;
}
export declare class FindManyPlatformItemArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    orderBy?: Array<PlatformItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformItemScalarFieldEnum>;
}
export declare class FindUniquePlatformItemOrThrowArgs {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class FindUniquePlatformItemArgs {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class PlatformItemAggregateArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    orderBy?: Array<PlatformItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformItemCountAggregateInput>;
    _avg?: InstanceType<typeof PlatformItemAvgAggregateInput>;
    _sum?: InstanceType<typeof PlatformItemSumAggregateInput>;
    _min?: InstanceType<typeof PlatformItemMinAggregateInput>;
    _max?: InstanceType<typeof PlatformItemMaxAggregateInput>;
}
export declare class PlatformItemAvgAggregateInput {
    cost?: true;
    salePrice?: true;
    unitOfMeasureId?: true;
}
export declare class PlatformItemAvgAggregate {
    cost?: number;
    salePrice?: number;
    unitOfMeasureId?: number;
}
export declare class PlatformItemAvgOrderByAggregateInput {
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class PlatformItemCountAggregateInput {
    id?: true;
    name?: true;
    cost?: true;
    salePrice?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    unitOfMeasureId?: true;
    _all?: true;
}
export declare class PlatformItemCountAggregate {
    id: number;
    name: number;
    cost: number;
    salePrice: number;
    description: number;
    createdAt: number;
    updatedAt: number;
    unitOfMeasureId: number;
    _all: number;
}
export declare class PlatformItemCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class PlatformItemCount {
    stockItems?: number;
    carts?: number;
    images?: number;
}
export declare class PlatformItemCreateManyUnitOfMeasureInputEnvelope {
    data: Array<PlatformItemCreateManyUnitOfMeasureInput>;
    skipDuplicates?: boolean;
}
export declare class PlatformItemCreateManyUnitOfMeasureInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class PlatformItemCreateManyInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
}
export declare class PlatformItemCreateNestedManyWithoutUnitOfMeasureInput {
    create?: Array<PlatformItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<PlatformItemCreateOrConnectWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof PlatformItemCreateManyUnitOfMeasureInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
}
export declare class PlatformItemCreateNestedOneWithoutCartsInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutCartsInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutCartsInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class PlatformItemCreateNestedOneWithoutImagesInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutImagesInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutImagesInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class PlatformItemCreateNestedOneWithoutStockItemsInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutStockItemsInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutStockItemsInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class PlatformItemCreateOrConnectWithoutCartsInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformItemCreateWithoutCartsInput>;
}
export declare class PlatformItemCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformItemCreateWithoutImagesInput>;
}
export declare class PlatformItemCreateOrConnectWithoutStockItemsInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformItemCreateWithoutStockItemsInput>;
}
export declare class PlatformItemCreateOrConnectWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformItemCreateWithoutUnitOfMeasureInput>;
}
export declare class PlatformItemCreateWithoutCartsInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    stockItems?: InstanceType<typeof StockItemCreateNestedManyWithoutPlatformItemInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutPlatformItemsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemCreateWithoutImagesInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    stockItems?: InstanceType<typeof StockItemCreateNestedManyWithoutPlatformItemInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutPlatformItemsInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemCreateWithoutStockItemsInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutPlatformItemsInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemCreateWithoutUnitOfMeasureInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    stockItems?: InstanceType<typeof StockItemCreateNestedManyWithoutPlatformItemInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemCreateInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    stockItems?: InstanceType<typeof StockItemCreateNestedManyWithoutPlatformItemInput>;
    unitOfMeasure: InstanceType<typeof UnitOfMeasureCreateNestedOneWithoutPlatformItemsInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemGroupByArgs {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    orderBy?: Array<PlatformItemOrderByWithAggregationInput>;
    by: Array<keyof typeof PlatformItemScalarFieldEnum>;
    having?: InstanceType<typeof PlatformItemScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformItemCountAggregateInput>;
    _avg?: InstanceType<typeof PlatformItemAvgAggregateInput>;
    _sum?: InstanceType<typeof PlatformItemSumAggregateInput>;
    _min?: InstanceType<typeof PlatformItemMinAggregateInput>;
    _max?: InstanceType<typeof PlatformItemMaxAggregateInput>;
}
export declare class PlatformItemGroupBy {
    id: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    unitOfMeasureId: number;
    _count?: InstanceType<typeof PlatformItemCountAggregate>;
    _avg?: InstanceType<typeof PlatformItemAvgAggregate>;
    _sum?: InstanceType<typeof PlatformItemSumAggregate>;
    _min?: InstanceType<typeof PlatformItemMinAggregate>;
    _max?: InstanceType<typeof PlatformItemMaxAggregate>;
}
export declare class PlatformItemListRelationFilter {
    every?: InstanceType<typeof PlatformItemWhereInput>;
    some?: InstanceType<typeof PlatformItemWhereInput>;
    none?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class PlatformItemMaxAggregateInput {
    id?: true;
    name?: true;
    cost?: true;
    salePrice?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    unitOfMeasureId?: true;
}
export declare class PlatformItemMaxAggregate {
    id?: string;
    name?: string;
    cost?: number;
    salePrice?: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId?: number;
}
export declare class PlatformItemMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class PlatformItemMinAggregateInput {
    id?: true;
    name?: true;
    cost?: true;
    salePrice?: true;
    description?: true;
    createdAt?: true;
    updatedAt?: true;
    unitOfMeasureId?: true;
}
export declare class PlatformItemMinAggregate {
    id?: string;
    name?: string;
    cost?: number;
    salePrice?: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId?: number;
}
export declare class PlatformItemMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class PlatformItemNullableRelationFilter {
    is?: InstanceType<typeof PlatformItemWhereInput>;
    isNot?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class PlatformItemOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class PlatformItemOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cost?: InstanceType<typeof SortOrderInput>;
    salePrice?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof PlatformItemCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PlatformItemAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PlatformItemMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PlatformItemMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PlatformItemSumOrderByAggregateInput>;
}
export declare class PlatformItemOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cost?: InstanceType<typeof SortOrderInput>;
    salePrice?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
    stockItems?: InstanceType<typeof StockItemOrderByRelationAggregateInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureOrderByWithRelationInput>;
    carts?: InstanceType<typeof CartOrderByRelationAggregateInput>;
    images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
}
export declare class PlatformItemScalarWhereWithAggregatesInput {
    AND?: Array<PlatformItemScalarWhereWithAggregatesInput>;
    OR?: Array<PlatformItemScalarWhereWithAggregatesInput>;
    NOT?: Array<PlatformItemScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    cost?: InstanceType<typeof FloatNullableWithAggregatesFilter>;
    salePrice?: InstanceType<typeof FloatWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    unitOfMeasureId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class PlatformItemScalarWhereInput {
    AND?: Array<PlatformItemScalarWhereInput>;
    OR?: Array<PlatformItemScalarWhereInput>;
    NOT?: Array<PlatformItemScalarWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    cost?: InstanceType<typeof FloatNullableFilter>;
    salePrice?: InstanceType<typeof FloatFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
}
export declare class PlatformItemSumAggregateInput {
    cost?: true;
    salePrice?: true;
    unitOfMeasureId?: true;
}
export declare class PlatformItemSumAggregate {
    cost?: number;
    salePrice?: number;
    unitOfMeasureId?: number;
}
export declare class PlatformItemSumOrderByAggregateInput {
    cost?: keyof typeof SortOrder;
    salePrice?: keyof typeof SortOrder;
    unitOfMeasureId?: keyof typeof SortOrder;
}
export declare class PlatformItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput {
    create?: Array<PlatformItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<PlatformItemCreateOrConnectWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof PlatformItemCreateManyUnitOfMeasureInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
}
export declare class PlatformItemUncheckedCreateWithoutCartsInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
    stockItems?: InstanceType<typeof StockItemUncheckedCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemUncheckedCreateWithoutImagesInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
    stockItems?: InstanceType<typeof StockItemUncheckedCreateNestedManyWithoutPlatformItemInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemUncheckedCreateWithoutStockItemsInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemUncheckedCreateWithoutUnitOfMeasureInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    stockItems?: InstanceType<typeof StockItemUncheckedCreateNestedManyWithoutPlatformItemInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemUncheckedCreateInput {
    id?: string;
    name: string;
    cost?: number;
    salePrice: number;
    description?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    unitOfMeasureId: number;
    stockItems?: InstanceType<typeof StockItemUncheckedCreateNestedManyWithoutPlatformItemInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformItemInput>;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutPlatformItemInput>;
}
export declare class PlatformItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput {
    create?: Array<PlatformItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<PlatformItemCreateOrConnectWithoutUnitOfMeasureInput>;
    upsert?: Array<PlatformItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof PlatformItemCreateManyUnitOfMeasureInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    update?: Array<PlatformItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput>;
    updateMany?: Array<PlatformItemUpdateManyWithWhereWithoutUnitOfMeasureInput>;
    deleteMany?: Array<PlatformItemScalarWhereInput>;
}
export declare class PlatformItemUncheckedUpdateManyWithoutUnitOfMeasureInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class PlatformItemUncheckedUpdateManyInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PlatformItemUncheckedUpdateWithoutCartsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUncheckedUpdateWithoutStockItemsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUncheckedUpdateWithoutUnitOfMeasureInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUncheckedUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasureId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpdateManyMutationInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class PlatformItemUpdateManyWithWhereWithoutUnitOfMeasureInput {
    where: InstanceType<typeof PlatformItemScalarWhereInput>;
    data: InstanceType<typeof PlatformItemUpdateManyMutationInput>;
}
export declare class PlatformItemUpdateManyWithoutUnitOfMeasureNestedInput {
    create?: Array<PlatformItemCreateWithoutUnitOfMeasureInput>;
    connectOrCreate?: Array<PlatformItemCreateOrConnectWithoutUnitOfMeasureInput>;
    upsert?: Array<PlatformItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput>;
    createMany?: InstanceType<typeof PlatformItemCreateManyUnitOfMeasureInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>>;
    update?: Array<PlatformItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput>;
    updateMany?: Array<PlatformItemUpdateManyWithWhereWithoutUnitOfMeasureInput>;
    deleteMany?: Array<PlatformItemScalarWhereInput>;
}
export declare class PlatformItemUpdateOneWithoutCartsNestedInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutCartsInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutCartsInput>;
    upsert?: InstanceType<typeof PlatformItemUpsertWithoutCartsInput>;
    disconnect?: InstanceType<typeof PlatformItemWhereInput>;
    delete?: InstanceType<typeof PlatformItemWhereInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformItemUpdateToOneWithWhereWithoutCartsInput>;
}
export declare class PlatformItemUpdateOneWithoutImagesNestedInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutImagesInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutImagesInput>;
    upsert?: InstanceType<typeof PlatformItemUpsertWithoutImagesInput>;
    disconnect?: InstanceType<typeof PlatformItemWhereInput>;
    delete?: InstanceType<typeof PlatformItemWhereInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformItemUpdateToOneWithWhereWithoutImagesInput>;
}
export declare class PlatformItemUpdateOneWithoutStockItemsNestedInput {
    create?: InstanceType<typeof PlatformItemCreateWithoutStockItemsInput>;
    connectOrCreate?: InstanceType<typeof PlatformItemCreateOrConnectWithoutStockItemsInput>;
    upsert?: InstanceType<typeof PlatformItemUpsertWithoutStockItemsInput>;
    disconnect?: InstanceType<typeof PlatformItemWhereInput>;
    delete?: InstanceType<typeof PlatformItemWhereInput>;
    connect?: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformItemUpdateToOneWithWhereWithoutStockItemsInput>;
}
export declare class PlatformItemUpdateToOneWithWhereWithoutCartsInput {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    data: InstanceType<typeof PlatformItemUpdateWithoutCartsInput>;
}
export declare class PlatformItemUpdateToOneWithWhereWithoutImagesInput {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    data: InstanceType<typeof PlatformItemUpdateWithoutImagesInput>;
}
export declare class PlatformItemUpdateToOneWithWhereWithoutStockItemsInput {
    where?: InstanceType<typeof PlatformItemWhereInput>;
    data: InstanceType<typeof PlatformItemUpdateWithoutStockItemsInput>;
}
export declare class PlatformItemUpdateWithWhereUniqueWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    data: InstanceType<typeof PlatformItemUpdateWithoutUnitOfMeasureInput>;
}
export declare class PlatformItemUpdateWithoutCartsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUpdateManyWithoutPlatformItemNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutPlatformItemsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpdateWithoutImagesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUpdateManyWithoutPlatformItemNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutPlatformItemsNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpdateWithoutStockItemsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutPlatformItemsNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpdateWithoutUnitOfMeasureInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUpdateManyWithoutPlatformItemNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cost?: InstanceType<typeof NullableFloatFieldUpdateOperationsInput>;
    salePrice?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    stockItems?: InstanceType<typeof StockItemUpdateManyWithoutPlatformItemNestedInput>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureUpdateOneRequiredWithoutPlatformItemsNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformItemNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutPlatformItemNestedInput>;
}
export declare class PlatformItemUpsertWithWhereUniqueWithoutUnitOfMeasureInput {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    update: InstanceType<typeof PlatformItemUpdateWithoutUnitOfMeasureInput>;
    create: InstanceType<typeof PlatformItemCreateWithoutUnitOfMeasureInput>;
}
export declare class PlatformItemUpsertWithoutCartsInput {
    update: InstanceType<typeof PlatformItemUpdateWithoutCartsInput>;
    create: InstanceType<typeof PlatformItemCreateWithoutCartsInput>;
    where?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class PlatformItemUpsertWithoutImagesInput {
    update: InstanceType<typeof PlatformItemUpdateWithoutImagesInput>;
    create: InstanceType<typeof PlatformItemCreateWithoutImagesInput>;
    where?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class PlatformItemUpsertWithoutStockItemsInput {
    update: InstanceType<typeof PlatformItemUpdateWithoutStockItemsInput>;
    create: InstanceType<typeof PlatformItemCreateWithoutStockItemsInput>;
    where?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class PlatformItemWhereUniqueInput {
    id?: string;
    AND?: Array<PlatformItemWhereInput>;
    OR?: Array<PlatformItemWhereInput>;
    NOT?: Array<PlatformItemWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    cost?: InstanceType<typeof FloatNullableFilter>;
    salePrice?: InstanceType<typeof FloatFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
    stockItems?: InstanceType<typeof StockItemListRelationFilter>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    carts?: InstanceType<typeof CartListRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
}
export declare class PlatformItemWhereInput {
    AND?: Array<PlatformItemWhereInput>;
    OR?: Array<PlatformItemWhereInput>;
    NOT?: Array<PlatformItemWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    cost?: InstanceType<typeof FloatNullableFilter>;
    salePrice?: InstanceType<typeof FloatFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    unitOfMeasureId?: InstanceType<typeof IntFilter>;
    stockItems?: InstanceType<typeof StockItemListRelationFilter>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasureRelationFilter>;
    carts?: InstanceType<typeof CartListRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
}
export declare class PlatformItem {
    id: string;
    name: string;
    cost: number | null;
    salePrice: number;
    description: string | null;
    createdAt: Date;
    updatedAt: Date;
    unitOfMeasureId: number;
    stockItems?: Array<StockItem>;
    unitOfMeasure?: InstanceType<typeof UnitOfMeasure>;
    carts?: Array<Cart>;
    images?: Array<Image>;
    _count?: InstanceType<typeof PlatformItemCount>;
}
export declare class UpdateManyPlatformItemArgs {
    data: InstanceType<typeof PlatformItemUpdateManyMutationInput>;
    where?: InstanceType<typeof PlatformItemWhereInput>;
}
export declare class UpdateOnePlatformItemArgs {
    data: InstanceType<typeof PlatformItemUpdateInput>;
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
}
export declare class UpsertOnePlatformItemArgs {
    where: Prisma.AtLeast<PlatformItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformItemCreateInput>;
    update: InstanceType<typeof PlatformItemUpdateInput>;
}
export declare class AggregatePlatformOrder {
    _count?: InstanceType<typeof PlatformOrderCountAggregate>;
    _avg?: InstanceType<typeof PlatformOrderAvgAggregate>;
    _sum?: InstanceType<typeof PlatformOrderSumAggregate>;
    _min?: InstanceType<typeof PlatformOrderMinAggregate>;
    _max?: InstanceType<typeof PlatformOrderMaxAggregate>;
}
export declare class CreateManyPlatformOrderArgs {
    data: Array<PlatformOrderCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePlatformOrderArgs {
    data: InstanceType<typeof PlatformOrderCreateInput>;
}
export declare class DeleteManyPlatformOrderArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class DeleteOnePlatformOrderArgs {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class FindFirstPlatformOrderOrThrowArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    orderBy?: Array<PlatformOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformOrderScalarFieldEnum>;
}
export declare class FindFirstPlatformOrderArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    orderBy?: Array<PlatformOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformOrderScalarFieldEnum>;
}
export declare class FindManyPlatformOrderArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    orderBy?: Array<PlatformOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformOrderScalarFieldEnum>;
}
export declare class FindUniquePlatformOrderOrThrowArgs {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class FindUniquePlatformOrderArgs {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class PlatformOrderAggregateArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    orderBy?: Array<PlatformOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformOrderCountAggregateInput>;
    _avg?: InstanceType<typeof PlatformOrderAvgAggregateInput>;
    _sum?: InstanceType<typeof PlatformOrderSumAggregateInput>;
    _min?: InstanceType<typeof PlatformOrderMinAggregateInput>;
    _max?: InstanceType<typeof PlatformOrderMaxAggregateInput>;
}
export declare class PlatformOrderAvgAggregateInput {
    id?: true;
    addressId?: true;
    raceConditionVersion?: true;
}
export declare class PlatformOrderAvgAggregate {
    id?: number;
    addressId?: number;
    raceConditionVersion?: number;
}
export declare class PlatformOrderAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
}
export declare class PlatformOrderCountAggregateInput {
    id?: true;
    addressId?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    orderById?: true;
    _all?: true;
}
export declare class PlatformOrderCountAggregate {
    id: number;
    addressId: number;
    createdAt: number;
    updatedAt: number;
    raceConditionVersion: number;
    orderById: number;
    _all: number;
}
export declare class PlatformOrderCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
}
export declare class PlatformOrderCount {
    Invoice?: number;
    status?: number;
    carts?: number;
    Complain?: number;
}
export declare class PlatformOrderCreateManyAddressInputEnvelope {
    data: Array<PlatformOrderCreateManyAddressInput>;
    skipDuplicates?: boolean;
}
export declare class PlatformOrderCreateManyAddressInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
}
export declare class PlatformOrderCreateManyOrderByInputEnvelope {
    data: Array<PlatformOrderCreateManyOrderByInput>;
    skipDuplicates?: boolean;
}
export declare class PlatformOrderCreateManyOrderByInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
}
export declare class PlatformOrderCreateManyInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
}
export declare class PlatformOrderCreateNestedManyWithoutAddressInput {
    create?: Array<PlatformOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutAddressInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyAddressInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
}
export declare class PlatformOrderCreateNestedManyWithoutOrderByInput {
    create?: Array<PlatformOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutOrderByInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyOrderByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
}
export declare class PlatformOrderCreateNestedOneWithoutCartsInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutCartsInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutCartsInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class PlatformOrderCreateNestedOneWithoutComplainInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutComplainInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutComplainInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class PlatformOrderCreateNestedOneWithoutInvoiceInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutInvoiceInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutInvoiceInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class PlatformOrderCreateNestedOneWithoutStatusInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutStatusInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutStatusInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class PlatformOrderCreateOrConnectWithoutAddressInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutAddressInput>;
}
export declare class PlatformOrderCreateOrConnectWithoutCartsInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutCartsInput>;
}
export declare class PlatformOrderCreateOrConnectWithoutComplainInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutComplainInput>;
}
export declare class PlatformOrderCreateOrConnectWithoutInvoiceInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutInvoiceInput>;
}
export declare class PlatformOrderCreateOrConnectWithoutOrderByInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutOrderByInput>;
}
export declare class PlatformOrderCreateOrConnectWithoutStatusInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateWithoutStatusInput>;
}
export declare class PlatformOrderCreateWithoutAddressInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateWithoutCartsInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateWithoutComplainInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateWithoutInvoiceInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateWithoutOrderByInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateWithoutStatusInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    address: InstanceType<typeof AddressCreateNestedOneWithoutPlatformOrderInput>;
    orderBy: InstanceType<typeof OwnerCreateNestedOneWithoutPlatformOrdersInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderGroupByArgs {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    orderBy?: Array<PlatformOrderOrderByWithAggregationInput>;
    by: Array<keyof typeof PlatformOrderScalarFieldEnum>;
    having?: InstanceType<typeof PlatformOrderScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformOrderCountAggregateInput>;
    _avg?: InstanceType<typeof PlatformOrderAvgAggregateInput>;
    _sum?: InstanceType<typeof PlatformOrderSumAggregateInput>;
    _min?: InstanceType<typeof PlatformOrderMinAggregateInput>;
    _max?: InstanceType<typeof PlatformOrderMaxAggregateInput>;
}
export declare class PlatformOrderGroupBy {
    id: number;
    addressId: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    raceConditionVersion: number;
    orderById: string;
    _count?: InstanceType<typeof PlatformOrderCountAggregate>;
    _avg?: InstanceType<typeof PlatformOrderAvgAggregate>;
    _sum?: InstanceType<typeof PlatformOrderSumAggregate>;
    _min?: InstanceType<typeof PlatformOrderMinAggregate>;
    _max?: InstanceType<typeof PlatformOrderMaxAggregate>;
}
export declare class PlatformOrderListRelationFilter {
    every?: InstanceType<typeof PlatformOrderWhereInput>;
    some?: InstanceType<typeof PlatformOrderWhereInput>;
    none?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderMaxAggregateInput {
    id?: true;
    addressId?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    orderById?: true;
}
export declare class PlatformOrderMaxAggregate {
    id?: number;
    addressId?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById?: string;
}
export declare class PlatformOrderMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
}
export declare class PlatformOrderMinAggregateInput {
    id?: true;
    addressId?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    orderById?: true;
}
export declare class PlatformOrderMinAggregate {
    id?: number;
    addressId?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById?: string;
}
export declare class PlatformOrderMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
}
export declare class PlatformOrderNullableRelationFilter {
    is?: InstanceType<typeof PlatformOrderWhereInput>;
    isNot?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class PlatformOrderOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
    _count?: InstanceType<typeof PlatformOrderCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PlatformOrderAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PlatformOrderMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PlatformOrderMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PlatformOrderSumOrderByAggregateInput>;
}
export declare class PlatformOrderOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
    address?: InstanceType<typeof AddressOrderByWithRelationInput>;
    orderBy?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    Invoice?: InstanceType<typeof InvoiceOrderByRelationAggregateInput>;
    status?: InstanceType<typeof OrderStatusOrderByRelationAggregateInput>;
    carts?: InstanceType<typeof CartOrderByRelationAggregateInput>;
    Complain?: InstanceType<typeof ComplainOrderByRelationAggregateInput>;
}
export declare class PlatformOrderScalarWhereWithAggregatesInput {
    AND?: Array<PlatformOrderScalarWhereWithAggregatesInput>;
    OR?: Array<PlatformOrderScalarWhereWithAggregatesInput>;
    NOT?: Array<PlatformOrderScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    addressId?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    raceConditionVersion?: InstanceType<typeof IntWithAggregatesFilter>;
    orderById?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class PlatformOrderScalarWhereInput {
    AND?: Array<PlatformOrderScalarWhereInput>;
    OR?: Array<PlatformOrderScalarWhereInput>;
    NOT?: Array<PlatformOrderScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    addressId?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    orderById?: InstanceType<typeof StringFilter>;
}
export declare class PlatformOrderSumAggregateInput {
    id?: true;
    addressId?: true;
    raceConditionVersion?: true;
}
export declare class PlatformOrderSumAggregate {
    id?: number;
    addressId?: number;
    raceConditionVersion?: number;
}
export declare class PlatformOrderSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
}
export declare class PlatformOrderUncheckedCreateNestedManyWithoutAddressInput {
    create?: Array<PlatformOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutAddressInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyAddressInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
}
export declare class PlatformOrderUncheckedCreateNestedManyWithoutOrderByInput {
    create?: Array<PlatformOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutOrderByInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyOrderByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
}
export declare class PlatformOrderUncheckedCreateWithoutAddressInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateWithoutCartsInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateWithoutComplainInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateWithoutInvoiceInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateWithoutOrderByInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateWithoutStatusInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedCreateInput {
    id?: number;
    addressId: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    carts?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutPlatformOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutPlatformOrderInput>;
}
export declare class PlatformOrderUncheckedUpdateManyWithoutAddressNestedInput {
    create?: Array<PlatformOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutAddressInput>;
    upsert?: Array<PlatformOrderUpsertWithWhereUniqueWithoutAddressInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyAddressInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    update?: Array<PlatformOrderUpdateWithWhereUniqueWithoutAddressInput>;
    updateMany?: Array<PlatformOrderUpdateManyWithWhereWithoutAddressInput>;
    deleteMany?: Array<PlatformOrderScalarWhereInput>;
}
export declare class PlatformOrderUncheckedUpdateManyWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PlatformOrderUncheckedUpdateManyWithoutOrderByNestedInput {
    create?: Array<PlatformOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutOrderByInput>;
    upsert?: Array<PlatformOrderUpsertWithWhereUniqueWithoutOrderByInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyOrderByInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    update?: Array<PlatformOrderUpdateWithWhereUniqueWithoutOrderByInput>;
    updateMany?: Array<PlatformOrderUpdateManyWithWhereWithoutOrderByInput>;
    deleteMany?: Array<PlatformOrderScalarWhereInput>;
}
export declare class PlatformOrderUncheckedUpdateManyWithoutOrderByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PlatformOrderUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutCartsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutComplainInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutInvoiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutOrderByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateWithoutStatusInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PlatformOrderUpdateManyWithWhereWithoutAddressInput {
    where: InstanceType<typeof PlatformOrderScalarWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateManyMutationInput>;
}
export declare class PlatformOrderUpdateManyWithWhereWithoutOrderByInput {
    where: InstanceType<typeof PlatformOrderScalarWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateManyMutationInput>;
}
export declare class PlatformOrderUpdateManyWithoutAddressNestedInput {
    create?: Array<PlatformOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutAddressInput>;
    upsert?: Array<PlatformOrderUpsertWithWhereUniqueWithoutAddressInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyAddressInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    update?: Array<PlatformOrderUpdateWithWhereUniqueWithoutAddressInput>;
    updateMany?: Array<PlatformOrderUpdateManyWithWhereWithoutAddressInput>;
    deleteMany?: Array<PlatformOrderScalarWhereInput>;
}
export declare class PlatformOrderUpdateManyWithoutOrderByNestedInput {
    create?: Array<PlatformOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<PlatformOrderCreateOrConnectWithoutOrderByInput>;
    upsert?: Array<PlatformOrderUpsertWithWhereUniqueWithoutOrderByInput>;
    createMany?: InstanceType<typeof PlatformOrderCreateManyOrderByInputEnvelope>;
    set?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>>;
    update?: Array<PlatformOrderUpdateWithWhereUniqueWithoutOrderByInput>;
    updateMany?: Array<PlatformOrderUpdateManyWithWhereWithoutOrderByInput>;
    deleteMany?: Array<PlatformOrderScalarWhereInput>;
}
export declare class PlatformOrderUpdateOneWithoutCartsNestedInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutCartsInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutCartsInput>;
    upsert?: InstanceType<typeof PlatformOrderUpsertWithoutCartsInput>;
    disconnect?: InstanceType<typeof PlatformOrderWhereInput>;
    delete?: InstanceType<typeof PlatformOrderWhereInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformOrderUpdateToOneWithWhereWithoutCartsInput>;
}
export declare class PlatformOrderUpdateOneWithoutComplainNestedInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutComplainInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutComplainInput>;
    upsert?: InstanceType<typeof PlatformOrderUpsertWithoutComplainInput>;
    disconnect?: InstanceType<typeof PlatformOrderWhereInput>;
    delete?: InstanceType<typeof PlatformOrderWhereInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformOrderUpdateToOneWithWhereWithoutComplainInput>;
}
export declare class PlatformOrderUpdateOneWithoutInvoiceNestedInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutInvoiceInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutInvoiceInput>;
    upsert?: InstanceType<typeof PlatformOrderUpsertWithoutInvoiceInput>;
    disconnect?: InstanceType<typeof PlatformOrderWhereInput>;
    delete?: InstanceType<typeof PlatformOrderWhereInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformOrderUpdateToOneWithWhereWithoutInvoiceInput>;
}
export declare class PlatformOrderUpdateOneWithoutStatusNestedInput {
    create?: InstanceType<typeof PlatformOrderCreateWithoutStatusInput>;
    connectOrCreate?: InstanceType<typeof PlatformOrderCreateOrConnectWithoutStatusInput>;
    upsert?: InstanceType<typeof PlatformOrderUpsertWithoutStatusInput>;
    disconnect?: InstanceType<typeof PlatformOrderWhereInput>;
    delete?: InstanceType<typeof PlatformOrderWhereInput>;
    connect?: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof PlatformOrderUpdateToOneWithWhereWithoutStatusInput>;
}
export declare class PlatformOrderUpdateToOneWithWhereWithoutCartsInput {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutCartsInput>;
}
export declare class PlatformOrderUpdateToOneWithWhereWithoutComplainInput {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutComplainInput>;
}
export declare class PlatformOrderUpdateToOneWithWhereWithoutInvoiceInput {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutInvoiceInput>;
}
export declare class PlatformOrderUpdateToOneWithWhereWithoutStatusInput {
    where?: InstanceType<typeof PlatformOrderWhereInput>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutStatusInput>;
}
export declare class PlatformOrderUpdateWithWhereUniqueWithoutAddressInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutAddressInput>;
}
export declare class PlatformOrderUpdateWithWhereUniqueWithoutOrderByInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof PlatformOrderUpdateWithoutOrderByInput>;
}
export declare class PlatformOrderUpdateWithoutAddressInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateWithoutCartsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateWithoutComplainInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateWithoutInvoiceInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateWithoutOrderByInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateWithoutStatusInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateOneRequiredWithoutPlatformOrderNestedInput>;
    orderBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutPlatformOrdersNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutPlatformOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutPlatformOrderNestedInput>;
    carts?: InstanceType<typeof CartUpdateManyWithoutPlatformOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutPlatformOrderNestedInput>;
}
export declare class PlatformOrderUpsertWithWhereUniqueWithoutAddressInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof PlatformOrderUpdateWithoutAddressInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutAddressInput>;
}
export declare class PlatformOrderUpsertWithWhereUniqueWithoutOrderByInput {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof PlatformOrderUpdateWithoutOrderByInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutOrderByInput>;
}
export declare class PlatformOrderUpsertWithoutCartsInput {
    update: InstanceType<typeof PlatformOrderUpdateWithoutCartsInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutCartsInput>;
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderUpsertWithoutComplainInput {
    update: InstanceType<typeof PlatformOrderUpdateWithoutComplainInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutComplainInput>;
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderUpsertWithoutInvoiceInput {
    update: InstanceType<typeof PlatformOrderUpdateWithoutInvoiceInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutInvoiceInput>;
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderUpsertWithoutStatusInput {
    update: InstanceType<typeof PlatformOrderUpdateWithoutStatusInput>;
    create: InstanceType<typeof PlatformOrderCreateWithoutStatusInput>;
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class PlatformOrderWhereUniqueInput {
    id?: number;
    AND?: Array<PlatformOrderWhereInput>;
    OR?: Array<PlatformOrderWhereInput>;
    NOT?: Array<PlatformOrderWhereInput>;
    addressId?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    orderById?: InstanceType<typeof StringFilter>;
    address?: InstanceType<typeof AddressRelationFilter>;
    orderBy?: InstanceType<typeof OwnerRelationFilter>;
    Invoice?: InstanceType<typeof InvoiceListRelationFilter>;
    status?: InstanceType<typeof OrderStatusListRelationFilter>;
    carts?: InstanceType<typeof CartListRelationFilter>;
    Complain?: InstanceType<typeof ComplainListRelationFilter>;
}
export declare class PlatformOrderWhereInput {
    AND?: Array<PlatformOrderWhereInput>;
    OR?: Array<PlatformOrderWhereInput>;
    NOT?: Array<PlatformOrderWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    addressId?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    orderById?: InstanceType<typeof StringFilter>;
    address?: InstanceType<typeof AddressRelationFilter>;
    orderBy?: InstanceType<typeof OwnerRelationFilter>;
    Invoice?: InstanceType<typeof InvoiceListRelationFilter>;
    status?: InstanceType<typeof OrderStatusListRelationFilter>;
    carts?: InstanceType<typeof CartListRelationFilter>;
    Complain?: InstanceType<typeof ComplainListRelationFilter>;
}
export declare class PlatformOrder {
    id: number;
    addressId: number;
    createdAt: Date;
    updatedAt: Date;
    raceConditionVersion: number;
    orderById: string;
    address?: InstanceType<typeof Address>;
    orderBy?: InstanceType<typeof Owner>;
    Invoice?: Array<Invoice>;
    status?: Array<OrderStatus>;
    carts?: Array<Cart>;
    Complain?: Array<Complain>;
    _count?: InstanceType<typeof PlatformOrderCount>;
}
export declare class UpdateManyPlatformOrderArgs {
    data: InstanceType<typeof PlatformOrderUpdateManyMutationInput>;
    where?: InstanceType<typeof PlatformOrderWhereInput>;
}
export declare class UpdateOnePlatformOrderArgs {
    data: InstanceType<typeof PlatformOrderUpdateInput>;
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
}
export declare class UpsertOnePlatformOrderArgs {
    where: Prisma.AtLeast<PlatformOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof PlatformOrderCreateInput>;
    update: InstanceType<typeof PlatformOrderUpdateInput>;
}
export declare class AggregatePlatformVoucher {
    _count?: InstanceType<typeof PlatformVoucherCountAggregate>;
    _min?: InstanceType<typeof PlatformVoucherMinAggregate>;
    _max?: InstanceType<typeof PlatformVoucherMaxAggregate>;
}
export declare class CreateManyPlatformVoucherArgs {
    data: Array<PlatformVoucherCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePlatformVoucherArgs {
    data: InstanceType<typeof PlatformVoucherCreateInput>;
}
export declare class DeleteManyPlatformVoucherArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
}
export declare class DeleteOnePlatformVoucherArgs {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class FindFirstPlatformVoucherOrThrowArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    orderBy?: Array<PlatformVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformVoucherScalarFieldEnum>;
}
export declare class FindFirstPlatformVoucherArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    orderBy?: Array<PlatformVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformVoucherScalarFieldEnum>;
}
export declare class FindManyPlatformVoucherArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    orderBy?: Array<PlatformVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PlatformVoucherScalarFieldEnum>;
}
export declare class FindUniquePlatformVoucherOrThrowArgs {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class FindUniquePlatformVoucherArgs {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class PlatformVoucherAggregateArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    orderBy?: Array<PlatformVoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformVoucherCountAggregateInput>;
    _min?: InstanceType<typeof PlatformVoucherMinAggregateInput>;
    _max?: InstanceType<typeof PlatformVoucherMaxAggregateInput>;
}
export declare class PlatformVoucherCountAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    _all?: true;
}
export declare class PlatformVoucherCountAggregate {
    createdAt: number;
    updatedAt: number;
    voucherId: number;
    _all: number;
}
export declare class PlatformVoucherCountOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
}
export declare class PlatformVoucherCount {
    outlets?: number;
}
export declare class PlatformVoucherCreateManyInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
}
export declare class PlatformVoucherCreateNestedManyWithoutOutletsInput {
    create?: Array<PlatformVoucherCreateWithoutOutletsInput>;
    connectOrCreate?: Array<PlatformVoucherCreateOrConnectWithoutOutletsInput>;
    connect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class PlatformVoucherCreateNestedOneWithoutVoucherInput {
    create?: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof PlatformVoucherCreateOrConnectWithoutVoucherInput>;
    connect?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class PlatformVoucherCreateOrConnectWithoutOutletsInput {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof PlatformVoucherCreateWithoutOutletsInput>;
}
export declare class PlatformVoucherCreateOrConnectWithoutVoucherInput {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
}
export declare class PlatformVoucherCreateWithoutOutletsInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutPlatformVoucherInput>;
}
export declare class PlatformVoucherCreateWithoutVoucherInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outlets?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutPlatformsInput>;
}
export declare class PlatformVoucherCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucher: InstanceType<typeof VoucherCreateNestedOneWithoutPlatformVoucherInput>;
    outlets?: InstanceType<typeof OutletVoucherCreateNestedManyWithoutPlatformsInput>;
}
export declare class PlatformVoucherGroupByArgs {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    orderBy?: Array<PlatformVoucherOrderByWithAggregationInput>;
    by: Array<keyof typeof PlatformVoucherScalarFieldEnum>;
    having?: InstanceType<typeof PlatformVoucherScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PlatformVoucherCountAggregateInput>;
    _min?: InstanceType<typeof PlatformVoucherMinAggregateInput>;
    _max?: InstanceType<typeof PlatformVoucherMaxAggregateInput>;
}
export declare class PlatformVoucherGroupBy {
    createdAt: Date | string;
    updatedAt: Date | string;
    voucherId: string;
    _count?: InstanceType<typeof PlatformVoucherCountAggregate>;
    _min?: InstanceType<typeof PlatformVoucherMinAggregate>;
    _max?: InstanceType<typeof PlatformVoucherMaxAggregate>;
}
export declare class PlatformVoucherListRelationFilter {
    every?: InstanceType<typeof PlatformVoucherWhereInput>;
    some?: InstanceType<typeof PlatformVoucherWhereInput>;
    none?: InstanceType<typeof PlatformVoucherWhereInput>;
}
export declare class PlatformVoucherMaxAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
}
export declare class PlatformVoucherMaxAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
}
export declare class PlatformVoucherMaxOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
}
export declare class PlatformVoucherMinAggregateInput {
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
}
export declare class PlatformVoucherMinAggregate {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
}
export declare class PlatformVoucherMinOrderByAggregateInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
}
export declare class PlatformVoucherNullableRelationFilter {
    is?: InstanceType<typeof PlatformVoucherWhereInput>;
    isNot?: InstanceType<typeof PlatformVoucherWhereInput>;
}
export declare class PlatformVoucherOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class PlatformVoucherOrderByWithAggregationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof PlatformVoucherCountOrderByAggregateInput>;
    _max?: InstanceType<typeof PlatformVoucherMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PlatformVoucherMinOrderByAggregateInput>;
}
export declare class PlatformVoucherOrderByWithRelationInput {
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    voucher?: InstanceType<typeof VoucherOrderByWithRelationInput>;
    outlets?: InstanceType<typeof OutletVoucherOrderByRelationAggregateInput>;
}
export declare class PlatformVoucherScalarWhereWithAggregatesInput {
    AND?: Array<PlatformVoucherScalarWhereWithAggregatesInput>;
    OR?: Array<PlatformVoucherScalarWhereWithAggregatesInput>;
    NOT?: Array<PlatformVoucherScalarWhereWithAggregatesInput>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    voucherId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class PlatformVoucherScalarWhereInput {
    AND?: Array<PlatformVoucherScalarWhereInput>;
    OR?: Array<PlatformVoucherScalarWhereInput>;
    NOT?: Array<PlatformVoucherScalarWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
}
export declare class PlatformVoucherUncheckedCreateNestedManyWithoutOutletsInput {
    create?: Array<PlatformVoucherCreateWithoutOutletsInput>;
    connectOrCreate?: Array<PlatformVoucherCreateOrConnectWithoutOutletsInput>;
    connect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
}
export declare class PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput {
    create?: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof PlatformVoucherCreateOrConnectWithoutVoucherInput>;
    connect?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class PlatformVoucherUncheckedCreateWithoutOutletsInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
}
export declare class PlatformVoucherUncheckedCreateWithoutVoucherInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outlets?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutPlatformsInput>;
}
export declare class PlatformVoucherUncheckedCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    outlets?: InstanceType<typeof OutletVoucherUncheckedCreateNestedManyWithoutPlatformsInput>;
}
export declare class PlatformVoucherUncheckedUpdateManyWithoutOutletsNestedInput {
    create?: Array<PlatformVoucherCreateWithoutOutletsInput>;
    connectOrCreate?: Array<PlatformVoucherCreateOrConnectWithoutOutletsInput>;
    upsert?: Array<PlatformVoucherUpsertWithWhereUniqueWithoutOutletsInput>;
    set?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<PlatformVoucherUpdateWithWhereUniqueWithoutOutletsInput>;
    updateMany?: Array<PlatformVoucherUpdateManyWithWhereWithoutOutletsInput>;
    deleteMany?: Array<PlatformVoucherScalarWhereInput>;
}
export declare class PlatformVoucherUncheckedUpdateManyWithoutOutletsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PlatformVoucherUncheckedUpdateManyInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput {
    create?: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof PlatformVoucherCreateOrConnectWithoutVoucherInput>;
    upsert?: InstanceType<typeof PlatformVoucherUpsertWithoutVoucherInput>;
    disconnect?: InstanceType<typeof PlatformVoucherWhereInput>;
    delete?: InstanceType<typeof PlatformVoucherWhereInput>;
    connect?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    update?: InstanceType<typeof PlatformVoucherUpdateToOneWithWhereWithoutVoucherInput>;
}
export declare class PlatformVoucherUncheckedUpdateWithoutOutletsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PlatformVoucherUncheckedUpdateWithoutVoucherInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlets?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutPlatformsNestedInput>;
}
export declare class PlatformVoucherUncheckedUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outlets?: InstanceType<typeof OutletVoucherUncheckedUpdateManyWithoutPlatformsNestedInput>;
}
export declare class PlatformVoucherUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class PlatformVoucherUpdateManyWithWhereWithoutOutletsInput {
    where: InstanceType<typeof PlatformVoucherScalarWhereInput>;
    data: InstanceType<typeof PlatformVoucherUpdateManyMutationInput>;
}
export declare class PlatformVoucherUpdateManyWithoutOutletsNestedInput {
    create?: Array<PlatformVoucherCreateWithoutOutletsInput>;
    connectOrCreate?: Array<PlatformVoucherCreateOrConnectWithoutOutletsInput>;
    upsert?: Array<PlatformVoucherUpsertWithWhereUniqueWithoutOutletsInput>;
    set?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>>;
    update?: Array<PlatformVoucherUpdateWithWhereUniqueWithoutOutletsInput>;
    updateMany?: Array<PlatformVoucherUpdateManyWithWhereWithoutOutletsInput>;
    deleteMany?: Array<PlatformVoucherScalarWhereInput>;
}
export declare class PlatformVoucherUpdateOneWithoutVoucherNestedInput {
    create?: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof PlatformVoucherCreateOrConnectWithoutVoucherInput>;
    upsert?: InstanceType<typeof PlatformVoucherUpsertWithoutVoucherInput>;
    disconnect?: InstanceType<typeof PlatformVoucherWhereInput>;
    delete?: InstanceType<typeof PlatformVoucherWhereInput>;
    connect?: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    update?: InstanceType<typeof PlatformVoucherUpdateToOneWithWhereWithoutVoucherInput>;
}
export declare class PlatformVoucherUpdateToOneWithWhereWithoutVoucherInput {
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
    data: InstanceType<typeof PlatformVoucherUpdateWithoutVoucherInput>;
}
export declare class PlatformVoucherUpdateWithWhereUniqueWithoutOutletsInput {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof PlatformVoucherUpdateWithoutOutletsInput>;
}
export declare class PlatformVoucherUpdateWithoutOutletsInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutPlatformVoucherNestedInput>;
}
export declare class PlatformVoucherUpdateWithoutVoucherInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlets?: InstanceType<typeof OutletVoucherUpdateManyWithoutPlatformsNestedInput>;
}
export declare class PlatformVoucherUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneRequiredWithoutPlatformVoucherNestedInput>;
    outlets?: InstanceType<typeof OutletVoucherUpdateManyWithoutPlatformsNestedInput>;
}
export declare class PlatformVoucherUpsertWithWhereUniqueWithoutOutletsInput {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof PlatformVoucherUpdateWithoutOutletsInput>;
    create: InstanceType<typeof PlatformVoucherCreateWithoutOutletsInput>;
}
export declare class PlatformVoucherUpsertWithoutVoucherInput {
    update: InstanceType<typeof PlatformVoucherUpdateWithoutVoucherInput>;
    create: InstanceType<typeof PlatformVoucherCreateWithoutVoucherInput>;
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
}
export declare class PlatformVoucherWhereUniqueInput {
    voucherId?: string;
    AND?: Array<PlatformVoucherWhereInput>;
    OR?: Array<PlatformVoucherWhereInput>;
    NOT?: Array<PlatformVoucherWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucher?: InstanceType<typeof VoucherRelationFilter>;
    outlets?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class PlatformVoucherWhereInput {
    AND?: Array<PlatformVoucherWhereInput>;
    OR?: Array<PlatformVoucherWhereInput>;
    NOT?: Array<PlatformVoucherWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
    voucher?: InstanceType<typeof VoucherRelationFilter>;
    outlets?: InstanceType<typeof OutletVoucherListRelationFilter>;
}
export declare class PlatformVoucher {
    createdAt: Date;
    updatedAt: Date;
    voucherId: string;
    voucher?: InstanceType<typeof Voucher>;
    outlets?: Array<OutletVoucher>;
    _count?: InstanceType<typeof PlatformVoucherCount>;
}
export declare class UpdateManyPlatformVoucherArgs {
    data: InstanceType<typeof PlatformVoucherUpdateManyMutationInput>;
    where?: InstanceType<typeof PlatformVoucherWhereInput>;
}
export declare class UpdateOnePlatformVoucherArgs {
    data: InstanceType<typeof PlatformVoucherUpdateInput>;
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
}
export declare class UpsertOnePlatformVoucherArgs {
    where: Prisma.AtLeast<PlatformVoucherWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof PlatformVoucherCreateInput>;
    update: InstanceType<typeof PlatformVoucherUpdateInput>;
}
export declare class AggregatePrinterMachine {
    _count?: InstanceType<typeof PrinterMachineCountAggregate>;
    _avg?: InstanceType<typeof PrinterMachineAvgAggregate>;
    _sum?: InstanceType<typeof PrinterMachineSumAggregate>;
    _min?: InstanceType<typeof PrinterMachineMinAggregate>;
    _max?: InstanceType<typeof PrinterMachineMaxAggregate>;
}
export declare class CreateManyPrinterMachineArgs {
    data: Array<PrinterMachineCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePrinterMachineArgs {
    data: InstanceType<typeof PrinterMachineCreateInput>;
}
export declare class DeleteManyPrinterMachineArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
}
export declare class DeleteOnePrinterMachineArgs {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class FindFirstPrinterMachineOrThrowArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    orderBy?: Array<PrinterMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterMachineScalarFieldEnum>;
}
export declare class FindFirstPrinterMachineArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    orderBy?: Array<PrinterMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterMachineScalarFieldEnum>;
}
export declare class FindManyPrinterMachineArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    orderBy?: Array<PrinterMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterMachineScalarFieldEnum>;
}
export declare class FindUniquePrinterMachineOrThrowArgs {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class FindUniquePrinterMachineArgs {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class PrinterMachineAggregateArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    orderBy?: Array<PrinterMachineOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PrinterMachineCountAggregateInput>;
    _avg?: InstanceType<typeof PrinterMachineAvgAggregateInput>;
    _sum?: InstanceType<typeof PrinterMachineSumAggregateInput>;
    _min?: InstanceType<typeof PrinterMachineMinAggregateInput>;
    _max?: InstanceType<typeof PrinterMachineMaxAggregateInput>;
}
export declare class PrinterMachineAvgAggregateInput {
    id?: true;
    providerId?: true;
    outletId?: true;
    printerSettingsId?: true;
}
export declare class PrinterMachineAvgAggregate {
    id?: number;
    providerId?: number;
    outletId?: number;
    printerSettingsId?: number;
}
export declare class PrinterMachineAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
}
export declare class PrinterMachineCountAggregateInput {
    id?: true;
    serialNumber?: true;
    providerId?: true;
    outletId?: true;
    printerSettingsId?: true;
    _all?: true;
}
export declare class PrinterMachineCountAggregate {
    id: number;
    serialNumber: number;
    providerId: number;
    outletId: number;
    printerSettingsId: number;
    _all: number;
}
export declare class PrinterMachineCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
}
export declare class PrinterMachineCreateManyOutletInputEnvelope {
    data: Array<PrinterMachineCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class PrinterMachineCreateManyOutletInput {
    id?: number;
    serialNumber: string;
    providerId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineCreateManyProviderInputEnvelope {
    data: Array<PrinterMachineCreateManyProviderInput>;
    skipDuplicates?: boolean;
}
export declare class PrinterMachineCreateManyProviderInput {
    id?: number;
    serialNumber: string;
    outletId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineCreateManyInput {
    id?: number;
    serialNumber: string;
    providerId: number;
    outletId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineCreateNestedManyWithoutOutletInput {
    create?: Array<PrinterMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
}
export declare class PrinterMachineCreateNestedManyWithoutProviderInput {
    create?: Array<PrinterMachineCreateWithoutProviderInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutProviderInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyProviderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
}
export declare class PrinterMachineCreateNestedOneWithoutPrinterSettingsInput {
    create?: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
    connectOrCreate?: InstanceType<typeof PrinterMachineCreateOrConnectWithoutPrinterSettingsInput>;
    connect?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class PrinterMachineCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    create: InstanceType<typeof PrinterMachineCreateWithoutOutletInput>;
}
export declare class PrinterMachineCreateOrConnectWithoutPrinterSettingsInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    create: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
}
export declare class PrinterMachineCreateOrConnectWithoutProviderInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    create: InstanceType<typeof PrinterMachineCreateWithoutProviderInput>;
}
export declare class PrinterMachineCreateWithoutOutletInput {
    serialNumber: string;
    provider: InstanceType<typeof IndonesianBankCreateNestedOneWithoutPrinterMachineInput>;
    printerSettings: InstanceType<typeof PrinterSettingCreateNestedOneWithoutPrinterInput>;
}
export declare class PrinterMachineCreateWithoutPrinterSettingsInput {
    serialNumber: string;
    provider: InstanceType<typeof IndonesianBankCreateNestedOneWithoutPrinterMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutPrinterMachinesInput>;
}
export declare class PrinterMachineCreateWithoutProviderInput {
    serialNumber: string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutPrinterMachinesInput>;
    printerSettings: InstanceType<typeof PrinterSettingCreateNestedOneWithoutPrinterInput>;
}
export declare class PrinterMachineCreateInput {
    serialNumber: string;
    provider: InstanceType<typeof IndonesianBankCreateNestedOneWithoutPrinterMachineInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutPrinterMachinesInput>;
    printerSettings: InstanceType<typeof PrinterSettingCreateNestedOneWithoutPrinterInput>;
}
export declare class PrinterMachineGroupByArgs {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    orderBy?: Array<PrinterMachineOrderByWithAggregationInput>;
    by: Array<keyof typeof PrinterMachineScalarFieldEnum>;
    having?: InstanceType<typeof PrinterMachineScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PrinterMachineCountAggregateInput>;
    _avg?: InstanceType<typeof PrinterMachineAvgAggregateInput>;
    _sum?: InstanceType<typeof PrinterMachineSumAggregateInput>;
    _min?: InstanceType<typeof PrinterMachineMinAggregateInput>;
    _max?: InstanceType<typeof PrinterMachineMaxAggregateInput>;
}
export declare class PrinterMachineGroupBy {
    id: number;
    serialNumber: string;
    providerId: number;
    outletId: number;
    printerSettingsId: number;
    _count?: InstanceType<typeof PrinterMachineCountAggregate>;
    _avg?: InstanceType<typeof PrinterMachineAvgAggregate>;
    _sum?: InstanceType<typeof PrinterMachineSumAggregate>;
    _min?: InstanceType<typeof PrinterMachineMinAggregate>;
    _max?: InstanceType<typeof PrinterMachineMaxAggregate>;
}
export declare class PrinterMachineListRelationFilter {
    every?: InstanceType<typeof PrinterMachineWhereInput>;
    some?: InstanceType<typeof PrinterMachineWhereInput>;
    none?: InstanceType<typeof PrinterMachineWhereInput>;
}
export declare class PrinterMachineMaxAggregateInput {
    id?: true;
    serialNumber?: true;
    providerId?: true;
    outletId?: true;
    printerSettingsId?: true;
}
export declare class PrinterMachineMaxAggregate {
    id?: number;
    serialNumber?: string;
    providerId?: number;
    outletId?: number;
    printerSettingsId?: number;
}
export declare class PrinterMachineMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
}
export declare class PrinterMachineMinAggregateInput {
    id?: true;
    serialNumber?: true;
    providerId?: true;
    outletId?: true;
    printerSettingsId?: true;
}
export declare class PrinterMachineMinAggregate {
    id?: number;
    serialNumber?: string;
    providerId?: number;
    outletId?: number;
    printerSettingsId?: number;
}
export declare class PrinterMachineMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
}
export declare class PrinterMachineNullableRelationFilter {
    is?: InstanceType<typeof PrinterMachineWhereInput>;
    isNot?: InstanceType<typeof PrinterMachineWhereInput>;
}
export declare class PrinterMachineOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class PrinterMachineOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof PrinterMachineCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PrinterMachineAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PrinterMachineMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PrinterMachineMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PrinterMachineSumOrderByAggregateInput>;
}
export declare class PrinterMachineOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    serialNumber?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
    provider?: InstanceType<typeof IndonesianBankOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    printerSettings?: InstanceType<typeof PrinterSettingOrderByWithRelationInput>;
}
export declare class PrinterMachineScalarWhereWithAggregatesInput {
    AND?: Array<PrinterMachineScalarWhereWithAggregatesInput>;
    OR?: Array<PrinterMachineScalarWhereWithAggregatesInput>;
    NOT?: Array<PrinterMachineScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    serialNumber?: InstanceType<typeof StringWithAggregatesFilter>;
    providerId?: InstanceType<typeof IntWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
    printerSettingsId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class PrinterMachineScalarWhereInput {
    AND?: Array<PrinterMachineScalarWhereInput>;
    OR?: Array<PrinterMachineScalarWhereInput>;
    NOT?: Array<PrinterMachineScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    serialNumber?: InstanceType<typeof StringFilter>;
    providerId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    printerSettingsId?: InstanceType<typeof IntFilter>;
}
export declare class PrinterMachineSumAggregateInput {
    id?: true;
    providerId?: true;
    outletId?: true;
    printerSettingsId?: true;
}
export declare class PrinterMachineSumAggregate {
    id?: number;
    providerId?: number;
    outletId?: number;
    printerSettingsId?: number;
}
export declare class PrinterMachineSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    providerId?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    printerSettingsId?: keyof typeof SortOrder;
}
export declare class PrinterMachineUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<PrinterMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
}
export declare class PrinterMachineUncheckedCreateNestedManyWithoutProviderInput {
    create?: Array<PrinterMachineCreateWithoutProviderInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutProviderInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyProviderInputEnvelope>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
}
export declare class PrinterMachineUncheckedCreateNestedOneWithoutPrinterSettingsInput {
    create?: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
    connectOrCreate?: InstanceType<typeof PrinterMachineCreateOrConnectWithoutPrinterSettingsInput>;
    connect?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class PrinterMachineUncheckedCreateWithoutOutletInput {
    id?: number;
    serialNumber: string;
    providerId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineUncheckedCreateWithoutPrinterSettingsInput {
    id?: number;
    serialNumber: string;
    providerId: number;
    outletId: number;
}
export declare class PrinterMachineUncheckedCreateWithoutProviderInput {
    id?: number;
    serialNumber: string;
    outletId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineUncheckedCreateInput {
    id?: number;
    serialNumber: string;
    providerId: number;
    outletId: number;
    printerSettingsId: number;
}
export declare class PrinterMachineUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<PrinterMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<PrinterMachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    disconnect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    delete?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    update?: Array<PrinterMachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<PrinterMachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<PrinterMachineScalarWhereInput>;
}
export declare class PrinterMachineUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    providerId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateManyWithoutProviderNestedInput {
    create?: Array<PrinterMachineCreateWithoutProviderInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutProviderInput>;
    upsert?: Array<PrinterMachineUpsertWithWhereUniqueWithoutProviderInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyProviderInputEnvelope>;
    set?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    disconnect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    delete?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    update?: Array<PrinterMachineUpdateWithWhereUniqueWithoutProviderInput>;
    updateMany?: Array<PrinterMachineUpdateManyWithWhereWithoutProviderInput>;
    deleteMany?: Array<PrinterMachineScalarWhereInput>;
}
export declare class PrinterMachineUncheckedUpdateManyWithoutProviderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    providerId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateOneWithoutPrinterSettingsNestedInput {
    create?: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
    connectOrCreate?: InstanceType<typeof PrinterMachineCreateOrConnectWithoutPrinterSettingsInput>;
    upsert?: InstanceType<typeof PrinterMachineUpsertWithoutPrinterSettingsInput>;
    disconnect?: InstanceType<typeof PrinterMachineWhereInput>;
    delete?: InstanceType<typeof PrinterMachineWhereInput>;
    connect?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    update?: InstanceType<typeof PrinterMachineUpdateToOneWithWhereWithoutPrinterSettingsInput>;
}
export declare class PrinterMachineUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    providerId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateWithoutPrinterSettingsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    providerId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateWithoutProviderInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    providerId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    printerSettingsId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUpdateManyMutationInput {
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class PrinterMachineUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof PrinterMachineScalarWhereInput>;
    data: InstanceType<typeof PrinterMachineUpdateManyMutationInput>;
}
export declare class PrinterMachineUpdateManyWithWhereWithoutProviderInput {
    where: InstanceType<typeof PrinterMachineScalarWhereInput>;
    data: InstanceType<typeof PrinterMachineUpdateManyMutationInput>;
}
export declare class PrinterMachineUpdateManyWithoutOutletNestedInput {
    create?: Array<PrinterMachineCreateWithoutOutletInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutOutletInput>;
    upsert?: Array<PrinterMachineUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    disconnect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    delete?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    update?: Array<PrinterMachineUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<PrinterMachineUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<PrinterMachineScalarWhereInput>;
}
export declare class PrinterMachineUpdateManyWithoutProviderNestedInput {
    create?: Array<PrinterMachineCreateWithoutProviderInput>;
    connectOrCreate?: Array<PrinterMachineCreateOrConnectWithoutProviderInput>;
    upsert?: Array<PrinterMachineUpsertWithWhereUniqueWithoutProviderInput>;
    createMany?: InstanceType<typeof PrinterMachineCreateManyProviderInputEnvelope>;
    set?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    disconnect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    delete?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    connect?: Array<Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>>;
    update?: Array<PrinterMachineUpdateWithWhereUniqueWithoutProviderInput>;
    updateMany?: Array<PrinterMachineUpdateManyWithWhereWithoutProviderInput>;
    deleteMany?: Array<PrinterMachineScalarWhereInput>;
}
export declare class PrinterMachineUpdateOneWithoutPrinterSettingsNestedInput {
    create?: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
    connectOrCreate?: InstanceType<typeof PrinterMachineCreateOrConnectWithoutPrinterSettingsInput>;
    upsert?: InstanceType<typeof PrinterMachineUpsertWithoutPrinterSettingsInput>;
    disconnect?: InstanceType<typeof PrinterMachineWhereInput>;
    delete?: InstanceType<typeof PrinterMachineWhereInput>;
    connect?: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    update?: InstanceType<typeof PrinterMachineUpdateToOneWithWhereWithoutPrinterSettingsInput>;
}
export declare class PrinterMachineUpdateToOneWithWhereWithoutPrinterSettingsInput {
    where?: InstanceType<typeof PrinterMachineWhereInput>;
    data: InstanceType<typeof PrinterMachineUpdateWithoutPrinterSettingsInput>;
}
export declare class PrinterMachineUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    data: InstanceType<typeof PrinterMachineUpdateWithoutOutletInput>;
}
export declare class PrinterMachineUpdateWithWhereUniqueWithoutProviderInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    data: InstanceType<typeof PrinterMachineUpdateWithoutProviderInput>;
}
export declare class PrinterMachineUpdateWithoutOutletInput {
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provider?: InstanceType<typeof IndonesianBankUpdateOneRequiredWithoutPrinterMachineNestedInput>;
    printerSettings?: InstanceType<typeof PrinterSettingUpdateOneRequiredWithoutPrinterNestedInput>;
}
export declare class PrinterMachineUpdateWithoutPrinterSettingsInput {
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provider?: InstanceType<typeof IndonesianBankUpdateOneRequiredWithoutPrinterMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutPrinterMachinesNestedInput>;
}
export declare class PrinterMachineUpdateWithoutProviderInput {
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutPrinterMachinesNestedInput>;
    printerSettings?: InstanceType<typeof PrinterSettingUpdateOneRequiredWithoutPrinterNestedInput>;
}
export declare class PrinterMachineUpdateInput {
    serialNumber?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    provider?: InstanceType<typeof IndonesianBankUpdateOneRequiredWithoutPrinterMachineNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutPrinterMachinesNestedInput>;
    printerSettings?: InstanceType<typeof PrinterSettingUpdateOneRequiredWithoutPrinterNestedInput>;
}
export declare class PrinterMachineUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    update: InstanceType<typeof PrinterMachineUpdateWithoutOutletInput>;
    create: InstanceType<typeof PrinterMachineCreateWithoutOutletInput>;
}
export declare class PrinterMachineUpsertWithWhereUniqueWithoutProviderInput {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    update: InstanceType<typeof PrinterMachineUpdateWithoutProviderInput>;
    create: InstanceType<typeof PrinterMachineCreateWithoutProviderInput>;
}
export declare class PrinterMachineUpsertWithoutPrinterSettingsInput {
    update: InstanceType<typeof PrinterMachineUpdateWithoutPrinterSettingsInput>;
    create: InstanceType<typeof PrinterMachineCreateWithoutPrinterSettingsInput>;
    where?: InstanceType<typeof PrinterMachineWhereInput>;
}
export declare class PrinterMachineWhereUniqueInput {
    id?: number;
    serialNumber?: string;
    printerSettingsId?: number;
    AND?: Array<PrinterMachineWhereInput>;
    OR?: Array<PrinterMachineWhereInput>;
    NOT?: Array<PrinterMachineWhereInput>;
    providerId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    provider?: InstanceType<typeof IndonesianBankRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    printerSettings?: InstanceType<typeof PrinterSettingRelationFilter>;
}
export declare class PrinterMachineWhereInput {
    AND?: Array<PrinterMachineWhereInput>;
    OR?: Array<PrinterMachineWhereInput>;
    NOT?: Array<PrinterMachineWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    serialNumber?: InstanceType<typeof StringFilter>;
    providerId?: InstanceType<typeof IntFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    printerSettingsId?: InstanceType<typeof IntFilter>;
    provider?: InstanceType<typeof IndonesianBankRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    printerSettings?: InstanceType<typeof PrinterSettingRelationFilter>;
}
export declare class PrinterMachine {
    id: number;
    serialNumber: string;
    providerId: number;
    outletId: number;
    printerSettingsId: number;
    provider?: InstanceType<typeof IndonesianBank>;
    outlet?: InstanceType<typeof Outlet>;
    printerSettings?: InstanceType<typeof PrinterSetting>;
}
export declare class UpdateManyPrinterMachineArgs {
    data: InstanceType<typeof PrinterMachineUpdateManyMutationInput>;
    where?: InstanceType<typeof PrinterMachineWhereInput>;
}
export declare class UpdateOnePrinterMachineArgs {
    data: InstanceType<typeof PrinterMachineUpdateInput>;
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
}
export declare class UpsertOnePrinterMachineArgs {
    where: Prisma.AtLeast<PrinterMachineWhereUniqueInput, 'id' | 'serialNumber' | 'printerSettingsId'>;
    create: InstanceType<typeof PrinterMachineCreateInput>;
    update: InstanceType<typeof PrinterMachineUpdateInput>;
}
export declare class AggregatePrinterSetting {
    _count?: InstanceType<typeof PrinterSettingCountAggregate>;
    _avg?: InstanceType<typeof PrinterSettingAvgAggregate>;
    _sum?: InstanceType<typeof PrinterSettingSumAggregate>;
    _min?: InstanceType<typeof PrinterSettingMinAggregate>;
    _max?: InstanceType<typeof PrinterSettingMaxAggregate>;
}
export declare class CreateManyPrinterSettingArgs {
    data: Array<PrinterSettingCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOnePrinterSettingArgs {
    data: InstanceType<typeof PrinterSettingCreateInput>;
}
export declare class DeleteManyPrinterSettingArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
}
export declare class DeleteOnePrinterSettingArgs {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class FindFirstPrinterSettingOrThrowArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    orderBy?: Array<PrinterSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterSettingScalarFieldEnum>;
}
export declare class FindFirstPrinterSettingArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    orderBy?: Array<PrinterSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterSettingScalarFieldEnum>;
}
export declare class FindManyPrinterSettingArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    orderBy?: Array<PrinterSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof PrinterSettingScalarFieldEnum>;
}
export declare class FindUniquePrinterSettingOrThrowArgs {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class FindUniquePrinterSettingArgs {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class PrinterSettingAggregateArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    orderBy?: Array<PrinterSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PrinterSettingCountAggregateInput>;
    _avg?: InstanceType<typeof PrinterSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof PrinterSettingSumAggregateInput>;
    _min?: InstanceType<typeof PrinterSettingMinAggregateInput>;
    _max?: InstanceType<typeof PrinterSettingMaxAggregateInput>;
}
export declare class PrinterSettingAvgAggregateInput {
    id?: true;
    outletSettingId?: true;
}
export declare class PrinterSettingAvgAggregate {
    id?: number;
    outletSettingId?: number;
}
export declare class PrinterSettingAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    outletSettingId?: keyof typeof SortOrder;
}
export declare class PrinterSettingCountAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    printerId?: true;
    outletSettingId?: true;
    _all?: true;
}
export declare class PrinterSettingCountAggregate {
    id: number;
    createdAt: number;
    updatedAt: number;
    printerId: number;
    outletSettingId: number;
    _all: number;
}
export declare class PrinterSettingCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    printerId?: keyof typeof SortOrder;
    outletSettingId?: keyof typeof SortOrder;
}
export declare class PrinterSettingCreateManyInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
}
export declare class PrinterSettingCreateNestedOneWithoutOutletSettingInput {
    create?: InstanceType<typeof PrinterSettingCreateWithoutOutletSettingInput>;
    connectOrCreate?: InstanceType<typeof PrinterSettingCreateOrConnectWithoutOutletSettingInput>;
    connect?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class PrinterSettingCreateNestedOneWithoutPrinterInput {
    create?: InstanceType<typeof PrinterSettingCreateWithoutPrinterInput>;
    connectOrCreate?: InstanceType<typeof PrinterSettingCreateOrConnectWithoutPrinterInput>;
    connect?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class PrinterSettingCreateOrConnectWithoutOutletSettingInput {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    create: InstanceType<typeof PrinterSettingCreateWithoutOutletSettingInput>;
}
export declare class PrinterSettingCreateOrConnectWithoutPrinterInput {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    create: InstanceType<typeof PrinterSettingCreateWithoutPrinterInput>;
}
export declare class PrinterSettingCreateWithoutOutletSettingInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    printer?: InstanceType<typeof PrinterMachineCreateNestedOneWithoutPrinterSettingsInput>;
}
export declare class PrinterSettingCreateWithoutPrinterInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    outletSetting?: InstanceType<typeof OutletSettingCreateNestedOneWithoutPrinterSettingInput>;
}
export declare class PrinterSettingCreateInput {
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    printer?: InstanceType<typeof PrinterMachineCreateNestedOneWithoutPrinterSettingsInput>;
    outletSetting?: InstanceType<typeof OutletSettingCreateNestedOneWithoutPrinterSettingInput>;
}
export declare class PrinterSettingGroupByArgs {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    orderBy?: Array<PrinterSettingOrderByWithAggregationInput>;
    by: Array<keyof typeof PrinterSettingScalarFieldEnum>;
    having?: InstanceType<typeof PrinterSettingScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof PrinterSettingCountAggregateInput>;
    _avg?: InstanceType<typeof PrinterSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof PrinterSettingSumAggregateInput>;
    _min?: InstanceType<typeof PrinterSettingMinAggregateInput>;
    _max?: InstanceType<typeof PrinterSettingMaxAggregateInput>;
}
export declare class PrinterSettingGroupBy {
    id: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    printerId: string;
    outletSettingId?: number;
    _count?: InstanceType<typeof PrinterSettingCountAggregate>;
    _avg?: InstanceType<typeof PrinterSettingAvgAggregate>;
    _sum?: InstanceType<typeof PrinterSettingSumAggregate>;
    _min?: InstanceType<typeof PrinterSettingMinAggregate>;
    _max?: InstanceType<typeof PrinterSettingMaxAggregate>;
}
export declare class PrinterSettingMaxAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    printerId?: true;
    outletSettingId?: true;
}
export declare class PrinterSettingMaxAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId?: string;
    outletSettingId?: number;
}
export declare class PrinterSettingMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    printerId?: keyof typeof SortOrder;
    outletSettingId?: keyof typeof SortOrder;
}
export declare class PrinterSettingMinAggregateInput {
    id?: true;
    createdAt?: true;
    updatedAt?: true;
    printerId?: true;
    outletSettingId?: true;
}
export declare class PrinterSettingMinAggregate {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId?: string;
    outletSettingId?: number;
}
export declare class PrinterSettingMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    printerId?: keyof typeof SortOrder;
    outletSettingId?: keyof typeof SortOrder;
}
export declare class PrinterSettingOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    printerId?: keyof typeof SortOrder;
    outletSettingId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof PrinterSettingCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof PrinterSettingAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof PrinterSettingMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof PrinterSettingMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof PrinterSettingSumOrderByAggregateInput>;
}
export declare class PrinterSettingOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    printerId?: keyof typeof SortOrder;
    outletSettingId?: InstanceType<typeof SortOrderInput>;
    printer?: InstanceType<typeof PrinterMachineOrderByWithRelationInput>;
    outletSetting?: InstanceType<typeof OutletSettingOrderByWithRelationInput>;
}
export declare class PrinterSettingRelationFilter {
    is?: InstanceType<typeof PrinterSettingWhereInput>;
    isNot?: InstanceType<typeof PrinterSettingWhereInput>;
}
export declare class PrinterSettingScalarWhereWithAggregatesInput {
    AND?: Array<PrinterSettingScalarWhereWithAggregatesInput>;
    OR?: Array<PrinterSettingScalarWhereWithAggregatesInput>;
    NOT?: Array<PrinterSettingScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    printerId?: InstanceType<typeof StringWithAggregatesFilter>;
    outletSettingId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class PrinterSettingSumAggregateInput {
    id?: true;
    outletSettingId?: true;
}
export declare class PrinterSettingSumAggregate {
    id?: number;
    outletSettingId?: number;
}
export declare class PrinterSettingSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    outletSettingId?: keyof typeof SortOrder;
}
export declare class PrinterSettingUncheckedCreateWithoutOutletSettingInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    printer?: InstanceType<typeof PrinterMachineUncheckedCreateNestedOneWithoutPrinterSettingsInput>;
}
export declare class PrinterSettingUncheckedCreateWithoutPrinterInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    outletSetting?: InstanceType<typeof OutletSettingUncheckedCreateNestedOneWithoutPrinterSettingInput>;
}
export declare class PrinterSettingUncheckedCreateInput {
    id?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    printerId: string;
    outletSettingId?: number;
    printer?: InstanceType<typeof PrinterMachineUncheckedCreateNestedOneWithoutPrinterSettingsInput>;
    outletSetting?: InstanceType<typeof OutletSettingUncheckedCreateNestedOneWithoutPrinterSettingInput>;
}
export declare class PrinterSettingUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class PrinterSettingUncheckedUpdateWithoutOutletSettingInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    printer?: InstanceType<typeof PrinterMachineUncheckedUpdateOneWithoutPrinterSettingsNestedInput>;
}
export declare class PrinterSettingUncheckedUpdateWithoutPrinterInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    outletSetting?: InstanceType<typeof OutletSettingUncheckedUpdateOneWithoutPrinterSettingNestedInput>;
}
export declare class PrinterSettingUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    printer?: InstanceType<typeof PrinterMachineUncheckedUpdateOneWithoutPrinterSettingsNestedInput>;
    outletSetting?: InstanceType<typeof OutletSettingUncheckedUpdateOneWithoutPrinterSettingNestedInput>;
}
export declare class PrinterSettingUpdateManyMutationInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class PrinterSettingUpdateOneRequiredWithoutOutletSettingNestedInput {
    create?: InstanceType<typeof PrinterSettingCreateWithoutOutletSettingInput>;
    connectOrCreate?: InstanceType<typeof PrinterSettingCreateOrConnectWithoutOutletSettingInput>;
    upsert?: InstanceType<typeof PrinterSettingUpsertWithoutOutletSettingInput>;
    connect?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    update?: InstanceType<typeof PrinterSettingUpdateToOneWithWhereWithoutOutletSettingInput>;
}
export declare class PrinterSettingUpdateOneRequiredWithoutPrinterNestedInput {
    create?: InstanceType<typeof PrinterSettingCreateWithoutPrinterInput>;
    connectOrCreate?: InstanceType<typeof PrinterSettingCreateOrConnectWithoutPrinterInput>;
    upsert?: InstanceType<typeof PrinterSettingUpsertWithoutPrinterInput>;
    connect?: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    update?: InstanceType<typeof PrinterSettingUpdateToOneWithWhereWithoutPrinterInput>;
}
export declare class PrinterSettingUpdateToOneWithWhereWithoutOutletSettingInput {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    data: InstanceType<typeof PrinterSettingUpdateWithoutOutletSettingInput>;
}
export declare class PrinterSettingUpdateToOneWithWhereWithoutPrinterInput {
    where?: InstanceType<typeof PrinterSettingWhereInput>;
    data: InstanceType<typeof PrinterSettingUpdateWithoutPrinterInput>;
}
export declare class PrinterSettingUpdateWithoutOutletSettingInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    printer?: InstanceType<typeof PrinterMachineUpdateOneWithoutPrinterSettingsNestedInput>;
}
export declare class PrinterSettingUpdateWithoutPrinterInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    outletSetting?: InstanceType<typeof OutletSettingUpdateOneWithoutPrinterSettingNestedInput>;
}
export declare class PrinterSettingUpdateInput {
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    printerId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletSettingId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    printer?: InstanceType<typeof PrinterMachineUpdateOneWithoutPrinterSettingsNestedInput>;
    outletSetting?: InstanceType<typeof OutletSettingUpdateOneWithoutPrinterSettingNestedInput>;
}
export declare class PrinterSettingUpsertWithoutOutletSettingInput {
    update: InstanceType<typeof PrinterSettingUpdateWithoutOutletSettingInput>;
    create: InstanceType<typeof PrinterSettingCreateWithoutOutletSettingInput>;
    where?: InstanceType<typeof PrinterSettingWhereInput>;
}
export declare class PrinterSettingUpsertWithoutPrinterInput {
    update: InstanceType<typeof PrinterSettingUpdateWithoutPrinterInput>;
    create: InstanceType<typeof PrinterSettingCreateWithoutPrinterInput>;
    where?: InstanceType<typeof PrinterSettingWhereInput>;
}
export declare class PrinterSettingWhereUniqueInput {
    id?: number;
    printerId?: string;
    AND?: Array<PrinterSettingWhereInput>;
    OR?: Array<PrinterSettingWhereInput>;
    NOT?: Array<PrinterSettingWhereInput>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    outletSettingId?: InstanceType<typeof IntNullableFilter>;
    printer?: InstanceType<typeof PrinterMachineNullableRelationFilter>;
    outletSetting?: InstanceType<typeof OutletSettingNullableRelationFilter>;
}
export declare class PrinterSettingWhereInput {
    AND?: Array<PrinterSettingWhereInput>;
    OR?: Array<PrinterSettingWhereInput>;
    NOT?: Array<PrinterSettingWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    printerId?: InstanceType<typeof StringFilter>;
    outletSettingId?: InstanceType<typeof IntNullableFilter>;
    printer?: InstanceType<typeof PrinterMachineNullableRelationFilter>;
    outletSetting?: InstanceType<typeof OutletSettingNullableRelationFilter>;
}
export declare class PrinterSetting {
    id: number;
    createdAt: Date;
    updatedAt: Date;
    printerId: string;
    outletSettingId: number | null;
    printer?: InstanceType<typeof PrinterMachine> | null;
    outletSetting?: InstanceType<typeof OutletSetting> | null;
}
export declare class UpdateManyPrinterSettingArgs {
    data: InstanceType<typeof PrinterSettingUpdateManyMutationInput>;
    where?: InstanceType<typeof PrinterSettingWhereInput>;
}
export declare class UpdateOnePrinterSettingArgs {
    data: InstanceType<typeof PrinterSettingUpdateInput>;
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
}
export declare class UpsertOnePrinterSettingArgs {
    where: Prisma.AtLeast<PrinterSettingWhereUniqueInput, 'id' | 'printerId'>;
    create: InstanceType<typeof PrinterSettingCreateInput>;
    update: InstanceType<typeof PrinterSettingUpdateInput>;
}
export declare class AffectedRows {
    count: number;
}
export declare class BoolFieldUpdateOperationsInput {
    set?: boolean;
}
export declare class BoolFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolFilter>;
}
export declare class BoolNullableFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolNullableFilter>;
}
export declare class BoolNullableWithAggregatesFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedBoolNullableFilter>;
    _max?: InstanceType<typeof NestedBoolNullableFilter>;
}
export declare class BoolWithAggregatesFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedBoolFilter>;
    _max?: InstanceType<typeof NestedBoolFilter>;
}
export declare class DateTimeFieldUpdateOperationsInput {
    set?: Date | string;
}
export declare class DateTimeFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeFilter>;
}
export declare class DateTimeNullableFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeNullableFilter>;
}
export declare class DateTimeNullableWithAggregatesFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedDateTimeNullableFilter>;
    _max?: InstanceType<typeof NestedDateTimeNullableFilter>;
}
export declare class DateTimeWithAggregatesFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedDateTimeFilter>;
    _max?: InstanceType<typeof NestedDateTimeFilter>;
}
export declare class EnumAccountCategoryFieldUpdateOperationsInput {
    set?: keyof typeof AccountCategory;
}
export declare class EnumAccountCategoryFilter {
    equals?: keyof typeof AccountCategory;
    in?: Array<keyof typeof AccountCategory>;
    notIn?: Array<keyof typeof AccountCategory>;
    not?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
}
export declare class EnumAccountCategoryWithAggregatesFilter {
    equals?: keyof typeof AccountCategory;
    in?: Array<keyof typeof AccountCategory>;
    notIn?: Array<keyof typeof AccountCategory>;
    not?: InstanceType<typeof NestedEnumAccountCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
}
export declare class EnumDayFieldUpdateOperationsInput {
    set?: keyof typeof Day;
}
export declare class EnumDayFilter {
    equals?: keyof typeof Day;
    in?: Array<keyof typeof Day>;
    notIn?: Array<keyof typeof Day>;
    not?: InstanceType<typeof NestedEnumDayFilter>;
}
export declare class EnumDayWithAggregatesFilter {
    equals?: keyof typeof Day;
    in?: Array<keyof typeof Day>;
    notIn?: Array<keyof typeof Day>;
    not?: InstanceType<typeof NestedEnumDayWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDayFilter>;
    _max?: InstanceType<typeof NestedEnumDayFilter>;
}
export declare class EnumDeliveryStatusTypeFieldUpdateOperationsInput {
    set?: keyof typeof DeliveryStatusType;
}
export declare class EnumDeliveryStatusTypeFilter {
    equals?: keyof typeof DeliveryStatusType;
    in?: Array<keyof typeof DeliveryStatusType>;
    notIn?: Array<keyof typeof DeliveryStatusType>;
    not?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
}
export declare class EnumDeliveryStatusTypeWithAggregatesFilter {
    equals?: keyof typeof DeliveryStatusType;
    in?: Array<keyof typeof DeliveryStatusType>;
    notIn?: Array<keyof typeof DeliveryStatusType>;
    not?: InstanceType<typeof NestedEnumDeliveryStatusTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
    _max?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
}
export declare class EnumDiscountTypeFieldUpdateOperationsInput {
    set?: keyof typeof DiscountType;
}
export declare class EnumDiscountTypeFilter {
    equals?: keyof typeof DiscountType;
    in?: Array<keyof typeof DiscountType>;
    notIn?: Array<keyof typeof DiscountType>;
    not?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
}
export declare class EnumDiscountTypeWithAggregatesFilter {
    equals?: keyof typeof DiscountType;
    in?: Array<keyof typeof DiscountType>;
    notIn?: Array<keyof typeof DiscountType>;
    not?: InstanceType<typeof NestedEnumDiscountTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
    _max?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
}
export declare class EnumEmployeeAttendanceStatusFieldUpdateOperationsInput {
    set?: keyof typeof EmployeeAttendanceStatus;
}
export declare class EnumEmployeeAttendanceStatusFilter {
    equals?: keyof typeof EmployeeAttendanceStatus;
    in?: Array<keyof typeof EmployeeAttendanceStatus>;
    notIn?: Array<keyof typeof EmployeeAttendanceStatus>;
    not?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
}
export declare class EnumEmployeeAttendanceStatusWithAggregatesFilter {
    equals?: keyof typeof EmployeeAttendanceStatus;
    in?: Array<keyof typeof EmployeeAttendanceStatus>;
    notIn?: Array<keyof typeof EmployeeAttendanceStatus>;
    not?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
    _max?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
}
export declare class EnumEmployeeRoleNullableListFilter {
    equals?: Array<keyof typeof EmployeeRole>;
    has?: keyof typeof EmployeeRole;
    hasEvery?: Array<keyof typeof EmployeeRole>;
    hasSome?: Array<keyof typeof EmployeeRole>;
    isEmpty?: boolean;
}
export declare class EnumFileTypeNullableFilter {
    equals?: keyof typeof FileType;
    in?: Array<keyof typeof FileType>;
    notIn?: Array<keyof typeof FileType>;
    not?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
}
export declare class EnumFileTypeNullableWithAggregatesFilter {
    equals?: keyof typeof FileType;
    in?: Array<keyof typeof FileType>;
    notIn?: Array<keyof typeof FileType>;
    not?: InstanceType<typeof NestedEnumFileTypeNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
    _max?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
}
export declare class EnumGenderFieldUpdateOperationsInput {
    set?: keyof typeof Gender;
}
export declare class EnumGenderFilter {
    equals?: keyof typeof Gender;
    in?: Array<keyof typeof Gender>;
    notIn?: Array<keyof typeof Gender>;
    not?: InstanceType<typeof NestedEnumGenderFilter>;
}
export declare class EnumGenderWithAggregatesFilter {
    equals?: keyof typeof Gender;
    in?: Array<keyof typeof Gender>;
    notIn?: Array<keyof typeof Gender>;
    not?: InstanceType<typeof NestedEnumGenderWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumGenderFilter>;
    _max?: InstanceType<typeof NestedEnumGenderFilter>;
}
export declare class EnumItemActivityFieldUpdateOperationsInput {
    set?: keyof typeof ItemActivity;
}
export declare class EnumItemActivityFilter {
    equals?: keyof typeof ItemActivity;
    in?: Array<keyof typeof ItemActivity>;
    notIn?: Array<keyof typeof ItemActivity>;
    not?: InstanceType<typeof NestedEnumItemActivityFilter>;
}
export declare class EnumItemActivityNullableListFilter {
    equals?: Array<keyof typeof ItemActivity>;
    has?: keyof typeof ItemActivity;
    hasEvery?: Array<keyof typeof ItemActivity>;
    hasSome?: Array<keyof typeof ItemActivity>;
    isEmpty?: boolean;
}
export declare class EnumItemActivityWithAggregatesFilter {
    equals?: keyof typeof ItemActivity;
    in?: Array<keyof typeof ItemActivity>;
    notIn?: Array<keyof typeof ItemActivity>;
    not?: InstanceType<typeof NestedEnumItemActivityWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumItemActivityFilter>;
    _max?: InstanceType<typeof NestedEnumItemActivityFilter>;
}
export declare class EnumLanguageFieldUpdateOperationsInput {
    set?: keyof typeof Language;
}
export declare class EnumLanguageFilter {
    equals?: keyof typeof Language;
    in?: Array<keyof typeof Language>;
    notIn?: Array<keyof typeof Language>;
    not?: InstanceType<typeof NestedEnumLanguageFilter>;
}
export declare class EnumLanguageWithAggregatesFilter {
    equals?: keyof typeof Language;
    in?: Array<keyof typeof Language>;
    notIn?: Array<keyof typeof Language>;
    not?: InstanceType<typeof NestedEnumLanguageWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumLanguageFilter>;
    _max?: InstanceType<typeof NestedEnumLanguageFilter>;
}
export declare class EnumLaundryItemRequestStatusFieldUpdateOperationsInput {
    set?: keyof typeof LaundryItemRequestStatus;
}
export declare class EnumLaundryItemRequestStatusFilter {
    equals?: keyof typeof LaundryItemRequestStatus;
    in?: Array<keyof typeof LaundryItemRequestStatus>;
    notIn?: Array<keyof typeof LaundryItemRequestStatus>;
    not?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
}
export declare class EnumLaundryItemRequestStatusWithAggregatesFilter {
    equals?: keyof typeof LaundryItemRequestStatus;
    in?: Array<keyof typeof LaundryItemRequestStatus>;
    notIn?: Array<keyof typeof LaundryItemRequestStatus>;
    not?: InstanceType<typeof NestedEnumLaundryItemRequestStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
    _max?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
}
export declare class EnumMachineStatusFieldUpdateOperationsInput {
    set?: keyof typeof MachineStatus;
}
export declare class EnumMachineStatusFilter {
    equals?: keyof typeof MachineStatus;
    in?: Array<keyof typeof MachineStatus>;
    notIn?: Array<keyof typeof MachineStatus>;
    not?: InstanceType<typeof NestedEnumMachineStatusFilter>;
}
export declare class EnumMachineStatusWithAggregatesFilter {
    equals?: keyof typeof MachineStatus;
    in?: Array<keyof typeof MachineStatus>;
    notIn?: Array<keyof typeof MachineStatus>;
    not?: InstanceType<typeof NestedEnumMachineStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumMachineStatusFilter>;
    _max?: InstanceType<typeof NestedEnumMachineStatusFilter>;
}
export declare class EnumNotificationTypeFieldUpdateOperationsInput {
    set?: keyof typeof NotificationType;
}
export declare class EnumNotificationTypeFilter {
    equals?: keyof typeof NotificationType;
    in?: Array<keyof typeof NotificationType>;
    notIn?: Array<keyof typeof NotificationType>;
    not?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}
export declare class EnumNotificationTypeWithAggregatesFilter {
    equals?: keyof typeof NotificationType;
    in?: Array<keyof typeof NotificationType>;
    notIn?: Array<keyof typeof NotificationType>;
    not?: InstanceType<typeof NestedEnumNotificationTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
    _max?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}
export declare class EnumOrderStatusEnumFieldUpdateOperationsInput {
    set?: keyof typeof OrderStatusEnum;
}
export declare class EnumOrderStatusEnumFilter {
    equals?: keyof typeof OrderStatusEnum;
    in?: Array<keyof typeof OrderStatusEnum>;
    notIn?: Array<keyof typeof OrderStatusEnum>;
    not?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
}
export declare class EnumOrderStatusEnumWithAggregatesFilter {
    equals?: keyof typeof OrderStatusEnum;
    in?: Array<keyof typeof OrderStatusEnum>;
    notIn?: Array<keyof typeof OrderStatusEnum>;
    not?: InstanceType<typeof NestedEnumOrderStatusEnumWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
    _max?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
}
export declare class EnumOrderTypeFieldUpdateOperationsInput {
    set?: keyof typeof OrderType;
}
export declare class EnumOrderTypeFilter {
    equals?: keyof typeof OrderType;
    in?: Array<keyof typeof OrderType>;
    notIn?: Array<keyof typeof OrderType>;
    not?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}
export declare class EnumOrderTypeNullableListFilter {
    equals?: Array<keyof typeof OrderType>;
    has?: keyof typeof OrderType;
    hasEvery?: Array<keyof typeof OrderType>;
    hasSome?: Array<keyof typeof OrderType>;
    isEmpty?: boolean;
}
export declare class EnumOrderTypeWithAggregatesFilter {
    equals?: keyof typeof OrderType;
    in?: Array<keyof typeof OrderType>;
    notIn?: Array<keyof typeof OrderType>;
    not?: InstanceType<typeof NestedEnumOrderTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumOrderTypeFilter>;
    _max?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}
export declare class EnumPaymentMethodFieldUpdateOperationsInput {
    set?: keyof typeof PaymentMethod;
}
export declare class EnumPaymentMethodFilter {
    equals?: keyof typeof PaymentMethod;
    in?: Array<keyof typeof PaymentMethod>;
    notIn?: Array<keyof typeof PaymentMethod>;
    not?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
}
export declare class EnumPaymentMethodNullableListFilter {
    equals?: Array<keyof typeof PaymentMethod>;
    has?: keyof typeof PaymentMethod;
    hasEvery?: Array<keyof typeof PaymentMethod>;
    hasSome?: Array<keyof typeof PaymentMethod>;
    isEmpty?: boolean;
}
export declare class EnumPaymentMethodWithAggregatesFilter {
    equals?: keyof typeof PaymentMethod;
    in?: Array<keyof typeof PaymentMethod>;
    notIn?: Array<keyof typeof PaymentMethod>;
    not?: InstanceType<typeof NestedEnumPaymentMethodWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
    _max?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
}
export declare class EnumPaymentStatusFieldUpdateOperationsInput {
    set?: keyof typeof PaymentStatus;
}
export declare class EnumPaymentStatusFilter {
    equals?: keyof typeof PaymentStatus;
    in?: Array<keyof typeof PaymentStatus>;
    notIn?: Array<keyof typeof PaymentStatus>;
    not?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
}
export declare class EnumPaymentStatusWithAggregatesFilter {
    equals?: keyof typeof PaymentStatus;
    in?: Array<keyof typeof PaymentStatus>;
    notIn?: Array<keyof typeof PaymentStatus>;
    not?: InstanceType<typeof NestedEnumPaymentStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
    _max?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
}
export declare class EnumPeriodFieldUpdateOperationsInput {
    set?: keyof typeof Period;
}
export declare class EnumPeriodFilter {
    equals?: keyof typeof Period;
    in?: Array<keyof typeof Period>;
    notIn?: Array<keyof typeof Period>;
    not?: InstanceType<typeof NestedEnumPeriodFilter>;
}
export declare class EnumPeriodWithAggregatesFilter {
    equals?: keyof typeof Period;
    in?: Array<keyof typeof Period>;
    notIn?: Array<keyof typeof Period>;
    not?: InstanceType<typeof NestedEnumPeriodWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPeriodFilter>;
    _max?: InstanceType<typeof NestedEnumPeriodFilter>;
}
export declare class EnumScaleFieldUpdateOperationsInput {
    set?: keyof typeof Scale;
}
export declare class EnumScaleFilter {
    equals?: keyof typeof Scale;
    in?: Array<keyof typeof Scale>;
    notIn?: Array<keyof typeof Scale>;
    not?: InstanceType<typeof NestedEnumScaleFilter>;
}
export declare class EnumScaleWithAggregatesFilter {
    equals?: keyof typeof Scale;
    in?: Array<keyof typeof Scale>;
    notIn?: Array<keyof typeof Scale>;
    not?: InstanceType<typeof NestedEnumScaleWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumScaleFilter>;
    _max?: InstanceType<typeof NestedEnumScaleFilter>;
}
export declare class EnumStockTransactionTypeFieldUpdateOperationsInput {
    set?: keyof typeof StockTransactionType;
}
export declare class EnumStockTransactionTypeFilter {
    equals?: keyof typeof StockTransactionType;
    in?: Array<keyof typeof StockTransactionType>;
    notIn?: Array<keyof typeof StockTransactionType>;
    not?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
}
export declare class EnumStockTransactionTypeWithAggregatesFilter {
    equals?: keyof typeof StockTransactionType;
    in?: Array<keyof typeof StockTransactionType>;
    notIn?: Array<keyof typeof StockTransactionType>;
    not?: InstanceType<typeof NestedEnumStockTransactionTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
    _max?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
}
export declare class EnumTermOrFaqCategoryFieldUpdateOperationsInput {
    set?: keyof typeof TermOrFaqCategory;
}
export declare class EnumTermOrFaqCategoryFilter {
    equals?: keyof typeof TermOrFaqCategory;
    in?: Array<keyof typeof TermOrFaqCategory>;
    notIn?: Array<keyof typeof TermOrFaqCategory>;
    not?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
}
export declare class EnumTermOrFaqCategoryWithAggregatesFilter {
    equals?: keyof typeof TermOrFaqCategory;
    in?: Array<keyof typeof TermOrFaqCategory>;
    notIn?: Array<keyof typeof TermOrFaqCategory>;
    not?: InstanceType<typeof NestedEnumTermOrFaqCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
}
export declare class EnumTermOrFaqTypeFieldUpdateOperationsInput {
    set?: keyof typeof TermOrFaqType;
}
export declare class EnumTermOrFaqTypeFilter {
    equals?: keyof typeof TermOrFaqType;
    in?: Array<keyof typeof TermOrFaqType>;
    notIn?: Array<keyof typeof TermOrFaqType>;
    not?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
}
export declare class EnumTermOrFaqTypeWithAggregatesFilter {
    equals?: keyof typeof TermOrFaqType;
    in?: Array<keyof typeof TermOrFaqType>;
    notIn?: Array<keyof typeof TermOrFaqType>;
    not?: InstanceType<typeof NestedEnumTermOrFaqTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
    _max?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
}
export declare class EnumThemeFieldUpdateOperationsInput {
    set?: keyof typeof Theme;
}
export declare class EnumThemeFilter {
    equals?: keyof typeof Theme;
    in?: Array<keyof typeof Theme>;
    notIn?: Array<keyof typeof Theme>;
    not?: InstanceType<typeof NestedEnumThemeFilter>;
}
export declare class EnumThemeWithAggregatesFilter {
    equals?: keyof typeof Theme;
    in?: Array<keyof typeof Theme>;
    notIn?: Array<keyof typeof Theme>;
    not?: InstanceType<typeof NestedEnumThemeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumThemeFilter>;
    _max?: InstanceType<typeof NestedEnumThemeFilter>;
}
export declare class EnumTransactionCategoryFieldUpdateOperationsInput {
    set?: keyof typeof TransactionCategory;
}
export declare class EnumTransactionCategoryFilter {
    equals?: keyof typeof TransactionCategory;
    in?: Array<keyof typeof TransactionCategory>;
    notIn?: Array<keyof typeof TransactionCategory>;
    not?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
}
export declare class EnumTransactionCategoryWithAggregatesFilter {
    equals?: keyof typeof TransactionCategory;
    in?: Array<keyof typeof TransactionCategory>;
    notIn?: Array<keyof typeof TransactionCategory>;
    not?: InstanceType<typeof NestedEnumTransactionCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
}
export declare class EnumTransactionStatusFieldUpdateOperationsInput {
    set?: keyof typeof TransactionStatus;
}
export declare class EnumTransactionStatusFilter {
    equals?: keyof typeof TransactionStatus;
    in?: Array<keyof typeof TransactionStatus>;
    notIn?: Array<keyof typeof TransactionStatus>;
    not?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
}
export declare class EnumTransactionStatusWithAggregatesFilter {
    equals?: keyof typeof TransactionStatus;
    in?: Array<keyof typeof TransactionStatus>;
    notIn?: Array<keyof typeof TransactionStatus>;
    not?: InstanceType<typeof NestedEnumTransactionStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
    _max?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
}
export declare class EnumUserRoleFieldUpdateOperationsInput {
    set?: keyof typeof UserRole;
}
export declare class EnumUserRoleFilter {
    equals?: keyof typeof UserRole;
    in?: Array<keyof typeof UserRole>;
    notIn?: Array<keyof typeof UserRole>;
    not?: InstanceType<typeof NestedEnumUserRoleFilter>;
}
export declare class EnumUserRoleWithAggregatesFilter {
    equals?: keyof typeof UserRole;
    in?: Array<keyof typeof UserRole>;
    notIn?: Array<keyof typeof UserRole>;
    not?: InstanceType<typeof NestedEnumUserRoleWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumUserRoleFilter>;
    _max?: InstanceType<typeof NestedEnumUserRoleFilter>;
}
export declare class EnumVoucherTypeFieldUpdateOperationsInput {
    set?: keyof typeof VoucherType;
}
export declare class EnumVoucherTypeFilter {
    equals?: keyof typeof VoucherType;
    in?: Array<keyof typeof VoucherType>;
    notIn?: Array<keyof typeof VoucherType>;
    not?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
}
export declare class EnumVoucherTypeWithAggregatesFilter {
    equals?: keyof typeof VoucherType;
    in?: Array<keyof typeof VoucherType>;
    notIn?: Array<keyof typeof VoucherType>;
    not?: InstanceType<typeof NestedEnumVoucherTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
    _max?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
}
export declare class FloatFieldUpdateOperationsInput {
    set?: number;
    increment?: number;
    decrement?: number;
    multiply?: number;
    divide?: number;
}
export declare class FloatFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatFilter>;
}
export declare class FloatNullableFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatNullableFilter>;
}
export declare class FloatNullableWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    _sum?: InstanceType<typeof NestedFloatNullableFilter>;
    _min?: InstanceType<typeof NestedFloatNullableFilter>;
    _max?: InstanceType<typeof NestedFloatNullableFilter>;
}
export declare class FloatWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _avg?: InstanceType<typeof NestedFloatFilter>;
    _sum?: InstanceType<typeof NestedFloatFilter>;
    _min?: InstanceType<typeof NestedFloatFilter>;
    _max?: InstanceType<typeof NestedFloatFilter>;
}
export declare class IntFieldUpdateOperationsInput {
    set?: number;
    increment?: number;
    decrement?: number;
    multiply?: number;
    divide?: number;
}
export declare class IntFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntFilter>;
}
export declare class IntNullableFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntNullableFilter>;
}
export declare class IntNullableWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    _sum?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedIntNullableFilter>;
    _max?: InstanceType<typeof NestedIntNullableFilter>;
}
export declare class IntWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _avg?: InstanceType<typeof NestedFloatFilter>;
    _sum?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedIntFilter>;
    _max?: InstanceType<typeof NestedIntFilter>;
}
export declare class NestedBoolFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolFilter>;
}
export declare class NestedBoolNullableFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolNullableFilter>;
}
export declare class NestedBoolNullableWithAggregatesFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedBoolNullableFilter>;
    _max?: InstanceType<typeof NestedBoolNullableFilter>;
}
export declare class NestedBoolWithAggregatesFilter {
    equals?: boolean;
    not?: InstanceType<typeof NestedBoolWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedBoolFilter>;
    _max?: InstanceType<typeof NestedBoolFilter>;
}
export declare class NestedDateTimeFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeFilter>;
}
export declare class NestedDateTimeNullableFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeNullableFilter>;
}
export declare class NestedDateTimeNullableWithAggregatesFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedDateTimeNullableFilter>;
    _max?: InstanceType<typeof NestedDateTimeNullableFilter>;
}
export declare class NestedDateTimeWithAggregatesFilter {
    equals?: Date | string;
    in?: Array<Date> | Array<string>;
    notIn?: Array<Date> | Array<string>;
    lt?: Date | string;
    lte?: Date | string;
    gt?: Date | string;
    gte?: Date | string;
    not?: InstanceType<typeof NestedDateTimeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedDateTimeFilter>;
    _max?: InstanceType<typeof NestedDateTimeFilter>;
}
export declare class NestedEnumAccountCategoryFilter {
    equals?: keyof typeof AccountCategory;
    in?: Array<keyof typeof AccountCategory>;
    notIn?: Array<keyof typeof AccountCategory>;
    not?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
}
export declare class NestedEnumAccountCategoryWithAggregatesFilter {
    equals?: keyof typeof AccountCategory;
    in?: Array<keyof typeof AccountCategory>;
    notIn?: Array<keyof typeof AccountCategory>;
    not?: InstanceType<typeof NestedEnumAccountCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumAccountCategoryFilter>;
}
export declare class NestedEnumDayFilter {
    equals?: keyof typeof Day;
    in?: Array<keyof typeof Day>;
    notIn?: Array<keyof typeof Day>;
    not?: InstanceType<typeof NestedEnumDayFilter>;
}
export declare class NestedEnumDayWithAggregatesFilter {
    equals?: keyof typeof Day;
    in?: Array<keyof typeof Day>;
    notIn?: Array<keyof typeof Day>;
    not?: InstanceType<typeof NestedEnumDayWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDayFilter>;
    _max?: InstanceType<typeof NestedEnumDayFilter>;
}
export declare class NestedEnumDeliveryStatusTypeFilter {
    equals?: keyof typeof DeliveryStatusType;
    in?: Array<keyof typeof DeliveryStatusType>;
    notIn?: Array<keyof typeof DeliveryStatusType>;
    not?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
}
export declare class NestedEnumDeliveryStatusTypeWithAggregatesFilter {
    equals?: keyof typeof DeliveryStatusType;
    in?: Array<keyof typeof DeliveryStatusType>;
    notIn?: Array<keyof typeof DeliveryStatusType>;
    not?: InstanceType<typeof NestedEnumDeliveryStatusTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
    _max?: InstanceType<typeof NestedEnumDeliveryStatusTypeFilter>;
}
export declare class NestedEnumDiscountTypeFilter {
    equals?: keyof typeof DiscountType;
    in?: Array<keyof typeof DiscountType>;
    notIn?: Array<keyof typeof DiscountType>;
    not?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
}
export declare class NestedEnumDiscountTypeWithAggregatesFilter {
    equals?: keyof typeof DiscountType;
    in?: Array<keyof typeof DiscountType>;
    notIn?: Array<keyof typeof DiscountType>;
    not?: InstanceType<typeof NestedEnumDiscountTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
    _max?: InstanceType<typeof NestedEnumDiscountTypeFilter>;
}
export declare class NestedEnumEmployeeAttendanceStatusFilter {
    equals?: keyof typeof EmployeeAttendanceStatus;
    in?: Array<keyof typeof EmployeeAttendanceStatus>;
    notIn?: Array<keyof typeof EmployeeAttendanceStatus>;
    not?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
}
export declare class NestedEnumEmployeeAttendanceStatusWithAggregatesFilter {
    equals?: keyof typeof EmployeeAttendanceStatus;
    in?: Array<keyof typeof EmployeeAttendanceStatus>;
    notIn?: Array<keyof typeof EmployeeAttendanceStatus>;
    not?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
    _max?: InstanceType<typeof NestedEnumEmployeeAttendanceStatusFilter>;
}
export declare class NestedEnumFileTypeNullableFilter {
    equals?: keyof typeof FileType;
    in?: Array<keyof typeof FileType>;
    notIn?: Array<keyof typeof FileType>;
    not?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
}
export declare class NestedEnumFileTypeNullableWithAggregatesFilter {
    equals?: keyof typeof FileType;
    in?: Array<keyof typeof FileType>;
    notIn?: Array<keyof typeof FileType>;
    not?: InstanceType<typeof NestedEnumFileTypeNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
    _max?: InstanceType<typeof NestedEnumFileTypeNullableFilter>;
}
export declare class NestedEnumGenderFilter {
    equals?: keyof typeof Gender;
    in?: Array<keyof typeof Gender>;
    notIn?: Array<keyof typeof Gender>;
    not?: InstanceType<typeof NestedEnumGenderFilter>;
}
export declare class NestedEnumGenderWithAggregatesFilter {
    equals?: keyof typeof Gender;
    in?: Array<keyof typeof Gender>;
    notIn?: Array<keyof typeof Gender>;
    not?: InstanceType<typeof NestedEnumGenderWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumGenderFilter>;
    _max?: InstanceType<typeof NestedEnumGenderFilter>;
}
export declare class NestedEnumItemActivityFilter {
    equals?: keyof typeof ItemActivity;
    in?: Array<keyof typeof ItemActivity>;
    notIn?: Array<keyof typeof ItemActivity>;
    not?: InstanceType<typeof NestedEnumItemActivityFilter>;
}
export declare class NestedEnumItemActivityWithAggregatesFilter {
    equals?: keyof typeof ItemActivity;
    in?: Array<keyof typeof ItemActivity>;
    notIn?: Array<keyof typeof ItemActivity>;
    not?: InstanceType<typeof NestedEnumItemActivityWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumItemActivityFilter>;
    _max?: InstanceType<typeof NestedEnumItemActivityFilter>;
}
export declare class NestedEnumLanguageFilter {
    equals?: keyof typeof Language;
    in?: Array<keyof typeof Language>;
    notIn?: Array<keyof typeof Language>;
    not?: InstanceType<typeof NestedEnumLanguageFilter>;
}
export declare class NestedEnumLanguageWithAggregatesFilter {
    equals?: keyof typeof Language;
    in?: Array<keyof typeof Language>;
    notIn?: Array<keyof typeof Language>;
    not?: InstanceType<typeof NestedEnumLanguageWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumLanguageFilter>;
    _max?: InstanceType<typeof NestedEnumLanguageFilter>;
}
export declare class NestedEnumLaundryItemRequestStatusFilter {
    equals?: keyof typeof LaundryItemRequestStatus;
    in?: Array<keyof typeof LaundryItemRequestStatus>;
    notIn?: Array<keyof typeof LaundryItemRequestStatus>;
    not?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
}
export declare class NestedEnumLaundryItemRequestStatusWithAggregatesFilter {
    equals?: keyof typeof LaundryItemRequestStatus;
    in?: Array<keyof typeof LaundryItemRequestStatus>;
    notIn?: Array<keyof typeof LaundryItemRequestStatus>;
    not?: InstanceType<typeof NestedEnumLaundryItemRequestStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
    _max?: InstanceType<typeof NestedEnumLaundryItemRequestStatusFilter>;
}
export declare class NestedEnumMachineStatusFilter {
    equals?: keyof typeof MachineStatus;
    in?: Array<keyof typeof MachineStatus>;
    notIn?: Array<keyof typeof MachineStatus>;
    not?: InstanceType<typeof NestedEnumMachineStatusFilter>;
}
export declare class NestedEnumMachineStatusWithAggregatesFilter {
    equals?: keyof typeof MachineStatus;
    in?: Array<keyof typeof MachineStatus>;
    notIn?: Array<keyof typeof MachineStatus>;
    not?: InstanceType<typeof NestedEnumMachineStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumMachineStatusFilter>;
    _max?: InstanceType<typeof NestedEnumMachineStatusFilter>;
}
export declare class NestedEnumNotificationTypeFilter {
    equals?: keyof typeof NotificationType;
    in?: Array<keyof typeof NotificationType>;
    notIn?: Array<keyof typeof NotificationType>;
    not?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}
export declare class NestedEnumNotificationTypeWithAggregatesFilter {
    equals?: keyof typeof NotificationType;
    in?: Array<keyof typeof NotificationType>;
    notIn?: Array<keyof typeof NotificationType>;
    not?: InstanceType<typeof NestedEnumNotificationTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
    _max?: InstanceType<typeof NestedEnumNotificationTypeFilter>;
}
export declare class NestedEnumOrderStatusEnumFilter {
    equals?: keyof typeof OrderStatusEnum;
    in?: Array<keyof typeof OrderStatusEnum>;
    notIn?: Array<keyof typeof OrderStatusEnum>;
    not?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
}
export declare class NestedEnumOrderStatusEnumWithAggregatesFilter {
    equals?: keyof typeof OrderStatusEnum;
    in?: Array<keyof typeof OrderStatusEnum>;
    notIn?: Array<keyof typeof OrderStatusEnum>;
    not?: InstanceType<typeof NestedEnumOrderStatusEnumWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
    _max?: InstanceType<typeof NestedEnumOrderStatusEnumFilter>;
}
export declare class NestedEnumOrderTypeFilter {
    equals?: keyof typeof OrderType;
    in?: Array<keyof typeof OrderType>;
    notIn?: Array<keyof typeof OrderType>;
    not?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}
export declare class NestedEnumOrderTypeWithAggregatesFilter {
    equals?: keyof typeof OrderType;
    in?: Array<keyof typeof OrderType>;
    notIn?: Array<keyof typeof OrderType>;
    not?: InstanceType<typeof NestedEnumOrderTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumOrderTypeFilter>;
    _max?: InstanceType<typeof NestedEnumOrderTypeFilter>;
}
export declare class NestedEnumPaymentMethodFilter {
    equals?: keyof typeof PaymentMethod;
    in?: Array<keyof typeof PaymentMethod>;
    notIn?: Array<keyof typeof PaymentMethod>;
    not?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
}
export declare class NestedEnumPaymentMethodWithAggregatesFilter {
    equals?: keyof typeof PaymentMethod;
    in?: Array<keyof typeof PaymentMethod>;
    notIn?: Array<keyof typeof PaymentMethod>;
    not?: InstanceType<typeof NestedEnumPaymentMethodWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
    _max?: InstanceType<typeof NestedEnumPaymentMethodFilter>;
}
export declare class NestedEnumPaymentStatusFilter {
    equals?: keyof typeof PaymentStatus;
    in?: Array<keyof typeof PaymentStatus>;
    notIn?: Array<keyof typeof PaymentStatus>;
    not?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
}
export declare class NestedEnumPaymentStatusWithAggregatesFilter {
    equals?: keyof typeof PaymentStatus;
    in?: Array<keyof typeof PaymentStatus>;
    notIn?: Array<keyof typeof PaymentStatus>;
    not?: InstanceType<typeof NestedEnumPaymentStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
    _max?: InstanceType<typeof NestedEnumPaymentStatusFilter>;
}
export declare class NestedEnumPeriodFilter {
    equals?: keyof typeof Period;
    in?: Array<keyof typeof Period>;
    notIn?: Array<keyof typeof Period>;
    not?: InstanceType<typeof NestedEnumPeriodFilter>;
}
export declare class NestedEnumPeriodWithAggregatesFilter {
    equals?: keyof typeof Period;
    in?: Array<keyof typeof Period>;
    notIn?: Array<keyof typeof Period>;
    not?: InstanceType<typeof NestedEnumPeriodWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumPeriodFilter>;
    _max?: InstanceType<typeof NestedEnumPeriodFilter>;
}
export declare class NestedEnumScaleFilter {
    equals?: keyof typeof Scale;
    in?: Array<keyof typeof Scale>;
    notIn?: Array<keyof typeof Scale>;
    not?: InstanceType<typeof NestedEnumScaleFilter>;
}
export declare class NestedEnumScaleWithAggregatesFilter {
    equals?: keyof typeof Scale;
    in?: Array<keyof typeof Scale>;
    notIn?: Array<keyof typeof Scale>;
    not?: InstanceType<typeof NestedEnumScaleWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumScaleFilter>;
    _max?: InstanceType<typeof NestedEnumScaleFilter>;
}
export declare class NestedEnumStockTransactionTypeFilter {
    equals?: keyof typeof StockTransactionType;
    in?: Array<keyof typeof StockTransactionType>;
    notIn?: Array<keyof typeof StockTransactionType>;
    not?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
}
export declare class NestedEnumStockTransactionTypeWithAggregatesFilter {
    equals?: keyof typeof StockTransactionType;
    in?: Array<keyof typeof StockTransactionType>;
    notIn?: Array<keyof typeof StockTransactionType>;
    not?: InstanceType<typeof NestedEnumStockTransactionTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
    _max?: InstanceType<typeof NestedEnumStockTransactionTypeFilter>;
}
export declare class NestedEnumTermOrFaqCategoryFilter {
    equals?: keyof typeof TermOrFaqCategory;
    in?: Array<keyof typeof TermOrFaqCategory>;
    notIn?: Array<keyof typeof TermOrFaqCategory>;
    not?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
}
export declare class NestedEnumTermOrFaqCategoryWithAggregatesFilter {
    equals?: keyof typeof TermOrFaqCategory;
    in?: Array<keyof typeof TermOrFaqCategory>;
    notIn?: Array<keyof typeof TermOrFaqCategory>;
    not?: InstanceType<typeof NestedEnumTermOrFaqCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumTermOrFaqCategoryFilter>;
}
export declare class NestedEnumTermOrFaqTypeFilter {
    equals?: keyof typeof TermOrFaqType;
    in?: Array<keyof typeof TermOrFaqType>;
    notIn?: Array<keyof typeof TermOrFaqType>;
    not?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
}
export declare class NestedEnumTermOrFaqTypeWithAggregatesFilter {
    equals?: keyof typeof TermOrFaqType;
    in?: Array<keyof typeof TermOrFaqType>;
    notIn?: Array<keyof typeof TermOrFaqType>;
    not?: InstanceType<typeof NestedEnumTermOrFaqTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
    _max?: InstanceType<typeof NestedEnumTermOrFaqTypeFilter>;
}
export declare class NestedEnumThemeFilter {
    equals?: keyof typeof Theme;
    in?: Array<keyof typeof Theme>;
    notIn?: Array<keyof typeof Theme>;
    not?: InstanceType<typeof NestedEnumThemeFilter>;
}
export declare class NestedEnumThemeWithAggregatesFilter {
    equals?: keyof typeof Theme;
    in?: Array<keyof typeof Theme>;
    notIn?: Array<keyof typeof Theme>;
    not?: InstanceType<typeof NestedEnumThemeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumThemeFilter>;
    _max?: InstanceType<typeof NestedEnumThemeFilter>;
}
export declare class NestedEnumTransactionCategoryFilter {
    equals?: keyof typeof TransactionCategory;
    in?: Array<keyof typeof TransactionCategory>;
    notIn?: Array<keyof typeof TransactionCategory>;
    not?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
}
export declare class NestedEnumTransactionCategoryWithAggregatesFilter {
    equals?: keyof typeof TransactionCategory;
    in?: Array<keyof typeof TransactionCategory>;
    notIn?: Array<keyof typeof TransactionCategory>;
    not?: InstanceType<typeof NestedEnumTransactionCategoryWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
    _max?: InstanceType<typeof NestedEnumTransactionCategoryFilter>;
}
export declare class NestedEnumTransactionStatusFilter {
    equals?: keyof typeof TransactionStatus;
    in?: Array<keyof typeof TransactionStatus>;
    notIn?: Array<keyof typeof TransactionStatus>;
    not?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
}
export declare class NestedEnumTransactionStatusWithAggregatesFilter {
    equals?: keyof typeof TransactionStatus;
    in?: Array<keyof typeof TransactionStatus>;
    notIn?: Array<keyof typeof TransactionStatus>;
    not?: InstanceType<typeof NestedEnumTransactionStatusWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
    _max?: InstanceType<typeof NestedEnumTransactionStatusFilter>;
}
export declare class NestedEnumUserRoleFilter {
    equals?: keyof typeof UserRole;
    in?: Array<keyof typeof UserRole>;
    notIn?: Array<keyof typeof UserRole>;
    not?: InstanceType<typeof NestedEnumUserRoleFilter>;
}
export declare class NestedEnumUserRoleWithAggregatesFilter {
    equals?: keyof typeof UserRole;
    in?: Array<keyof typeof UserRole>;
    notIn?: Array<keyof typeof UserRole>;
    not?: InstanceType<typeof NestedEnumUserRoleWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumUserRoleFilter>;
    _max?: InstanceType<typeof NestedEnumUserRoleFilter>;
}
export declare class NestedEnumVoucherTypeFilter {
    equals?: keyof typeof VoucherType;
    in?: Array<keyof typeof VoucherType>;
    notIn?: Array<keyof typeof VoucherType>;
    not?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
}
export declare class NestedEnumVoucherTypeWithAggregatesFilter {
    equals?: keyof typeof VoucherType;
    in?: Array<keyof typeof VoucherType>;
    notIn?: Array<keyof typeof VoucherType>;
    not?: InstanceType<typeof NestedEnumVoucherTypeWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
    _max?: InstanceType<typeof NestedEnumVoucherTypeFilter>;
}
export declare class NestedFloatFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatFilter>;
}
export declare class NestedFloatNullableFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatNullableFilter>;
}
export declare class NestedFloatNullableWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    _sum?: InstanceType<typeof NestedFloatNullableFilter>;
    _min?: InstanceType<typeof NestedFloatNullableFilter>;
    _max?: InstanceType<typeof NestedFloatNullableFilter>;
}
export declare class NestedFloatWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedFloatWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _avg?: InstanceType<typeof NestedFloatFilter>;
    _sum?: InstanceType<typeof NestedFloatFilter>;
    _min?: InstanceType<typeof NestedFloatFilter>;
    _max?: InstanceType<typeof NestedFloatFilter>;
}
export declare class NestedIntFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntFilter>;
}
export declare class NestedIntNullableFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntNullableFilter>;
}
export declare class NestedIntNullableWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _avg?: InstanceType<typeof NestedFloatNullableFilter>;
    _sum?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedIntNullableFilter>;
    _max?: InstanceType<typeof NestedIntNullableFilter>;
}
export declare class NestedIntWithAggregatesFilter {
    equals?: number;
    in?: Array<number>;
    notIn?: Array<number>;
    lt?: number;
    lte?: number;
    gt?: number;
    gte?: number;
    not?: InstanceType<typeof NestedIntWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _avg?: InstanceType<typeof NestedFloatFilter>;
    _sum?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedIntFilter>;
    _max?: InstanceType<typeof NestedIntFilter>;
}
export declare class NestedStringFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    not?: InstanceType<typeof NestedStringFilter>;
}
export declare class NestedStringNullableFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    not?: InstanceType<typeof NestedStringNullableFilter>;
}
export declare class NestedStringNullableWithAggregatesFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    not?: InstanceType<typeof NestedStringNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedStringNullableFilter>;
    _max?: InstanceType<typeof NestedStringNullableFilter>;
}
export declare class NestedStringWithAggregatesFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    not?: InstanceType<typeof NestedStringWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedStringFilter>;
    _max?: InstanceType<typeof NestedStringFilter>;
}
export declare class NullableBoolFieldUpdateOperationsInput {
    set?: boolean;
}
export declare class NullableDateTimeFieldUpdateOperationsInput {
    set?: Date | string;
}
export declare class NullableEnumFileTypeFieldUpdateOperationsInput {
    set?: keyof typeof FileType;
}
export declare class NullableFloatFieldUpdateOperationsInput {
    set?: number;
    increment?: number;
    decrement?: number;
    multiply?: number;
    divide?: number;
}
export declare class NullableIntFieldUpdateOperationsInput {
    set?: number;
    increment?: number;
    decrement?: number;
    multiply?: number;
    divide?: number;
}
export declare class NullableStringFieldUpdateOperationsInput {
    set?: string;
}
export declare class SortOrderInput {
    sort: keyof typeof SortOrder;
    nulls?: keyof typeof NullsOrder;
}
export declare class StringFieldUpdateOperationsInput {
    set?: string;
}
export declare class StringFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    mode?: keyof typeof QueryMode;
    not?: InstanceType<typeof NestedStringFilter>;
}
export declare class StringNullableFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    mode?: keyof typeof QueryMode;
    not?: InstanceType<typeof NestedStringNullableFilter>;
}
export declare class StringNullableWithAggregatesFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    mode?: keyof typeof QueryMode;
    not?: InstanceType<typeof NestedStringNullableWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntNullableFilter>;
    _min?: InstanceType<typeof NestedStringNullableFilter>;
    _max?: InstanceType<typeof NestedStringNullableFilter>;
}
export declare class StringWithAggregatesFilter {
    equals?: string;
    in?: Array<string>;
    notIn?: Array<string>;
    lt?: string;
    lte?: string;
    gt?: string;
    gte?: string;
    contains?: string;
    startsWith?: string;
    endsWith?: string;
    mode?: keyof typeof QueryMode;
    not?: InstanceType<typeof NestedStringWithAggregatesFilter>;
    _count?: InstanceType<typeof NestedIntFilter>;
    _min?: InstanceType<typeof NestedStringFilter>;
    _max?: InstanceType<typeof NestedStringFilter>;
}
export declare class AggregateProvince {
    _count?: InstanceType<typeof ProvinceCountAggregate>;
    _avg?: InstanceType<typeof ProvinceAvgAggregate>;
    _sum?: InstanceType<typeof ProvinceSumAggregate>;
    _min?: InstanceType<typeof ProvinceMinAggregate>;
    _max?: InstanceType<typeof ProvinceMaxAggregate>;
}
export declare class CreateManyProvinceArgs {
    data: Array<ProvinceCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneProvinceArgs {
    data: InstanceType<typeof ProvinceCreateInput>;
}
export declare class DeleteManyProvinceArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
}
export declare class DeleteOneProvinceArgs {
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
}
export declare class FindFirstProvinceOrThrowArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
    orderBy?: Array<ProvinceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ProvinceScalarFieldEnum>;
}
export declare class FindFirstProvinceArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
    orderBy?: Array<ProvinceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ProvinceScalarFieldEnum>;
}
export declare class FindManyProvinceArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
    orderBy?: Array<ProvinceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ProvinceScalarFieldEnum>;
}
export declare class FindUniqueProvinceOrThrowArgs {
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
}
export declare class FindUniqueProvinceArgs {
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
}
export declare class ProvinceAggregateArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
    orderBy?: Array<ProvinceOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ProvinceCountAggregateInput>;
    _avg?: InstanceType<typeof ProvinceAvgAggregateInput>;
    _sum?: InstanceType<typeof ProvinceSumAggregateInput>;
    _min?: InstanceType<typeof ProvinceMinAggregateInput>;
    _max?: InstanceType<typeof ProvinceMaxAggregateInput>;
}
export declare class ProvinceAvgAggregateInput {
    id?: true;
}
export declare class ProvinceAvgAggregate {
    id?: number;
}
export declare class ProvinceAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class ProvinceCountAggregateInput {
    id?: true;
    name?: true;
    _all?: true;
}
export declare class ProvinceCountAggregate {
    id: number;
    name: number;
    _all: number;
}
export declare class ProvinceCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
}
export declare class ProvinceCount {
    cities?: number;
}
export declare class ProvinceCreateManyInput {
    id?: number;
    name: string;
}
export declare class ProvinceCreateNestedOneWithoutCitiesInput {
    create?: InstanceType<typeof ProvinceCreateWithoutCitiesInput>;
    connectOrCreate?: InstanceType<typeof ProvinceCreateOrConnectWithoutCitiesInput>;
    connect?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
}
export declare class ProvinceCreateOrConnectWithoutCitiesInput {
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    create: InstanceType<typeof ProvinceCreateWithoutCitiesInput>;
}
export declare class ProvinceCreateWithoutCitiesInput {
    name: string;
}
export declare class ProvinceCreateInput {
    name: string;
    cities?: InstanceType<typeof CityCreateNestedManyWithoutProvinceInput>;
}
export declare class ProvinceGroupByArgs {
    where?: InstanceType<typeof ProvinceWhereInput>;
    orderBy?: Array<ProvinceOrderByWithAggregationInput>;
    by: Array<keyof typeof ProvinceScalarFieldEnum>;
    having?: InstanceType<typeof ProvinceScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ProvinceCountAggregateInput>;
    _avg?: InstanceType<typeof ProvinceAvgAggregateInput>;
    _sum?: InstanceType<typeof ProvinceSumAggregateInput>;
    _min?: InstanceType<typeof ProvinceMinAggregateInput>;
    _max?: InstanceType<typeof ProvinceMaxAggregateInput>;
}
export declare class ProvinceGroupBy {
    id: number;
    name: string;
    _count?: InstanceType<typeof ProvinceCountAggregate>;
    _avg?: InstanceType<typeof ProvinceAvgAggregate>;
    _sum?: InstanceType<typeof ProvinceSumAggregate>;
    _min?: InstanceType<typeof ProvinceMinAggregate>;
    _max?: InstanceType<typeof ProvinceMaxAggregate>;
}
export declare class ProvinceMaxAggregateInput {
    id?: true;
    name?: true;
}
export declare class ProvinceMaxAggregate {
    id?: number;
    name?: string;
}
export declare class ProvinceMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
}
export declare class ProvinceMinAggregateInput {
    id?: true;
    name?: true;
}
export declare class ProvinceMinAggregate {
    id?: number;
    name?: string;
}
export declare class ProvinceMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
}
export declare class ProvinceOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    _count?: InstanceType<typeof ProvinceCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ProvinceAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ProvinceMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ProvinceMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ProvinceSumOrderByAggregateInput>;
}
export declare class ProvinceOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    cities?: InstanceType<typeof CityOrderByRelationAggregateInput>;
}
export declare class ProvinceRelationFilter {
    is?: InstanceType<typeof ProvinceWhereInput>;
    isNot?: InstanceType<typeof ProvinceWhereInput>;
}
export declare class ProvinceScalarWhereWithAggregatesInput {
    AND?: Array<ProvinceScalarWhereWithAggregatesInput>;
    OR?: Array<ProvinceScalarWhereWithAggregatesInput>;
    NOT?: Array<ProvinceScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class ProvinceSumAggregateInput {
    id?: true;
}
export declare class ProvinceSumAggregate {
    id?: number;
}
export declare class ProvinceSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class ProvinceUncheckedCreateWithoutCitiesInput {
    id?: number;
    name: string;
}
export declare class ProvinceUncheckedCreateInput {
    id?: number;
    name: string;
    cities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutProvinceInput>;
}
export declare class ProvinceUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ProvinceUncheckedUpdateWithoutCitiesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ProvinceUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cities?: InstanceType<typeof CityUncheckedUpdateManyWithoutProvinceNestedInput>;
}
export declare class ProvinceUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ProvinceUpdateOneRequiredWithoutCitiesNestedInput {
    create?: InstanceType<typeof ProvinceCreateWithoutCitiesInput>;
    connectOrCreate?: InstanceType<typeof ProvinceCreateOrConnectWithoutCitiesInput>;
    upsert?: InstanceType<typeof ProvinceUpsertWithoutCitiesInput>;
    connect?: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    update?: InstanceType<typeof ProvinceUpdateToOneWithWhereWithoutCitiesInput>;
}
export declare class ProvinceUpdateToOneWithWhereWithoutCitiesInput {
    where?: InstanceType<typeof ProvinceWhereInput>;
    data: InstanceType<typeof ProvinceUpdateWithoutCitiesInput>;
}
export declare class ProvinceUpdateWithoutCitiesInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ProvinceUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cities?: InstanceType<typeof CityUpdateManyWithoutProvinceNestedInput>;
}
export declare class ProvinceUpsertWithoutCitiesInput {
    update: InstanceType<typeof ProvinceUpdateWithoutCitiesInput>;
    create: InstanceType<typeof ProvinceCreateWithoutCitiesInput>;
    where?: InstanceType<typeof ProvinceWhereInput>;
}
export declare class ProvinceWhereUniqueInput {
    id?: number;
    name?: string;
    AND?: Array<ProvinceWhereInput>;
    OR?: Array<ProvinceWhereInput>;
    NOT?: Array<ProvinceWhereInput>;
    cities?: InstanceType<typeof CityListRelationFilter>;
}
export declare class ProvinceWhereInput {
    AND?: Array<ProvinceWhereInput>;
    OR?: Array<ProvinceWhereInput>;
    NOT?: Array<ProvinceWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    cities?: InstanceType<typeof CityListRelationFilter>;
}
export declare class Province {
    id: number;
    name: string;
    cities?: Array<City>;
    _count?: InstanceType<typeof ProvinceCount>;
}
export declare class UpdateManyProvinceArgs {
    data: InstanceType<typeof ProvinceUpdateManyMutationInput>;
    where?: InstanceType<typeof ProvinceWhereInput>;
}
export declare class UpdateOneProvinceArgs {
    data: InstanceType<typeof ProvinceUpdateInput>;
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
}
export declare class UpsertOneProvinceArgs {
    where: Prisma.AtLeast<ProvinceWhereUniqueInput, 'id' | 'name'>;
    create: InstanceType<typeof ProvinceCreateInput>;
    update: InstanceType<typeof ProvinceUpdateInput>;
}
export declare class AggregateReview {
    _count?: InstanceType<typeof ReviewCountAggregate>;
    _avg?: InstanceType<typeof ReviewAvgAggregate>;
    _sum?: InstanceType<typeof ReviewSumAggregate>;
    _min?: InstanceType<typeof ReviewMinAggregate>;
    _max?: InstanceType<typeof ReviewMaxAggregate>;
}
export declare class CreateManyReviewArgs {
    data: Array<ReviewCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneReviewArgs {
    data: InstanceType<typeof ReviewCreateInput>;
}
export declare class DeleteManyReviewArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
}
export declare class DeleteOneReviewArgs {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
}
export declare class FindFirstReviewOrThrowArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
    orderBy?: Array<ReviewOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ReviewScalarFieldEnum>;
}
export declare class FindFirstReviewArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
    orderBy?: Array<ReviewOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ReviewScalarFieldEnum>;
}
export declare class FindManyReviewArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
    orderBy?: Array<ReviewOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ReviewScalarFieldEnum>;
}
export declare class FindUniqueReviewOrThrowArgs {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
}
export declare class FindUniqueReviewArgs {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
}
export declare class ReviewAggregateArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
    orderBy?: Array<ReviewOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ReviewCountAggregateInput>;
    _avg?: InstanceType<typeof ReviewAvgAggregateInput>;
    _sum?: InstanceType<typeof ReviewSumAggregateInput>;
    _min?: InstanceType<typeof ReviewMinAggregateInput>;
    _max?: InstanceType<typeof ReviewMaxAggregateInput>;
}
export declare class ReviewAvgAggregateInput {
    id?: true;
    outletId?: true;
}
export declare class ReviewAvgAggregate {
    id?: number;
    outletId?: number;
}
export declare class ReviewAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class ReviewCountAggregateInput {
    id?: true;
    description?: true;
    cleanlinessScore?: true;
    speedScore?: true;
    qualityScore?: true;
    priceScore?: true;
    overallAverageScore?: true;
    createdAt?: true;
    updatedAt?: true;
    reviewById?: true;
    outletId?: true;
    _all?: true;
}
export declare class ReviewCountAggregate {
    id: number;
    description: number;
    cleanlinessScore: number;
    speedScore: number;
    qualityScore: number;
    priceScore: number;
    overallAverageScore: number;
    createdAt: number;
    updatedAt: number;
    reviewById: number;
    outletId: number;
    _all: number;
}
export declare class ReviewCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    cleanlinessScore?: keyof typeof SortOrder;
    speedScore?: keyof typeof SortOrder;
    qualityScore?: keyof typeof SortOrder;
    priceScore?: keyof typeof SortOrder;
    overallAverageScore?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    reviewById?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class ReviewCount {
    images?: number;
    message?: number;
    likes?: number;
    dislikes?: number;
}
export declare class ReviewCreateManyOutletInputEnvelope {
    data: Array<ReviewCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class ReviewCreateManyOutletInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
}
export declare class ReviewCreateManyReviewByInputEnvelope {
    data: Array<ReviewCreateManyReviewByInput>;
    skipDuplicates?: boolean;
}
export declare class ReviewCreateManyReviewByInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
}
export declare class ReviewCreateManyInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
}
export declare class ReviewCreateNestedManyWithoutDislikesInput {
    create?: Array<ReviewCreateWithoutDislikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutDislikesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewCreateNestedManyWithoutImagesInput {
    create?: Array<ReviewCreateWithoutImagesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewCreateNestedManyWithoutLikesInput {
    create?: Array<ReviewCreateWithoutLikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutLikesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewCreateNestedManyWithoutOutletInput {
    create?: Array<ReviewCreateWithoutOutletInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ReviewCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewCreateNestedManyWithoutReviewByInput {
    create?: Array<ReviewCreateWithoutReviewByInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutReviewByInput>;
    createMany?: InstanceType<typeof ReviewCreateManyReviewByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewCreateNestedOneWithoutMessageInput {
    create?: InstanceType<typeof ReviewCreateWithoutMessageInput>;
    connectOrCreate?: InstanceType<typeof ReviewCreateOrConnectWithoutMessageInput>;
    connect?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
}
export declare class ReviewCreateOrConnectWithoutDislikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutDislikesInput>;
}
export declare class ReviewCreateOrConnectWithoutImagesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutImagesInput>;
}
export declare class ReviewCreateOrConnectWithoutLikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutLikesInput>;
}
export declare class ReviewCreateOrConnectWithoutMessageInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutMessageInput>;
}
export declare class ReviewCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutOutletInput>;
}
export declare class ReviewCreateOrConnectWithoutReviewByInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateWithoutReviewByInput>;
}
export declare class ReviewCreateWithoutDislikesInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
}
export declare class ReviewCreateWithoutImagesInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewCreateWithoutLikesInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewCreateWithoutMessageInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewCreateWithoutOutletInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewCreateWithoutReviewByInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewCreateInput {
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewBy: InstanceType<typeof CustomerCreateNestedOneWithoutReviewsInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutReviewsInput>;
    images?: InstanceType<typeof ImageCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewGroupByArgs {
    where?: InstanceType<typeof ReviewWhereInput>;
    orderBy?: Array<ReviewOrderByWithAggregationInput>;
    by: Array<keyof typeof ReviewScalarFieldEnum>;
    having?: InstanceType<typeof ReviewScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ReviewCountAggregateInput>;
    _avg?: InstanceType<typeof ReviewAvgAggregateInput>;
    _sum?: InstanceType<typeof ReviewSumAggregateInput>;
    _min?: InstanceType<typeof ReviewMinAggregateInput>;
    _max?: InstanceType<typeof ReviewMaxAggregateInput>;
}
export declare class ReviewGroupBy {
    id: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt: Date | string;
    updatedAt: Date | string;
    reviewById: string;
    outletId: number;
    _count?: InstanceType<typeof ReviewCountAggregate>;
    _avg?: InstanceType<typeof ReviewAvgAggregate>;
    _sum?: InstanceType<typeof ReviewSumAggregate>;
    _min?: InstanceType<typeof ReviewMinAggregate>;
    _max?: InstanceType<typeof ReviewMaxAggregate>;
}
export declare class ReviewListRelationFilter {
    every?: InstanceType<typeof ReviewWhereInput>;
    some?: InstanceType<typeof ReviewWhereInput>;
    none?: InstanceType<typeof ReviewWhereInput>;
}
export declare class ReviewMaxAggregateInput {
    id?: true;
    description?: true;
    cleanlinessScore?: true;
    speedScore?: true;
    qualityScore?: true;
    priceScore?: true;
    overallAverageScore?: true;
    createdAt?: true;
    updatedAt?: true;
    reviewById?: true;
    outletId?: true;
}
export declare class ReviewMaxAggregate {
    id?: number;
    description?: string;
    cleanlinessScore?: keyof typeof Scale;
    speedScore?: keyof typeof Scale;
    qualityScore?: keyof typeof Scale;
    priceScore?: keyof typeof Scale;
    overallAverageScore?: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById?: string;
    outletId?: number;
}
export declare class ReviewMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    cleanlinessScore?: keyof typeof SortOrder;
    speedScore?: keyof typeof SortOrder;
    qualityScore?: keyof typeof SortOrder;
    priceScore?: keyof typeof SortOrder;
    overallAverageScore?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    reviewById?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class ReviewMinAggregateInput {
    id?: true;
    description?: true;
    cleanlinessScore?: true;
    speedScore?: true;
    qualityScore?: true;
    priceScore?: true;
    overallAverageScore?: true;
    createdAt?: true;
    updatedAt?: true;
    reviewById?: true;
    outletId?: true;
}
export declare class ReviewMinAggregate {
    id?: number;
    description?: string;
    cleanlinessScore?: keyof typeof Scale;
    speedScore?: keyof typeof Scale;
    qualityScore?: keyof typeof Scale;
    priceScore?: keyof typeof Scale;
    overallAverageScore?: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById?: string;
    outletId?: number;
}
export declare class ReviewMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    cleanlinessScore?: keyof typeof SortOrder;
    speedScore?: keyof typeof SortOrder;
    qualityScore?: keyof typeof SortOrder;
    priceScore?: keyof typeof SortOrder;
    overallAverageScore?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    reviewById?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class ReviewNullableRelationFilter {
    is?: InstanceType<typeof ReviewWhereInput>;
    isNot?: InstanceType<typeof ReviewWhereInput>;
}
export declare class ReviewOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class ReviewOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    cleanlinessScore?: keyof typeof SortOrder;
    speedScore?: keyof typeof SortOrder;
    qualityScore?: keyof typeof SortOrder;
    priceScore?: keyof typeof SortOrder;
    overallAverageScore?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    reviewById?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof ReviewCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ReviewAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ReviewMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ReviewMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ReviewSumOrderByAggregateInput>;
}
export declare class ReviewOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    cleanlinessScore?: keyof typeof SortOrder;
    speedScore?: keyof typeof SortOrder;
    qualityScore?: keyof typeof SortOrder;
    priceScore?: keyof typeof SortOrder;
    overallAverageScore?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    reviewById?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    reviewBy?: InstanceType<typeof CustomerOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    images?: InstanceType<typeof ImageOrderByRelationAggregateInput>;
    message?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
    likes?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    dislikes?: InstanceType<typeof UserOrderByRelationAggregateInput>;
}
export declare class ReviewScalarWhereWithAggregatesInput {
    AND?: Array<ReviewScalarWhereWithAggregatesInput>;
    OR?: Array<ReviewScalarWhereWithAggregatesInput>;
    NOT?: Array<ReviewScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    description?: InstanceType<typeof StringWithAggregatesFilter>;
    cleanlinessScore?: InstanceType<typeof EnumScaleWithAggregatesFilter>;
    speedScore?: InstanceType<typeof EnumScaleWithAggregatesFilter>;
    qualityScore?: InstanceType<typeof EnumScaleWithAggregatesFilter>;
    priceScore?: InstanceType<typeof EnumScaleWithAggregatesFilter>;
    overallAverageScore?: InstanceType<typeof EnumScaleWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    reviewById?: InstanceType<typeof StringWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class ReviewScalarWhereInput {
    AND?: Array<ReviewScalarWhereInput>;
    OR?: Array<ReviewScalarWhereInput>;
    NOT?: Array<ReviewScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    description?: InstanceType<typeof StringFilter>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFilter>;
    speedScore?: InstanceType<typeof EnumScaleFilter>;
    qualityScore?: InstanceType<typeof EnumScaleFilter>;
    priceScore?: InstanceType<typeof EnumScaleFilter>;
    overallAverageScore?: InstanceType<typeof EnumScaleFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    reviewById?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
}
export declare class ReviewSumAggregateInput {
    id?: true;
    outletId?: true;
}
export declare class ReviewSumAggregate {
    id?: number;
    outletId?: number;
}
export declare class ReviewSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
}
export declare class ReviewUncheckedCreateNestedManyWithoutDislikesInput {
    create?: Array<ReviewCreateWithoutDislikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutDislikesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewUncheckedCreateNestedManyWithoutImagesInput {
    create?: Array<ReviewCreateWithoutImagesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutImagesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewUncheckedCreateNestedManyWithoutLikesInput {
    create?: Array<ReviewCreateWithoutLikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutLikesInput>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<ReviewCreateWithoutOutletInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ReviewCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewUncheckedCreateNestedManyWithoutReviewByInput {
    create?: Array<ReviewCreateWithoutReviewByInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutReviewByInput>;
    createMany?: InstanceType<typeof ReviewCreateManyReviewByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
}
export declare class ReviewUncheckedCreateWithoutDislikesInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
}
export declare class ReviewUncheckedCreateWithoutImagesInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedCreateWithoutLikesInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedCreateWithoutMessageInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedCreateWithoutOutletInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedCreateWithoutReviewByInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    outletId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedCreateInput {
    id?: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    reviewById: string;
    outletId: number;
    images?: InstanceType<typeof ImageUncheckedCreateNestedManyWithoutReviewsInput>;
    message?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReviewInput>;
    likes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewLikesInput>;
    dislikes?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutReviewDislikesInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutDislikesNestedInput {
    create?: Array<ReviewCreateWithoutDislikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutDislikesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutDislikesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutDislikesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutDislikesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutDislikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutImagesNestedInput {
    create?: Array<ReviewCreateWithoutImagesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutImagesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutLikesNestedInput {
    create?: Array<ReviewCreateWithoutLikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutLikesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutLikesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutLikesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutLikesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutLikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<ReviewCreateWithoutOutletInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ReviewCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutReviewByNestedInput {
    create?: Array<ReviewCreateWithoutReviewByInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutReviewByInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutReviewByInput>;
    createMany?: InstanceType<typeof ReviewCreateManyReviewByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutReviewByInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutReviewByInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUncheckedUpdateManyWithoutReviewByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ReviewUncheckedUpdateWithoutDislikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
}
export declare class ReviewUncheckedUpdateWithoutImagesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUncheckedUpdateWithoutLikesInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUncheckedUpdateWithoutMessageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUncheckedUpdateWithoutReviewByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    images?: InstanceType<typeof ImageUncheckedUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUncheckedUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateManyMutationInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ReviewUpdateManyWithWhereWithoutDislikesInput {
    where: InstanceType<typeof ReviewScalarWhereInput>;
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
}
export declare class ReviewUpdateManyWithWhereWithoutImagesInput {
    where: InstanceType<typeof ReviewScalarWhereInput>;
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
}
export declare class ReviewUpdateManyWithWhereWithoutLikesInput {
    where: InstanceType<typeof ReviewScalarWhereInput>;
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
}
export declare class ReviewUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof ReviewScalarWhereInput>;
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
}
export declare class ReviewUpdateManyWithWhereWithoutReviewByInput {
    where: InstanceType<typeof ReviewScalarWhereInput>;
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
}
export declare class ReviewUpdateManyWithoutDislikesNestedInput {
    create?: Array<ReviewCreateWithoutDislikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutDislikesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutDislikesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutDislikesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutDislikesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUpdateManyWithoutImagesNestedInput {
    create?: Array<ReviewCreateWithoutImagesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutImagesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutImagesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutImagesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutImagesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUpdateManyWithoutLikesNestedInput {
    create?: Array<ReviewCreateWithoutLikesInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutLikesInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutLikesInput>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutLikesInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutLikesInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUpdateManyWithoutOutletNestedInput {
    create?: Array<ReviewCreateWithoutOutletInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ReviewCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUpdateManyWithoutReviewByNestedInput {
    create?: Array<ReviewCreateWithoutReviewByInput>;
    connectOrCreate?: Array<ReviewCreateOrConnectWithoutReviewByInput>;
    upsert?: Array<ReviewUpsertWithWhereUniqueWithoutReviewByInput>;
    createMany?: InstanceType<typeof ReviewCreateManyReviewByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>>;
    update?: Array<ReviewUpdateWithWhereUniqueWithoutReviewByInput>;
    updateMany?: Array<ReviewUpdateManyWithWhereWithoutReviewByInput>;
    deleteMany?: Array<ReviewScalarWhereInput>;
}
export declare class ReviewUpdateOneWithoutMessageNestedInput {
    create?: InstanceType<typeof ReviewCreateWithoutMessageInput>;
    connectOrCreate?: InstanceType<typeof ReviewCreateOrConnectWithoutMessageInput>;
    upsert?: InstanceType<typeof ReviewUpsertWithoutMessageInput>;
    disconnect?: InstanceType<typeof ReviewWhereInput>;
    delete?: InstanceType<typeof ReviewWhereInput>;
    connect?: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ReviewUpdateToOneWithWhereWithoutMessageInput>;
}
export declare class ReviewUpdateToOneWithWhereWithoutMessageInput {
    where?: InstanceType<typeof ReviewWhereInput>;
    data: InstanceType<typeof ReviewUpdateWithoutMessageInput>;
}
export declare class ReviewUpdateWithWhereUniqueWithoutDislikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ReviewUpdateWithoutDislikesInput>;
}
export declare class ReviewUpdateWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ReviewUpdateWithoutImagesInput>;
}
export declare class ReviewUpdateWithWhereUniqueWithoutLikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ReviewUpdateWithoutLikesInput>;
}
export declare class ReviewUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ReviewUpdateWithoutOutletInput>;
}
export declare class ReviewUpdateWithWhereUniqueWithoutReviewByInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ReviewUpdateWithoutReviewByInput>;
}
export declare class ReviewUpdateWithoutDislikesInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
}
export declare class ReviewUpdateWithoutImagesInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateWithoutLikesInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateWithoutMessageInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateWithoutOutletInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateWithoutReviewByInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpdateInput {
    description?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    speedScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    qualityScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    priceScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    overallAverageScore?: InstanceType<typeof EnumScaleFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    reviewBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutReviewsNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutReviewsNestedInput>;
    images?: InstanceType<typeof ImageUpdateManyWithoutReviewsNestedInput>;
    message?: InstanceType<typeof MessageUpdateManyWithoutReviewNestedInput>;
    likes?: InstanceType<typeof UserUpdateManyWithoutReviewLikesNestedInput>;
    dislikes?: InstanceType<typeof UserUpdateManyWithoutReviewDislikesNestedInput>;
}
export declare class ReviewUpsertWithWhereUniqueWithoutDislikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ReviewUpdateWithoutDislikesInput>;
    create: InstanceType<typeof ReviewCreateWithoutDislikesInput>;
}
export declare class ReviewUpsertWithWhereUniqueWithoutImagesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ReviewUpdateWithoutImagesInput>;
    create: InstanceType<typeof ReviewCreateWithoutImagesInput>;
}
export declare class ReviewUpsertWithWhereUniqueWithoutLikesInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ReviewUpdateWithoutLikesInput>;
    create: InstanceType<typeof ReviewCreateWithoutLikesInput>;
}
export declare class ReviewUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ReviewUpdateWithoutOutletInput>;
    create: InstanceType<typeof ReviewCreateWithoutOutletInput>;
}
export declare class ReviewUpsertWithWhereUniqueWithoutReviewByInput {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ReviewUpdateWithoutReviewByInput>;
    create: InstanceType<typeof ReviewCreateWithoutReviewByInput>;
}
export declare class ReviewUpsertWithoutMessageInput {
    update: InstanceType<typeof ReviewUpdateWithoutMessageInput>;
    create: InstanceType<typeof ReviewCreateWithoutMessageInput>;
    where?: InstanceType<typeof ReviewWhereInput>;
}
export declare class ReviewWhereUniqueInput {
    id?: number;
    AND?: Array<ReviewWhereInput>;
    OR?: Array<ReviewWhereInput>;
    NOT?: Array<ReviewWhereInput>;
    description?: InstanceType<typeof StringFilter>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFilter>;
    speedScore?: InstanceType<typeof EnumScaleFilter>;
    qualityScore?: InstanceType<typeof EnumScaleFilter>;
    priceScore?: InstanceType<typeof EnumScaleFilter>;
    overallAverageScore?: InstanceType<typeof EnumScaleFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    reviewById?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    reviewBy?: InstanceType<typeof CustomerRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    message?: InstanceType<typeof MessageListRelationFilter>;
    likes?: InstanceType<typeof UserListRelationFilter>;
    dislikes?: InstanceType<typeof UserListRelationFilter>;
}
export declare class ReviewWhereInput {
    AND?: Array<ReviewWhereInput>;
    OR?: Array<ReviewWhereInput>;
    NOT?: Array<ReviewWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    description?: InstanceType<typeof StringFilter>;
    cleanlinessScore?: InstanceType<typeof EnumScaleFilter>;
    speedScore?: InstanceType<typeof EnumScaleFilter>;
    qualityScore?: InstanceType<typeof EnumScaleFilter>;
    priceScore?: InstanceType<typeof EnumScaleFilter>;
    overallAverageScore?: InstanceType<typeof EnumScaleFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    reviewById?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    reviewBy?: InstanceType<typeof CustomerRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    images?: InstanceType<typeof ImageListRelationFilter>;
    message?: InstanceType<typeof MessageListRelationFilter>;
    likes?: InstanceType<typeof UserListRelationFilter>;
    dislikes?: InstanceType<typeof UserListRelationFilter>;
}
export declare class Review {
    id: number;
    description: string;
    cleanlinessScore: keyof typeof Scale;
    speedScore: keyof typeof Scale;
    qualityScore: keyof typeof Scale;
    priceScore: keyof typeof Scale;
    overallAverageScore: keyof typeof Scale;
    createdAt: Date;
    updatedAt: Date;
    reviewById: string;
    outletId: number;
    reviewBy?: InstanceType<typeof Customer>;
    outlet?: InstanceType<typeof Outlet>;
    images?: Array<Image>;
    message?: Array<Message>;
    likes?: Array<User>;
    dislikes?: Array<User>;
    _count?: InstanceType<typeof ReviewCount>;
}
export declare class UpdateManyReviewArgs {
    data: InstanceType<typeof ReviewUpdateManyMutationInput>;
    where?: InstanceType<typeof ReviewWhereInput>;
}
export declare class UpdateOneReviewArgs {
    data: InstanceType<typeof ReviewUpdateInput>;
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
}
export declare class UpsertOneReviewArgs {
    where: Prisma.AtLeast<ReviewWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ReviewCreateInput>;
    update: InstanceType<typeof ReviewUpdateInput>;
}
export declare class AggregateSchedule {
    _count?: InstanceType<typeof ScheduleCountAggregate>;
    _avg?: InstanceType<typeof ScheduleAvgAggregate>;
    _sum?: InstanceType<typeof ScheduleSumAggregate>;
    _min?: InstanceType<typeof ScheduleMinAggregate>;
    _max?: InstanceType<typeof ScheduleMaxAggregate>;
}
export declare class CreateManyScheduleArgs {
    data: Array<ScheduleCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneScheduleArgs {
    data: InstanceType<typeof ScheduleCreateInput>;
}
export declare class DeleteManyScheduleArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
}
export declare class DeleteOneScheduleArgs {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
}
export declare class FindFirstScheduleOrThrowArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
    orderBy?: Array<ScheduleOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ScheduleScalarFieldEnum>;
}
export declare class FindFirstScheduleArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
    orderBy?: Array<ScheduleOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ScheduleScalarFieldEnum>;
}
export declare class FindManyScheduleArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
    orderBy?: Array<ScheduleOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ScheduleScalarFieldEnum>;
}
export declare class FindUniqueScheduleOrThrowArgs {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
}
export declare class FindUniqueScheduleArgs {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
}
export declare class ScheduleAggregateArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
    orderBy?: Array<ScheduleOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ScheduleCountAggregateInput>;
    _avg?: InstanceType<typeof ScheduleAvgAggregateInput>;
    _sum?: InstanceType<typeof ScheduleSumAggregateInput>;
    _min?: InstanceType<typeof ScheduleMinAggregateInput>;
    _max?: InstanceType<typeof ScheduleMaxAggregateInput>;
}
export declare class ScheduleAvgAggregateInput {
    id?: true;
    dayOfWeek?: true;
    outletId?: true;
    maxOrders?: true;
    availableSlots?: true;
}
export declare class ScheduleAvgAggregate {
    id?: number;
    dayOfWeek?: number;
    outletId?: number;
    maxOrders?: number;
    availableSlots?: number;
}
export declare class ScheduleAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: keyof typeof SortOrder;
    availableSlots?: keyof typeof SortOrder;
}
export declare class ScheduleCountAggregateInput {
    id?: true;
    dayOfWeek?: true;
    openTime?: true;
    closeTime?: true;
    outletId?: true;
    maxOrders?: true;
    availableSlots?: true;
    isClosed?: true;
    createdAt?: true;
    updatedAt?: true;
    createdById?: true;
    _all?: true;
}
export declare class ScheduleCountAggregate {
    id: number;
    dayOfWeek: number;
    openTime: number;
    closeTime: number;
    outletId: number;
    maxOrders: number;
    availableSlots: number;
    isClosed: number;
    createdAt: number;
    updatedAt: number;
    createdById: number;
    _all: number;
}
export declare class ScheduleCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: keyof typeof SortOrder;
    availableSlots?: keyof typeof SortOrder;
    isClosed?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
}
export declare class ScheduleCreateManyCreatedByInputEnvelope {
    data: Array<ScheduleCreateManyCreatedByInput>;
    skipDuplicates?: boolean;
}
export declare class ScheduleCreateManyCreatedByInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
}
export declare class ScheduleCreateManyOutletInputEnvelope {
    data: Array<ScheduleCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class ScheduleCreateManyOutletInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    createdById: string;
}
export declare class ScheduleCreateManyInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    createdById: string;
}
export declare class ScheduleCreateNestedManyWithoutCreatedByInput {
    create?: Array<ScheduleCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
}
export declare class ScheduleCreateNestedManyWithoutOutletInput {
    create?: Array<ScheduleCreateWithoutOutletInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
}
export declare class ScheduleCreateOrConnectWithoutCreatedByInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ScheduleCreateWithoutCreatedByInput>;
}
export declare class ScheduleCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ScheduleCreateWithoutOutletInput>;
}
export declare class ScheduleCreateWithoutCreatedByInput {
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutSchedulesInput>;
}
export declare class ScheduleCreateWithoutOutletInput {
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutSchedulesCreatedInput>;
}
export declare class ScheduleCreateInput {
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutSchedulesInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutSchedulesCreatedInput>;
}
export declare class ScheduleGroupByArgs {
    where?: InstanceType<typeof ScheduleWhereInput>;
    orderBy?: Array<ScheduleOrderByWithAggregationInput>;
    by: Array<keyof typeof ScheduleScalarFieldEnum>;
    having?: InstanceType<typeof ScheduleScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ScheduleCountAggregateInput>;
    _avg?: InstanceType<typeof ScheduleAvgAggregateInput>;
    _sum?: InstanceType<typeof ScheduleSumAggregateInput>;
    _min?: InstanceType<typeof ScheduleMinAggregateInput>;
    _max?: InstanceType<typeof ScheduleMaxAggregateInput>;
}
export declare class ScheduleGroupBy {
    id: number;
    dayOfWeek: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt: Date | string;
    updatedAt: Date | string;
    createdById: string;
    _count?: InstanceType<typeof ScheduleCountAggregate>;
    _avg?: InstanceType<typeof ScheduleAvgAggregate>;
    _sum?: InstanceType<typeof ScheduleSumAggregate>;
    _min?: InstanceType<typeof ScheduleMinAggregate>;
    _max?: InstanceType<typeof ScheduleMaxAggregate>;
}
export declare class ScheduleListRelationFilter {
    every?: InstanceType<typeof ScheduleWhereInput>;
    some?: InstanceType<typeof ScheduleWhereInput>;
    none?: InstanceType<typeof ScheduleWhereInput>;
}
export declare class ScheduleMaxAggregateInput {
    id?: true;
    dayOfWeek?: true;
    openTime?: true;
    closeTime?: true;
    outletId?: true;
    maxOrders?: true;
    availableSlots?: true;
    isClosed?: true;
    createdAt?: true;
    updatedAt?: true;
    createdById?: true;
}
export declare class ScheduleMaxAggregate {
    id?: number;
    dayOfWeek?: number;
    openTime?: string;
    closeTime?: string;
    outletId?: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    createdById?: string;
}
export declare class ScheduleMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: keyof typeof SortOrder;
    availableSlots?: keyof typeof SortOrder;
    isClosed?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
}
export declare class ScheduleMinAggregateInput {
    id?: true;
    dayOfWeek?: true;
    openTime?: true;
    closeTime?: true;
    outletId?: true;
    maxOrders?: true;
    availableSlots?: true;
    isClosed?: true;
    createdAt?: true;
    updatedAt?: true;
    createdById?: true;
}
export declare class ScheduleMinAggregate {
    id?: number;
    dayOfWeek?: number;
    openTime?: string;
    closeTime?: string;
    outletId?: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    createdById?: string;
}
export declare class ScheduleMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: keyof typeof SortOrder;
    availableSlots?: keyof typeof SortOrder;
    isClosed?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
}
export declare class ScheduleOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class ScheduleOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: InstanceType<typeof SortOrderInput>;
    availableSlots?: InstanceType<typeof SortOrderInput>;
    isClosed?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    _count?: InstanceType<typeof ScheduleCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ScheduleAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ScheduleMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ScheduleMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ScheduleSumOrderByAggregateInput>;
}
export declare class ScheduleOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    openTime?: keyof typeof SortOrder;
    closeTime?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: InstanceType<typeof SortOrderInput>;
    availableSlots?: InstanceType<typeof SortOrderInput>;
    isClosed?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    createdBy?: InstanceType<typeof OwnerOrderByWithRelationInput>;
}
export declare class ScheduleScalarWhereWithAggregatesInput {
    AND?: Array<ScheduleScalarWhereWithAggregatesInput>;
    OR?: Array<ScheduleScalarWhereWithAggregatesInput>;
    NOT?: Array<ScheduleScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    dayOfWeek?: InstanceType<typeof IntWithAggregatesFilter>;
    openTime?: InstanceType<typeof StringWithAggregatesFilter>;
    closeTime?: InstanceType<typeof StringWithAggregatesFilter>;
    outletId?: InstanceType<typeof IntWithAggregatesFilter>;
    maxOrders?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    availableSlots?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    isClosed?: InstanceType<typeof BoolNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    createdById?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class ScheduleScalarWhereInput {
    AND?: Array<ScheduleScalarWhereInput>;
    OR?: Array<ScheduleScalarWhereInput>;
    NOT?: Array<ScheduleScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    dayOfWeek?: InstanceType<typeof IntFilter>;
    openTime?: InstanceType<typeof StringFilter>;
    closeTime?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    maxOrders?: InstanceType<typeof IntNullableFilter>;
    availableSlots?: InstanceType<typeof IntNullableFilter>;
    isClosed?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
}
export declare class ScheduleSumAggregateInput {
    id?: true;
    dayOfWeek?: true;
    outletId?: true;
    maxOrders?: true;
    availableSlots?: true;
}
export declare class ScheduleSumAggregate {
    id?: number;
    dayOfWeek?: number;
    outletId?: number;
    maxOrders?: number;
    availableSlots?: number;
}
export declare class ScheduleSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    dayOfWeek?: keyof typeof SortOrder;
    outletId?: keyof typeof SortOrder;
    maxOrders?: keyof typeof SortOrder;
    availableSlots?: keyof typeof SortOrder;
}
export declare class ScheduleUncheckedCreateNestedManyWithoutCreatedByInput {
    create?: Array<ScheduleCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
}
export declare class ScheduleUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<ScheduleCreateWithoutOutletInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
}
export declare class ScheduleUncheckedCreateWithoutCreatedByInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
}
export declare class ScheduleUncheckedCreateWithoutOutletInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    createdById: string;
}
export declare class ScheduleUncheckedCreateInput {
    id?: number;
    dayOfWeek?: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders?: number;
    availableSlots?: number;
    isClosed?: boolean;
    createdAt?: Date | string;
    updatedAt: Date | string;
    createdById: string;
}
export declare class ScheduleUncheckedUpdateManyWithoutCreatedByNestedInput {
    create?: Array<ScheduleCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<ScheduleUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    update?: Array<ScheduleUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<ScheduleUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<ScheduleScalarWhereInput>;
}
export declare class ScheduleUncheckedUpdateManyWithoutCreatedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ScheduleUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<ScheduleCreateWithoutOutletInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ScheduleUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    update?: Array<ScheduleUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ScheduleUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ScheduleScalarWhereInput>;
}
export declare class ScheduleUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ScheduleUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ScheduleUncheckedUpdateWithoutCreatedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ScheduleUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ScheduleUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class ScheduleUpdateManyMutationInput {
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class ScheduleUpdateManyWithWhereWithoutCreatedByInput {
    where: InstanceType<typeof ScheduleScalarWhereInput>;
    data: InstanceType<typeof ScheduleUpdateManyMutationInput>;
}
export declare class ScheduleUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof ScheduleScalarWhereInput>;
    data: InstanceType<typeof ScheduleUpdateManyMutationInput>;
}
export declare class ScheduleUpdateManyWithoutCreatedByNestedInput {
    create?: Array<ScheduleCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<ScheduleUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    update?: Array<ScheduleUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<ScheduleUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<ScheduleScalarWhereInput>;
}
export declare class ScheduleUpdateManyWithoutOutletNestedInput {
    create?: Array<ScheduleCreateWithoutOutletInput>;
    connectOrCreate?: Array<ScheduleCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ScheduleUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ScheduleCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>>;
    update?: Array<ScheduleUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ScheduleUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ScheduleScalarWhereInput>;
}
export declare class ScheduleUpdateWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ScheduleUpdateWithoutCreatedByInput>;
}
export declare class ScheduleUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ScheduleUpdateWithoutOutletInput>;
}
export declare class ScheduleUpdateWithoutCreatedByInput {
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutSchedulesNestedInput>;
}
export declare class ScheduleUpdateWithoutOutletInput {
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutSchedulesCreatedNestedInput>;
}
export declare class ScheduleUpdateInput {
    dayOfWeek?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    openTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    closeTime?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    maxOrders?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    availableSlots?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    isClosed?: InstanceType<typeof NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutSchedulesNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutSchedulesCreatedNestedInput>;
}
export declare class ScheduleUpsertWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ScheduleUpdateWithoutCreatedByInput>;
    create: InstanceType<typeof ScheduleCreateWithoutCreatedByInput>;
}
export declare class ScheduleUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ScheduleUpdateWithoutOutletInput>;
    create: InstanceType<typeof ScheduleCreateWithoutOutletInput>;
}
export declare class ScheduleWhereUniqueInput {
    id?: number;
    AND?: Array<ScheduleWhereInput>;
    OR?: Array<ScheduleWhereInput>;
    NOT?: Array<ScheduleWhereInput>;
    dayOfWeek?: InstanceType<typeof IntFilter>;
    openTime?: InstanceType<typeof StringFilter>;
    closeTime?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    maxOrders?: InstanceType<typeof IntNullableFilter>;
    availableSlots?: InstanceType<typeof IntNullableFilter>;
    isClosed?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
}
export declare class ScheduleWhereInput {
    AND?: Array<ScheduleWhereInput>;
    OR?: Array<ScheduleWhereInput>;
    NOT?: Array<ScheduleWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    dayOfWeek?: InstanceType<typeof IntFilter>;
    openTime?: InstanceType<typeof StringFilter>;
    closeTime?: InstanceType<typeof StringFilter>;
    outletId?: InstanceType<typeof IntFilter>;
    maxOrders?: InstanceType<typeof IntNullableFilter>;
    availableSlots?: InstanceType<typeof IntNullableFilter>;
    isClosed?: InstanceType<typeof BoolNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
}
export declare class Schedule {
    id: number;
    dayOfWeek: number;
    openTime: string;
    closeTime: string;
    outletId: number;
    maxOrders: number | null;
    availableSlots: number | null;
    isClosed: boolean | null;
    createdAt: Date;
    updatedAt: Date;
    createdById: string;
    outlet?: InstanceType<typeof Outlet>;
    createdBy?: InstanceType<typeof Owner>;
}
export declare class UpdateManyScheduleArgs {
    data: InstanceType<typeof ScheduleUpdateManyMutationInput>;
    where?: InstanceType<typeof ScheduleWhereInput>;
}
export declare class UpdateOneScheduleArgs {
    data: InstanceType<typeof ScheduleUpdateInput>;
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
}
export declare class UpsertOneScheduleArgs {
    where: Prisma.AtLeast<ScheduleWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ScheduleCreateInput>;
    update: InstanceType<typeof ScheduleUpdateInput>;
}
export declare class AggregateServiceOrder {
    _count?: InstanceType<typeof ServiceOrderCountAggregate>;
    _avg?: InstanceType<typeof ServiceOrderAvgAggregate>;
    _sum?: InstanceType<typeof ServiceOrderSumAggregate>;
    _min?: InstanceType<typeof ServiceOrderMinAggregate>;
    _max?: InstanceType<typeof ServiceOrderMaxAggregate>;
}
export declare class CreateManyServiceOrderArgs {
    data: Array<ServiceOrderCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneServiceOrderArgs {
    data: InstanceType<typeof ServiceOrderCreateInput>;
}
export declare class DeleteManyServiceOrderArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class DeleteOneServiceOrderArgs {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class FindFirstServiceOrderOrThrowArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    orderBy?: Array<ServiceOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ServiceOrderScalarFieldEnum>;
}
export declare class FindFirstServiceOrderArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    orderBy?: Array<ServiceOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ServiceOrderScalarFieldEnum>;
}
export declare class FindManyServiceOrderArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    orderBy?: Array<ServiceOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof ServiceOrderScalarFieldEnum>;
}
export declare class FindUniqueServiceOrderOrThrowArgs {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class FindUniqueServiceOrderArgs {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class ServiceOrderAggregateArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    orderBy?: Array<ServiceOrderOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ServiceOrderCountAggregateInput>;
    _avg?: InstanceType<typeof ServiceOrderAvgAggregateInput>;
    _sum?: InstanceType<typeof ServiceOrderSumAggregateInput>;
    _min?: InstanceType<typeof ServiceOrderMinAggregateInput>;
    _max?: InstanceType<typeof ServiceOrderMaxAggregateInput>;
}
export declare class ServiceOrderAvgAggregateInput {
    id?: true;
    platformFee?: true;
    raceConditionVersion?: true;
    addressId?: true;
    deliveryId?: true;
    brandId?: true;
}
export declare class ServiceOrderAvgAggregate {
    id?: number;
    platformFee?: number;
    raceConditionVersion?: number;
    addressId?: number;
    deliveryId?: number;
    brandId?: number;
}
export declare class ServiceOrderAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
}
export declare class ServiceOrderCountAggregateInput {
    id?: true;
    platformFee?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    handleById?: true;
    orderById?: true;
    voucherId?: true;
    addressId?: true;
    deliveryId?: true;
    orderType?: true;
    brandId?: true;
    _all?: true;
}
export declare class ServiceOrderCountAggregate {
    id: number;
    platformFee: number;
    createdAt: number;
    updatedAt: number;
    raceConditionVersion: number;
    handleById: number;
    orderById: number;
    voucherId: number;
    addressId: number;
    deliveryId: number;
    orderType: number;
    brandId: number;
    _all: number;
}
export declare class ServiceOrderCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    handleById?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    orderType?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
}
export declare class ServiceOrderCount {
    status?: number;
    cart?: number;
    Invoice?: number;
    Complain?: number;
}
export declare class ServiceOrderCreateManyAddressInputEnvelope {
    data: Array<ServiceOrderCreateManyAddressInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyAddressInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateManyDeliveryInputEnvelope {
    data: Array<ServiceOrderCreateManyDeliveryInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyDeliveryInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateManyHandleByInputEnvelope {
    data: Array<ServiceOrderCreateManyHandleByInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyHandleByInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateManyOrderByInputEnvelope {
    data: Array<ServiceOrderCreateManyOrderByInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyOrderByInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateManyOutletInputEnvelope {
    data: Array<ServiceOrderCreateManyOutletInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyOutletInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
}
export declare class ServiceOrderCreateManyVoucherInputEnvelope {
    data: Array<ServiceOrderCreateManyVoucherInput>;
    skipDuplicates?: boolean;
}
export declare class ServiceOrderCreateManyVoucherInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateManyInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
}
export declare class ServiceOrderCreateNestedManyWithoutAddressInput {
    create?: Array<ServiceOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutAddressInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyAddressInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedManyWithoutDeliveryInput {
    create?: Array<ServiceOrderCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutDeliveryInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyDeliveryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedManyWithoutHandleByInput {
    create?: Array<ServiceOrderCreateWithoutHandleByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutHandleByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyHandleByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedManyWithoutOrderByInput {
    create?: Array<ServiceOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOrderByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOrderByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedManyWithoutOutletInput {
    create?: Array<ServiceOrderCreateWithoutOutletInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedManyWithoutVoucherInput {
    create?: Array<ServiceOrderCreateWithoutVoucherInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutVoucherInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyVoucherInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderCreateNestedOneWithoutCartInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutCartInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutCartInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class ServiceOrderCreateNestedOneWithoutComplainInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutComplainInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutComplainInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class ServiceOrderCreateNestedOneWithoutInvoiceInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutInvoiceInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutInvoiceInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class ServiceOrderCreateNestedOneWithoutStatusInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutStatusInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutStatusInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class ServiceOrderCreateOrConnectWithoutAddressInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutAddressInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutCartInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutCartInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutComplainInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutComplainInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutDeliveryInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutDeliveryInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutHandleByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutHandleByInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutInvoiceInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutInvoiceInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutOrderByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutOrderByInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutOutletInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutOutletInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutStatusInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutStatusInput>;
}
export declare class ServiceOrderCreateOrConnectWithoutVoucherInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateWithoutVoucherInput>;
}
export declare class ServiceOrderCreateWithoutAddressInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutCartInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutComplainInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutDeliveryInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutHandleByInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutInvoiceInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutOrderByInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutOutletInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutStatusInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateWithoutVoucherInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderCreateInput {
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderType: keyof typeof OrderType;
    handleBy?: InstanceType<typeof EmployeeCreateNestedOneWithoutServiceOrderInput>;
    orderBy: InstanceType<typeof CustomerCreateNestedOneWithoutOrdersInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutServiceOrdersInput>;
    address?: InstanceType<typeof AddressCreateNestedOneWithoutServiceOrderInput>;
    delivery?: InstanceType<typeof DeliveryCreateNestedOneWithoutServiceOrderInput>;
    outlet: InstanceType<typeof OutletCreateNestedOneWithoutOrdersInput>;
    status?: InstanceType<typeof OrderStatusCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderGroupByArgs {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    orderBy?: Array<ServiceOrderOrderByWithAggregationInput>;
    by: Array<keyof typeof ServiceOrderScalarFieldEnum>;
    having?: InstanceType<typeof ServiceOrderScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof ServiceOrderCountAggregateInput>;
    _avg?: InstanceType<typeof ServiceOrderAvgAggregateInput>;
    _sum?: InstanceType<typeof ServiceOrderSumAggregateInput>;
    _min?: InstanceType<typeof ServiceOrderMinAggregateInput>;
    _max?: InstanceType<typeof ServiceOrderMaxAggregateInput>;
}
export declare class ServiceOrderGroupBy {
    id: number;
    platformFee: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    raceConditionVersion: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    _count?: InstanceType<typeof ServiceOrderCountAggregate>;
    _avg?: InstanceType<typeof ServiceOrderAvgAggregate>;
    _sum?: InstanceType<typeof ServiceOrderSumAggregate>;
    _min?: InstanceType<typeof ServiceOrderMinAggregate>;
    _max?: InstanceType<typeof ServiceOrderMaxAggregate>;
}
export declare class ServiceOrderListRelationFilter {
    every?: InstanceType<typeof ServiceOrderWhereInput>;
    some?: InstanceType<typeof ServiceOrderWhereInput>;
    none?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderMaxAggregateInput {
    id?: true;
    platformFee?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    handleById?: true;
    orderById?: true;
    voucherId?: true;
    addressId?: true;
    deliveryId?: true;
    orderType?: true;
    brandId?: true;
}
export declare class ServiceOrderMaxAggregate {
    id?: number;
    platformFee?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById?: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType?: keyof typeof OrderType;
    brandId?: number;
}
export declare class ServiceOrderMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    handleById?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    orderType?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
}
export declare class ServiceOrderMinAggregateInput {
    id?: true;
    platformFee?: true;
    createdAt?: true;
    updatedAt?: true;
    raceConditionVersion?: true;
    handleById?: true;
    orderById?: true;
    voucherId?: true;
    addressId?: true;
    deliveryId?: true;
    orderType?: true;
    brandId?: true;
}
export declare class ServiceOrderMinAggregate {
    id?: number;
    platformFee?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById?: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType?: keyof typeof OrderType;
    brandId?: number;
}
export declare class ServiceOrderMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    handleById?: keyof typeof SortOrder;
    orderById?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    orderType?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
}
export declare class ServiceOrderNullableRelationFilter {
    is?: InstanceType<typeof ServiceOrderWhereInput>;
    isNot?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class ServiceOrderOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    handleById?: InstanceType<typeof SortOrderInput>;
    orderById?: keyof typeof SortOrder;
    voucherId?: InstanceType<typeof SortOrderInput>;
    addressId?: InstanceType<typeof SortOrderInput>;
    deliveryId?: InstanceType<typeof SortOrderInput>;
    orderType?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof ServiceOrderCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof ServiceOrderAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof ServiceOrderMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof ServiceOrderMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof ServiceOrderSumOrderByAggregateInput>;
}
export declare class ServiceOrderOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    handleById?: InstanceType<typeof SortOrderInput>;
    orderById?: keyof typeof SortOrder;
    voucherId?: InstanceType<typeof SortOrderInput>;
    addressId?: InstanceType<typeof SortOrderInput>;
    deliveryId?: InstanceType<typeof SortOrderInput>;
    orderType?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
    handleBy?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
    orderBy?: InstanceType<typeof CustomerOrderByWithRelationInput>;
    voucher?: InstanceType<typeof VoucherOrderByWithRelationInput>;
    address?: InstanceType<typeof AddressOrderByWithRelationInput>;
    delivery?: InstanceType<typeof DeliveryOrderByWithRelationInput>;
    outlet?: InstanceType<typeof OutletOrderByWithRelationInput>;
    status?: InstanceType<typeof OrderStatusOrderByRelationAggregateInput>;
    cart?: InstanceType<typeof CartOrderByRelationAggregateInput>;
    Invoice?: InstanceType<typeof InvoiceOrderByRelationAggregateInput>;
    Complain?: InstanceType<typeof ComplainOrderByRelationAggregateInput>;
}
export declare class ServiceOrderScalarWhereWithAggregatesInput {
    AND?: Array<ServiceOrderScalarWhereWithAggregatesInput>;
    OR?: Array<ServiceOrderScalarWhereWithAggregatesInput>;
    NOT?: Array<ServiceOrderScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    platformFee?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    raceConditionVersion?: InstanceType<typeof IntWithAggregatesFilter>;
    handleById?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    orderById?: InstanceType<typeof StringWithAggregatesFilter>;
    voucherId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    addressId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    deliveryId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    orderType?: InstanceType<typeof EnumOrderTypeWithAggregatesFilter>;
    brandId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class ServiceOrderScalarWhereInput {
    AND?: Array<ServiceOrderScalarWhereInput>;
    OR?: Array<ServiceOrderScalarWhereInput>;
    NOT?: Array<ServiceOrderScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    platformFee?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    handleById?: InstanceType<typeof StringNullableFilter>;
    orderById?: InstanceType<typeof StringFilter>;
    voucherId?: InstanceType<typeof StringNullableFilter>;
    addressId?: InstanceType<typeof IntNullableFilter>;
    deliveryId?: InstanceType<typeof IntNullableFilter>;
    orderType?: InstanceType<typeof EnumOrderTypeFilter>;
    brandId?: InstanceType<typeof IntFilter>;
}
export declare class ServiceOrderSumAggregateInput {
    id?: true;
    platformFee?: true;
    raceConditionVersion?: true;
    addressId?: true;
    deliveryId?: true;
    brandId?: true;
}
export declare class ServiceOrderSumAggregate {
    id?: number;
    platformFee?: number;
    raceConditionVersion?: number;
    addressId?: number;
    deliveryId?: number;
    brandId?: number;
}
export declare class ServiceOrderSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    platformFee?: keyof typeof SortOrder;
    raceConditionVersion?: keyof typeof SortOrder;
    addressId?: keyof typeof SortOrder;
    deliveryId?: keyof typeof SortOrder;
    brandId?: keyof typeof SortOrder;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutAddressInput {
    create?: Array<ServiceOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutAddressInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyAddressInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutDeliveryInput {
    create?: Array<ServiceOrderCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutDeliveryInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyDeliveryInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutHandleByInput {
    create?: Array<ServiceOrderCreateWithoutHandleByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutHandleByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyHandleByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutOrderByInput {
    create?: Array<ServiceOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOrderByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOrderByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutOutletInput {
    create?: Array<ServiceOrderCreateWithoutOutletInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOutletInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOutletInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput {
    create?: Array<ServiceOrderCreateWithoutVoucherInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutVoucherInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyVoucherInputEnvelope>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
}
export declare class ServiceOrderUncheckedCreateWithoutAddressInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutCartInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutComplainInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutDeliveryInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutHandleByInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutInvoiceInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutOrderByInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutOutletInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutStatusInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateWithoutVoucherInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedCreateInput {
    id?: number;
    platformFee: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    raceConditionVersion?: number;
    handleById?: string;
    orderById: string;
    voucherId?: string;
    addressId?: number;
    deliveryId?: number;
    orderType: keyof typeof OrderType;
    brandId: number;
    status?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutServiceOrderInput>;
    cart?: InstanceType<typeof CartUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedCreateNestedManyWithoutServiceOrderInput>;
    Complain?: InstanceType<typeof ComplainUncheckedCreateNestedManyWithoutServiceOrderInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutAddressNestedInput {
    create?: Array<ServiceOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutAddressInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutAddressInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyAddressInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutAddressInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutAddressInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutDeliveryNestedInput {
    create?: Array<ServiceOrderCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutDeliveryInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutDeliveryInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyDeliveryInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutDeliveryInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutDeliveryInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutDeliveryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutHandleByNestedInput {
    create?: Array<ServiceOrderCreateWithoutHandleByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutHandleByInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutHandleByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyHandleByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutHandleByInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutHandleByInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutHandleByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutOrderByNestedInput {
    create?: Array<ServiceOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOrderByInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutOrderByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOrderByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutOrderByInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutOrderByInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutOrderByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutOutletNestedInput {
    create?: Array<ServiceOrderCreateWithoutOutletInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput {
    create?: Array<ServiceOrderCreateWithoutVoucherInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutVoucherInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutVoucherInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyVoucherInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutVoucherInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutVoucherInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUncheckedUpdateManyWithoutVoucherInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutCartInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutComplainInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutDeliveryInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutHandleByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutInvoiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutOrderByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutOutletInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutStatusInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateWithoutVoucherInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    handleById?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    orderById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    addressId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    deliveryId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    brandId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    status?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUncheckedUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUncheckedUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateManyMutationInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutAddressInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutDeliveryInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutHandleByInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutOrderByInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutOutletInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithWhereWithoutVoucherInput {
    where: InstanceType<typeof ServiceOrderScalarWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
}
export declare class ServiceOrderUpdateManyWithoutAddressNestedInput {
    create?: Array<ServiceOrderCreateWithoutAddressInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutAddressInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutAddressInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyAddressInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutAddressInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutAddressInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateManyWithoutDeliveryNestedInput {
    create?: Array<ServiceOrderCreateWithoutDeliveryInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutDeliveryInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutDeliveryInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyDeliveryInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutDeliveryInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutDeliveryInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateManyWithoutHandleByNestedInput {
    create?: Array<ServiceOrderCreateWithoutHandleByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutHandleByInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutHandleByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyHandleByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutHandleByInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutHandleByInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateManyWithoutOrderByNestedInput {
    create?: Array<ServiceOrderCreateWithoutOrderByInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOrderByInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutOrderByInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOrderByInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutOrderByInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutOrderByInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateManyWithoutOutletNestedInput {
    create?: Array<ServiceOrderCreateWithoutOutletInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutOutletInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutOutletInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyOutletInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutOutletInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutOutletInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateManyWithoutVoucherNestedInput {
    create?: Array<ServiceOrderCreateWithoutVoucherInput>;
    connectOrCreate?: Array<ServiceOrderCreateOrConnectWithoutVoucherInput>;
    upsert?: Array<ServiceOrderUpsertWithWhereUniqueWithoutVoucherInput>;
    createMany?: InstanceType<typeof ServiceOrderCreateManyVoucherInputEnvelope>;
    set?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>>;
    update?: Array<ServiceOrderUpdateWithWhereUniqueWithoutVoucherInput>;
    updateMany?: Array<ServiceOrderUpdateManyWithWhereWithoutVoucherInput>;
    deleteMany?: Array<ServiceOrderScalarWhereInput>;
}
export declare class ServiceOrderUpdateOneWithoutCartNestedInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutCartInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutCartInput>;
    upsert?: InstanceType<typeof ServiceOrderUpsertWithoutCartInput>;
    disconnect?: InstanceType<typeof ServiceOrderWhereInput>;
    delete?: InstanceType<typeof ServiceOrderWhereInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ServiceOrderUpdateToOneWithWhereWithoutCartInput>;
}
export declare class ServiceOrderUpdateOneWithoutComplainNestedInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutComplainInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutComplainInput>;
    upsert?: InstanceType<typeof ServiceOrderUpsertWithoutComplainInput>;
    disconnect?: InstanceType<typeof ServiceOrderWhereInput>;
    delete?: InstanceType<typeof ServiceOrderWhereInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ServiceOrderUpdateToOneWithWhereWithoutComplainInput>;
}
export declare class ServiceOrderUpdateOneWithoutInvoiceNestedInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutInvoiceInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutInvoiceInput>;
    upsert?: InstanceType<typeof ServiceOrderUpsertWithoutInvoiceInput>;
    disconnect?: InstanceType<typeof ServiceOrderWhereInput>;
    delete?: InstanceType<typeof ServiceOrderWhereInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ServiceOrderUpdateToOneWithWhereWithoutInvoiceInput>;
}
export declare class ServiceOrderUpdateOneWithoutStatusNestedInput {
    create?: InstanceType<typeof ServiceOrderCreateWithoutStatusInput>;
    connectOrCreate?: InstanceType<typeof ServiceOrderCreateOrConnectWithoutStatusInput>;
    upsert?: InstanceType<typeof ServiceOrderUpsertWithoutStatusInput>;
    disconnect?: InstanceType<typeof ServiceOrderWhereInput>;
    delete?: InstanceType<typeof ServiceOrderWhereInput>;
    connect?: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof ServiceOrderUpdateToOneWithWhereWithoutStatusInput>;
}
export declare class ServiceOrderUpdateToOneWithWhereWithoutCartInput {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutCartInput>;
}
export declare class ServiceOrderUpdateToOneWithWhereWithoutComplainInput {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutComplainInput>;
}
export declare class ServiceOrderUpdateToOneWithWhereWithoutInvoiceInput {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutInvoiceInput>;
}
export declare class ServiceOrderUpdateToOneWithWhereWithoutStatusInput {
    where?: InstanceType<typeof ServiceOrderWhereInput>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutStatusInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutAddressInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutAddressInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutDeliveryInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutDeliveryInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutHandleByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutHandleByInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutOrderByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutOrderByInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutOutletInput>;
}
export declare class ServiceOrderUpdateWithWhereUniqueWithoutVoucherInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    data: InstanceType<typeof ServiceOrderUpdateWithoutVoucherInput>;
}
export declare class ServiceOrderUpdateWithoutAddressInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutCartInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutComplainInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutDeliveryInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutHandleByInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutInvoiceInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutOrderByInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutOutletInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutStatusInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateWithoutVoucherInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpdateInput {
    platformFee?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    raceConditionVersion?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    orderType?: InstanceType<typeof EnumOrderTypeFieldUpdateOperationsInput>;
    handleBy?: InstanceType<typeof EmployeeUpdateOneWithoutServiceOrderNestedInput>;
    orderBy?: InstanceType<typeof CustomerUpdateOneRequiredWithoutOrdersNestedInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutServiceOrdersNestedInput>;
    address?: InstanceType<typeof AddressUpdateOneWithoutServiceOrderNestedInput>;
    delivery?: InstanceType<typeof DeliveryUpdateOneWithoutServiceOrderNestedInput>;
    outlet?: InstanceType<typeof OutletUpdateOneRequiredWithoutOrdersNestedInput>;
    status?: InstanceType<typeof OrderStatusUpdateManyWithoutServiceOrderNestedInput>;
    cart?: InstanceType<typeof CartUpdateManyWithoutServiceOrderNestedInput>;
    Invoice?: InstanceType<typeof InvoiceUpdateManyWithoutServiceOrderNestedInput>;
    Complain?: InstanceType<typeof ComplainUpdateManyWithoutServiceOrderNestedInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutAddressInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutAddressInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutAddressInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutDeliveryInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutDeliveryInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutDeliveryInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutHandleByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutHandleByInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutHandleByInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutOrderByInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutOrderByInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutOrderByInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutOutletInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutOutletInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutOutletInput>;
}
export declare class ServiceOrderUpsertWithWhereUniqueWithoutVoucherInput {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    update: InstanceType<typeof ServiceOrderUpdateWithoutVoucherInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutVoucherInput>;
}
export declare class ServiceOrderUpsertWithoutCartInput {
    update: InstanceType<typeof ServiceOrderUpdateWithoutCartInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutCartInput>;
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderUpsertWithoutComplainInput {
    update: InstanceType<typeof ServiceOrderUpdateWithoutComplainInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutComplainInput>;
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderUpsertWithoutInvoiceInput {
    update: InstanceType<typeof ServiceOrderUpdateWithoutInvoiceInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutInvoiceInput>;
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderUpsertWithoutStatusInput {
    update: InstanceType<typeof ServiceOrderUpdateWithoutStatusInput>;
    create: InstanceType<typeof ServiceOrderCreateWithoutStatusInput>;
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class ServiceOrderWhereUniqueInput {
    id?: number;
    AND?: Array<ServiceOrderWhereInput>;
    OR?: Array<ServiceOrderWhereInput>;
    NOT?: Array<ServiceOrderWhereInput>;
    platformFee?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    handleById?: InstanceType<typeof StringNullableFilter>;
    orderById?: InstanceType<typeof StringFilter>;
    voucherId?: InstanceType<typeof StringNullableFilter>;
    addressId?: InstanceType<typeof IntNullableFilter>;
    deliveryId?: InstanceType<typeof IntNullableFilter>;
    orderType?: InstanceType<typeof EnumOrderTypeFilter>;
    brandId?: InstanceType<typeof IntFilter>;
    handleBy?: InstanceType<typeof EmployeeNullableRelationFilter>;
    orderBy?: InstanceType<typeof CustomerRelationFilter>;
    voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
    address?: InstanceType<typeof AddressNullableRelationFilter>;
    delivery?: InstanceType<typeof DeliveryNullableRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    status?: InstanceType<typeof OrderStatusListRelationFilter>;
    cart?: InstanceType<typeof CartListRelationFilter>;
    Invoice?: InstanceType<typeof InvoiceListRelationFilter>;
    Complain?: InstanceType<typeof ComplainListRelationFilter>;
}
export declare class ServiceOrderWhereInput {
    AND?: Array<ServiceOrderWhereInput>;
    OR?: Array<ServiceOrderWhereInput>;
    NOT?: Array<ServiceOrderWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    platformFee?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    raceConditionVersion?: InstanceType<typeof IntFilter>;
    handleById?: InstanceType<typeof StringNullableFilter>;
    orderById?: InstanceType<typeof StringFilter>;
    voucherId?: InstanceType<typeof StringNullableFilter>;
    addressId?: InstanceType<typeof IntNullableFilter>;
    deliveryId?: InstanceType<typeof IntNullableFilter>;
    orderType?: InstanceType<typeof EnumOrderTypeFilter>;
    brandId?: InstanceType<typeof IntFilter>;
    handleBy?: InstanceType<typeof EmployeeNullableRelationFilter>;
    orderBy?: InstanceType<typeof CustomerRelationFilter>;
    voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
    address?: InstanceType<typeof AddressNullableRelationFilter>;
    delivery?: InstanceType<typeof DeliveryNullableRelationFilter>;
    outlet?: InstanceType<typeof OutletRelationFilter>;
    status?: InstanceType<typeof OrderStatusListRelationFilter>;
    cart?: InstanceType<typeof CartListRelationFilter>;
    Invoice?: InstanceType<typeof InvoiceListRelationFilter>;
    Complain?: InstanceType<typeof ComplainListRelationFilter>;
}
export declare class ServiceOrder {
    id: number;
    platformFee: number;
    createdAt: Date;
    updatedAt: Date;
    raceConditionVersion: number;
    handleById: string | null;
    orderById: string;
    voucherId: string | null;
    addressId: number | null;
    deliveryId: number | null;
    orderType: keyof typeof OrderType;
    brandId: number;
    handleBy?: InstanceType<typeof Employee> | null;
    orderBy?: InstanceType<typeof Customer>;
    voucher?: InstanceType<typeof Voucher> | null;
    address?: InstanceType<typeof Address> | null;
    delivery?: InstanceType<typeof Delivery> | null;
    outlet?: InstanceType<typeof Outlet>;
    status?: Array<OrderStatus>;
    cart?: Array<Cart>;
    Invoice?: Array<Invoice>;
    Complain?: Array<Complain>;
    _count?: InstanceType<typeof ServiceOrderCount>;
}
export declare class UpdateManyServiceOrderArgs {
    data: InstanceType<typeof ServiceOrderUpdateManyMutationInput>;
    where?: InstanceType<typeof ServiceOrderWhereInput>;
}
export declare class UpdateOneServiceOrderArgs {
    data: InstanceType<typeof ServiceOrderUpdateInput>;
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
}
export declare class UpsertOneServiceOrderArgs {
    where: Prisma.AtLeast<ServiceOrderWhereUniqueInput, 'id'>;
    create: InstanceType<typeof ServiceOrderCreateInput>;
    update: InstanceType<typeof ServiceOrderUpdateInput>;
}
export declare class AggregateSession {
    _count?: InstanceType<typeof SessionCountAggregate>;
    _avg?: InstanceType<typeof SessionAvgAggregate>;
    _sum?: InstanceType<typeof SessionSumAggregate>;
    _min?: InstanceType<typeof SessionMinAggregate>;
    _max?: InstanceType<typeof SessionMaxAggregate>;
}
export declare class CreateManySessionArgs {
    data: Array<SessionCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneSessionArgs {
    data: InstanceType<typeof SessionCreateInput>;
}
export declare class DeleteManySessionArgs {
    where?: InstanceType<typeof SessionWhereInput>;
}
export declare class DeleteOneSessionArgs {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
}
export declare class FindFirstSessionOrThrowArgs {
    where?: InstanceType<typeof SessionWhereInput>;
    orderBy?: Array<SessionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SessionScalarFieldEnum>;
}
export declare class FindFirstSessionArgs {
    where?: InstanceType<typeof SessionWhereInput>;
    orderBy?: Array<SessionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SessionScalarFieldEnum>;
}
export declare class FindManySessionArgs {
    where?: InstanceType<typeof SessionWhereInput>;
    orderBy?: Array<SessionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SessionScalarFieldEnum>;
}
export declare class FindUniqueSessionOrThrowArgs {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
}
export declare class FindUniqueSessionArgs {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
}
export declare class SessionAggregateArgs {
    where?: InstanceType<typeof SessionWhereInput>;
    orderBy?: Array<SessionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof SessionCountAggregateInput>;
    _avg?: InstanceType<typeof SessionAvgAggregateInput>;
    _sum?: InstanceType<typeof SessionSumAggregateInput>;
    _min?: InstanceType<typeof SessionMinAggregateInput>;
    _max?: InstanceType<typeof SessionMaxAggregateInput>;
}
export declare class SessionAvgAggregateInput {
    id?: true;
    ipAddress?: true;
}
export declare class SessionAvgAggregate {
    id?: number;
    ipAddress?: number;
}
export declare class SessionAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
}
export declare class SessionCountAggregateInput {
    id?: true;
    token?: true;
    expiresAt?: true;
    userId?: true;
    device?: true;
    ipAddress?: true;
    createdAt?: true;
    _all?: true;
}
export declare class SessionCountAggregate {
    id: number;
    token: number;
    expiresAt: number;
    userId: number;
    device: number;
    ipAddress: number;
    createdAt: number;
    _all: number;
}
export declare class SessionCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    token?: keyof typeof SortOrder;
    expiresAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    device?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
}
export declare class SessionCreateManyUserInputEnvelope {
    data: Array<SessionCreateManyUserInput>;
    skipDuplicates?: boolean;
}
export declare class SessionCreateManyUserInput {
    id?: number;
    token: string;
    expiresAt: Date | string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
}
export declare class SessionCreateManyInput {
    id?: number;
    token: string;
    expiresAt: Date | string;
    userId: string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
}
export declare class SessionCreateNestedManyWithoutUserInput {
    create?: Array<SessionCreateWithoutUserInput>;
    connectOrCreate?: Array<SessionCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof SessionCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
}
export declare class SessionCreateOrConnectWithoutUserInput {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    create: InstanceType<typeof SessionCreateWithoutUserInput>;
}
export declare class SessionCreateWithoutUserInput {
    token: string;
    expiresAt: Date | string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
}
export declare class SessionCreateInput {
    token: string;
    expiresAt: Date | string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
    user: InstanceType<typeof UserCreateNestedOneWithoutSessionsInput>;
}
export declare class SessionGroupByArgs {
    where?: InstanceType<typeof SessionWhereInput>;
    orderBy?: Array<SessionOrderByWithAggregationInput>;
    by: Array<keyof typeof SessionScalarFieldEnum>;
    having?: InstanceType<typeof SessionScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof SessionCountAggregateInput>;
    _avg?: InstanceType<typeof SessionAvgAggregateInput>;
    _sum?: InstanceType<typeof SessionSumAggregateInput>;
    _min?: InstanceType<typeof SessionMinAggregateInput>;
    _max?: InstanceType<typeof SessionMaxAggregateInput>;
}
export declare class SessionGroupBy {
    id: number;
    token: string;
    expiresAt: Date | string;
    userId: string;
    device: string;
    ipAddress: number;
    createdAt: Date | string;
    _count?: InstanceType<typeof SessionCountAggregate>;
    _avg?: InstanceType<typeof SessionAvgAggregate>;
    _sum?: InstanceType<typeof SessionSumAggregate>;
    _min?: InstanceType<typeof SessionMinAggregate>;
    _max?: InstanceType<typeof SessionMaxAggregate>;
}
export declare class SessionListRelationFilter {
    every?: InstanceType<typeof SessionWhereInput>;
    some?: InstanceType<typeof SessionWhereInput>;
    none?: InstanceType<typeof SessionWhereInput>;
}
export declare class SessionMaxAggregateInput {
    id?: true;
    token?: true;
    expiresAt?: true;
    userId?: true;
    device?: true;
    ipAddress?: true;
    createdAt?: true;
}
export declare class SessionMaxAggregate {
    id?: number;
    token?: string;
    expiresAt?: Date | string;
    userId?: string;
    device?: string;
    ipAddress?: number;
    createdAt?: Date | string;
}
export declare class SessionMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    token?: keyof typeof SortOrder;
    expiresAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    device?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
}
export declare class SessionMinAggregateInput {
    id?: true;
    token?: true;
    expiresAt?: true;
    userId?: true;
    device?: true;
    ipAddress?: true;
    createdAt?: true;
}
export declare class SessionMinAggregate {
    id?: number;
    token?: string;
    expiresAt?: Date | string;
    userId?: string;
    device?: string;
    ipAddress?: number;
    createdAt?: Date | string;
}
export declare class SessionMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    token?: keyof typeof SortOrder;
    expiresAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    device?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
}
export declare class SessionOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class SessionOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    token?: keyof typeof SortOrder;
    expiresAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    device?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    _count?: InstanceType<typeof SessionCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof SessionAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof SessionMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof SessionMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof SessionSumOrderByAggregateInput>;
}
export declare class SessionOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    token?: keyof typeof SortOrder;
    expiresAt?: keyof typeof SortOrder;
    userId?: keyof typeof SortOrder;
    device?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    user?: InstanceType<typeof UserOrderByWithRelationInput>;
}
export declare class SessionScalarWhereWithAggregatesInput {
    AND?: Array<SessionScalarWhereWithAggregatesInput>;
    OR?: Array<SessionScalarWhereWithAggregatesInput>;
    NOT?: Array<SessionScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    token?: InstanceType<typeof StringWithAggregatesFilter>;
    expiresAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    userId?: InstanceType<typeof StringWithAggregatesFilter>;
    device?: InstanceType<typeof StringWithAggregatesFilter>;
    ipAddress?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}
export declare class SessionScalarWhereInput {
    AND?: Array<SessionScalarWhereInput>;
    OR?: Array<SessionScalarWhereInput>;
    NOT?: Array<SessionScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    token?: InstanceType<typeof StringFilter>;
    expiresAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    device?: InstanceType<typeof StringFilter>;
    ipAddress?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
}
export declare class SessionSumAggregateInput {
    id?: true;
    ipAddress?: true;
}
export declare class SessionSumAggregate {
    id?: number;
    ipAddress?: number;
}
export declare class SessionSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    ipAddress?: keyof typeof SortOrder;
}
export declare class SessionUncheckedCreateNestedManyWithoutUserInput {
    create?: Array<SessionCreateWithoutUserInput>;
    connectOrCreate?: Array<SessionCreateOrConnectWithoutUserInput>;
    createMany?: InstanceType<typeof SessionCreateManyUserInputEnvelope>;
    connect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
}
export declare class SessionUncheckedCreateWithoutUserInput {
    id?: number;
    token: string;
    expiresAt: Date | string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
}
export declare class SessionUncheckedCreateInput {
    id?: number;
    token: string;
    expiresAt: Date | string;
    userId: string;
    device: string;
    ipAddress: number;
    createdAt?: Date | string;
}
export declare class SessionUncheckedUpdateManyWithoutUserNestedInput {
    create?: Array<SessionCreateWithoutUserInput>;
    connectOrCreate?: Array<SessionCreateOrConnectWithoutUserInput>;
    upsert?: Array<SessionUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof SessionCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    disconnect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    delete?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    connect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    update?: Array<SessionUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<SessionUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<SessionScalarWhereInput>;
}
export declare class SessionUncheckedUpdateManyWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUncheckedUpdateWithoutUserInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    userId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUpdateManyMutationInput {
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUpdateManyWithWhereWithoutUserInput {
    where: InstanceType<typeof SessionScalarWhereInput>;
    data: InstanceType<typeof SessionUpdateManyMutationInput>;
}
export declare class SessionUpdateManyWithoutUserNestedInput {
    create?: Array<SessionCreateWithoutUserInput>;
    connectOrCreate?: Array<SessionCreateOrConnectWithoutUserInput>;
    upsert?: Array<SessionUpsertWithWhereUniqueWithoutUserInput>;
    createMany?: InstanceType<typeof SessionCreateManyUserInputEnvelope>;
    set?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    disconnect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    delete?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    connect?: Array<Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>>;
    update?: Array<SessionUpdateWithWhereUniqueWithoutUserInput>;
    updateMany?: Array<SessionUpdateManyWithWhereWithoutUserInput>;
    deleteMany?: Array<SessionScalarWhereInput>;
}
export declare class SessionUpdateWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    data: InstanceType<typeof SessionUpdateWithoutUserInput>;
}
export declare class SessionUpdateWithoutUserInput {
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class SessionUpdateInput {
    token?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    expiresAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    device?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    ipAddress?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    user?: InstanceType<typeof UserUpdateOneRequiredWithoutSessionsNestedInput>;
}
export declare class SessionUpsertWithWhereUniqueWithoutUserInput {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    update: InstanceType<typeof SessionUpdateWithoutUserInput>;
    create: InstanceType<typeof SessionCreateWithoutUserInput>;
}
export declare class SessionWhereUniqueInput {
    id?: number;
    token?: string;
    AND?: Array<SessionWhereInput>;
    OR?: Array<SessionWhereInput>;
    NOT?: Array<SessionWhereInput>;
    expiresAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    device?: InstanceType<typeof StringFilter>;
    ipAddress?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class SessionWhereInput {
    AND?: Array<SessionWhereInput>;
    OR?: Array<SessionWhereInput>;
    NOT?: Array<SessionWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    token?: InstanceType<typeof StringFilter>;
    expiresAt?: InstanceType<typeof DateTimeFilter>;
    userId?: InstanceType<typeof StringFilter>;
    device?: InstanceType<typeof StringFilter>;
    ipAddress?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    user?: InstanceType<typeof UserRelationFilter>;
}
export declare class Session {
    id: number;
    token: string;
    expiresAt: Date;
    userId: string;
    device: string;
    ipAddress: number;
    createdAt: Date;
    user?: InstanceType<typeof User>;
}
export declare class UpdateManySessionArgs {
    data: InstanceType<typeof SessionUpdateManyMutationInput>;
    where?: InstanceType<typeof SessionWhereInput>;
}
export declare class UpdateOneSessionArgs {
    data: InstanceType<typeof SessionUpdateInput>;
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
}
export declare class UpsertOneSessionArgs {
    where: Prisma.AtLeast<SessionWhereUniqueInput, 'id' | 'token'>;
    create: InstanceType<typeof SessionCreateInput>;
    update: InstanceType<typeof SessionUpdateInput>;
}
export declare class AggregateStockItem {
    _count?: InstanceType<typeof StockItemCountAggregate>;
    _avg?: InstanceType<typeof StockItemAvgAggregate>;
    _sum?: InstanceType<typeof StockItemSumAggregate>;
    _min?: InstanceType<typeof StockItemMinAggregate>;
    _max?: InstanceType<typeof StockItemMaxAggregate>;
}
export declare class CreateManyStockItemArgs {
    data: Array<StockItemCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneStockItemArgs {
    data: InstanceType<typeof StockItemCreateInput>;
}
export declare class DeleteManyStockItemArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
}
export declare class DeleteOneStockItemArgs {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
}
export declare class FindFirstStockItemOrThrowArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
    orderBy?: Array<StockItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockItemScalarFieldEnum>;
}
export declare class FindFirstStockItemArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
    orderBy?: Array<StockItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockItemScalarFieldEnum>;
}
export declare class FindManyStockItemArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
    orderBy?: Array<StockItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockItemScalarFieldEnum>;
}
export declare class FindUniqueStockItemOrThrowArgs {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
}
export declare class FindUniqueStockItemArgs {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
}
export declare class StockItemAggregateArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
    orderBy?: Array<StockItemOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof StockItemCountAggregateInput>;
    _avg?: InstanceType<typeof StockItemAvgAggregateInput>;
    _sum?: InstanceType<typeof StockItemSumAggregateInput>;
    _min?: InstanceType<typeof StockItemMinAggregateInput>;
    _max?: InstanceType<typeof StockItemMaxAggregateInput>;
}
export declare class StockItemAvgAggregateInput {
    id?: true;
    quantity?: true;
}
export declare class StockItemAvgAggregate {
    id?: number;
    quantity?: number;
}
export declare class StockItemAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
}
export declare class StockItemCountAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    platformItemId?: true;
    _all?: true;
}
export declare class StockItemCountAggregate {
    id: number;
    quantity: number;
    createdAt: number;
    platformItemId: number;
    _all: number;
}
export declare class StockItemCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
}
export declare class StockItemCount {
    transactions?: number;
}
export declare class StockItemCreateManyPlatformItemInputEnvelope {
    data: Array<StockItemCreateManyPlatformItemInput>;
    skipDuplicates?: boolean;
}
export declare class StockItemCreateManyPlatformItemInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
}
export declare class StockItemCreateManyInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    platformItemId?: string;
}
export declare class StockItemCreateNestedManyWithoutPlatformItemInput {
    create?: Array<StockItemCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<StockItemCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof StockItemCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
}
export declare class StockItemCreateNestedOneWithoutTransactionsInput {
    create?: InstanceType<typeof StockItemCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof StockItemCreateOrConnectWithoutTransactionsInput>;
    connect?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
}
export declare class StockItemCreateOrConnectWithoutPlatformItemInput {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof StockItemCreateWithoutPlatformItemInput>;
}
export declare class StockItemCreateOrConnectWithoutTransactionsInput {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof StockItemCreateWithoutTransactionsInput>;
}
export declare class StockItemCreateWithoutPlatformItemInput {
    quantity: number;
    createdAt?: Date | string;
    transactions?: InstanceType<typeof StockTransactionCreateNestedManyWithoutStockItemInput>;
}
export declare class StockItemCreateWithoutTransactionsInput {
    quantity: number;
    createdAt?: Date | string;
    platformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutStockItemsInput>;
}
export declare class StockItemCreateInput {
    quantity: number;
    createdAt?: Date | string;
    platformItem?: InstanceType<typeof PlatformItemCreateNestedOneWithoutStockItemsInput>;
    transactions?: InstanceType<typeof StockTransactionCreateNestedManyWithoutStockItemInput>;
}
export declare class StockItemGroupByArgs {
    where?: InstanceType<typeof StockItemWhereInput>;
    orderBy?: Array<StockItemOrderByWithAggregationInput>;
    by: Array<keyof typeof StockItemScalarFieldEnum>;
    having?: InstanceType<typeof StockItemScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof StockItemCountAggregateInput>;
    _avg?: InstanceType<typeof StockItemAvgAggregateInput>;
    _sum?: InstanceType<typeof StockItemSumAggregateInput>;
    _min?: InstanceType<typeof StockItemMinAggregateInput>;
    _max?: InstanceType<typeof StockItemMaxAggregateInput>;
}
export declare class StockItemGroupBy {
    id: number;
    quantity: number;
    createdAt: Date | string;
    platformItemId?: string;
    _count?: InstanceType<typeof StockItemCountAggregate>;
    _avg?: InstanceType<typeof StockItemAvgAggregate>;
    _sum?: InstanceType<typeof StockItemSumAggregate>;
    _min?: InstanceType<typeof StockItemMinAggregate>;
    _max?: InstanceType<typeof StockItemMaxAggregate>;
}
export declare class StockItemListRelationFilter {
    every?: InstanceType<typeof StockItemWhereInput>;
    some?: InstanceType<typeof StockItemWhereInput>;
    none?: InstanceType<typeof StockItemWhereInput>;
}
export declare class StockItemMaxAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    platformItemId?: true;
}
export declare class StockItemMaxAggregate {
    id?: number;
    quantity?: number;
    createdAt?: Date | string;
    platformItemId?: string;
}
export declare class StockItemMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
}
export declare class StockItemMinAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    platformItemId?: true;
}
export declare class StockItemMinAggregate {
    id?: number;
    quantity?: number;
    createdAt?: Date | string;
    platformItemId?: string;
}
export declare class StockItemMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: keyof typeof SortOrder;
}
export declare class StockItemOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class StockItemOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof StockItemCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof StockItemAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof StockItemMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof StockItemMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof StockItemSumOrderByAggregateInput>;
}
export declare class StockItemOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    platformItemId?: InstanceType<typeof SortOrderInput>;
    platformItem?: InstanceType<typeof PlatformItemOrderByWithRelationInput>;
    transactions?: InstanceType<typeof StockTransactionOrderByRelationAggregateInput>;
}
export declare class StockItemRelationFilter {
    is?: InstanceType<typeof StockItemWhereInput>;
    isNot?: InstanceType<typeof StockItemWhereInput>;
}
export declare class StockItemScalarWhereWithAggregatesInput {
    AND?: Array<StockItemScalarWhereWithAggregatesInput>;
    OR?: Array<StockItemScalarWhereWithAggregatesInput>;
    NOT?: Array<StockItemScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    quantity?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    platformItemId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}
export declare class StockItemScalarWhereInput {
    AND?: Array<StockItemScalarWhereInput>;
    OR?: Array<StockItemScalarWhereInput>;
    NOT?: Array<StockItemScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
}
export declare class StockItemSumAggregateInput {
    id?: true;
    quantity?: true;
}
export declare class StockItemSumAggregate {
    id?: number;
    quantity?: number;
}
export declare class StockItemSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
}
export declare class StockItemUncheckedCreateNestedManyWithoutPlatformItemInput {
    create?: Array<StockItemCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<StockItemCreateOrConnectWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof StockItemCreateManyPlatformItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
}
export declare class StockItemUncheckedCreateWithoutPlatformItemInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    transactions?: InstanceType<typeof StockTransactionUncheckedCreateNestedManyWithoutStockItemInput>;
}
export declare class StockItemUncheckedCreateWithoutTransactionsInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    platformItemId?: string;
}
export declare class StockItemUncheckedCreateInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    platformItemId?: string;
    transactions?: InstanceType<typeof StockTransactionUncheckedCreateNestedManyWithoutStockItemInput>;
}
export declare class StockItemUncheckedUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<StockItemCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<StockItemCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<StockItemUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof StockItemCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    update?: Array<StockItemUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<StockItemUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<StockItemScalarWhereInput>;
}
export declare class StockItemUncheckedUpdateManyWithoutPlatformItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class StockItemUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class StockItemUncheckedUpdateWithoutPlatformItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof StockTransactionUncheckedUpdateManyWithoutStockItemNestedInput>;
}
export declare class StockItemUncheckedUpdateWithoutTransactionsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class StockItemUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItemId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof StockTransactionUncheckedUpdateManyWithoutStockItemNestedInput>;
}
export declare class StockItemUpdateManyMutationInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class StockItemUpdateManyWithWhereWithoutPlatformItemInput {
    where: InstanceType<typeof StockItemScalarWhereInput>;
    data: InstanceType<typeof StockItemUpdateManyMutationInput>;
}
export declare class StockItemUpdateManyWithoutPlatformItemNestedInput {
    create?: Array<StockItemCreateWithoutPlatformItemInput>;
    connectOrCreate?: Array<StockItemCreateOrConnectWithoutPlatformItemInput>;
    upsert?: Array<StockItemUpsertWithWhereUniqueWithoutPlatformItemInput>;
    createMany?: InstanceType<typeof StockItemCreateManyPlatformItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>>;
    update?: Array<StockItemUpdateWithWhereUniqueWithoutPlatformItemInput>;
    updateMany?: Array<StockItemUpdateManyWithWhereWithoutPlatformItemInput>;
    deleteMany?: Array<StockItemScalarWhereInput>;
}
export declare class StockItemUpdateOneRequiredWithoutTransactionsNestedInput {
    create?: InstanceType<typeof StockItemCreateWithoutTransactionsInput>;
    connectOrCreate?: InstanceType<typeof StockItemCreateOrConnectWithoutTransactionsInput>;
    upsert?: InstanceType<typeof StockItemUpsertWithoutTransactionsInput>;
    connect?: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof StockItemUpdateToOneWithWhereWithoutTransactionsInput>;
}
export declare class StockItemUpdateToOneWithWhereWithoutTransactionsInput {
    where?: InstanceType<typeof StockItemWhereInput>;
    data: InstanceType<typeof StockItemUpdateWithoutTransactionsInput>;
}
export declare class StockItemUpdateWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    data: InstanceType<typeof StockItemUpdateWithoutPlatformItemInput>;
}
export declare class StockItemUpdateWithoutPlatformItemInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    transactions?: InstanceType<typeof StockTransactionUpdateManyWithoutStockItemNestedInput>;
}
export declare class StockItemUpdateWithoutTransactionsInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutStockItemsNestedInput>;
}
export declare class StockItemUpdateInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItem?: InstanceType<typeof PlatformItemUpdateOneWithoutStockItemsNestedInput>;
    transactions?: InstanceType<typeof StockTransactionUpdateManyWithoutStockItemNestedInput>;
}
export declare class StockItemUpsertWithWhereUniqueWithoutPlatformItemInput {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    update: InstanceType<typeof StockItemUpdateWithoutPlatformItemInput>;
    create: InstanceType<typeof StockItemCreateWithoutPlatformItemInput>;
}
export declare class StockItemUpsertWithoutTransactionsInput {
    update: InstanceType<typeof StockItemUpdateWithoutTransactionsInput>;
    create: InstanceType<typeof StockItemCreateWithoutTransactionsInput>;
    where?: InstanceType<typeof StockItemWhereInput>;
}
export declare class StockItemWhereUniqueInput {
    id?: number;
    AND?: Array<StockItemWhereInput>;
    OR?: Array<StockItemWhereInput>;
    NOT?: Array<StockItemWhereInput>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    platformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    transactions?: InstanceType<typeof StockTransactionListRelationFilter>;
}
export declare class StockItemWhereInput {
    AND?: Array<StockItemWhereInput>;
    OR?: Array<StockItemWhereInput>;
    NOT?: Array<StockItemWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    platformItemId?: InstanceType<typeof StringNullableFilter>;
    platformItem?: InstanceType<typeof PlatformItemNullableRelationFilter>;
    transactions?: InstanceType<typeof StockTransactionListRelationFilter>;
}
export declare class StockItem {
    id: number;
    quantity: number;
    createdAt: Date;
    platformItemId: string | null;
    platformItem?: InstanceType<typeof PlatformItem> | null;
    transactions?: Array<StockTransaction>;
    _count?: InstanceType<typeof StockItemCount>;
}
export declare class UpdateManyStockItemArgs {
    data: InstanceType<typeof StockItemUpdateManyMutationInput>;
    where?: InstanceType<typeof StockItemWhereInput>;
}
export declare class UpdateOneStockItemArgs {
    data: InstanceType<typeof StockItemUpdateInput>;
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
}
export declare class UpsertOneStockItemArgs {
    where: Prisma.AtLeast<StockItemWhereUniqueInput, 'id'>;
    create: InstanceType<typeof StockItemCreateInput>;
    update: InstanceType<typeof StockItemUpdateInput>;
}
export declare class AggregateStockTransaction {
    _count?: InstanceType<typeof StockTransactionCountAggregate>;
    _avg?: InstanceType<typeof StockTransactionAvgAggregate>;
    _sum?: InstanceType<typeof StockTransactionSumAggregate>;
    _min?: InstanceType<typeof StockTransactionMinAggregate>;
    _max?: InstanceType<typeof StockTransactionMaxAggregate>;
}
export declare class CreateManyStockTransactionArgs {
    data: Array<StockTransactionCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneStockTransactionArgs {
    data: InstanceType<typeof StockTransactionCreateInput>;
}
export declare class DeleteManyStockTransactionArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
}
export declare class DeleteOneStockTransactionArgs {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
}
export declare class FindFirstStockTransactionOrThrowArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
    orderBy?: Array<StockTransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockTransactionScalarFieldEnum>;
}
export declare class FindFirstStockTransactionArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
    orderBy?: Array<StockTransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockTransactionScalarFieldEnum>;
}
export declare class FindManyStockTransactionArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
    orderBy?: Array<StockTransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof StockTransactionScalarFieldEnum>;
}
export declare class FindUniqueStockTransactionOrThrowArgs {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
}
export declare class FindUniqueStockTransactionArgs {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
}
export declare class StockTransactionAggregateArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
    orderBy?: Array<StockTransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof StockTransactionCountAggregateInput>;
    _avg?: InstanceType<typeof StockTransactionAvgAggregateInput>;
    _sum?: InstanceType<typeof StockTransactionSumAggregateInput>;
    _min?: InstanceType<typeof StockTransactionMinAggregateInput>;
    _max?: InstanceType<typeof StockTransactionMaxAggregateInput>;
}
export declare class StockTransactionAvgAggregateInput {
    id?: true;
    quantity?: true;
    stockItemId?: true;
}
export declare class StockTransactionAvgAggregate {
    id?: number;
    quantity?: number;
    stockItemId?: number;
}
export declare class StockTransactionAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
}
export declare class StockTransactionCountAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    type?: true;
    stockItemId?: true;
    _all?: true;
}
export declare class StockTransactionCountAggregate {
    id: number;
    quantity: number;
    createdAt: number;
    type: number;
    stockItemId: number;
    _all: number;
}
export declare class StockTransactionCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
}
export declare class StockTransactionCreateManyStockItemInputEnvelope {
    data: Array<StockTransactionCreateManyStockItemInput>;
    skipDuplicates?: boolean;
}
export declare class StockTransactionCreateManyStockItemInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
}
export declare class StockTransactionCreateManyInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
    stockItemId: number;
}
export declare class StockTransactionCreateNestedManyWithoutStockItemInput {
    create?: Array<StockTransactionCreateWithoutStockItemInput>;
    connectOrCreate?: Array<StockTransactionCreateOrConnectWithoutStockItemInput>;
    createMany?: InstanceType<typeof StockTransactionCreateManyStockItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
}
export declare class StockTransactionCreateOrConnectWithoutStockItemInput {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof StockTransactionCreateWithoutStockItemInput>;
}
export declare class StockTransactionCreateWithoutStockItemInput {
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
}
export declare class StockTransactionCreateInput {
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
    stockItem: InstanceType<typeof StockItemCreateNestedOneWithoutTransactionsInput>;
}
export declare class StockTransactionGroupByArgs {
    where?: InstanceType<typeof StockTransactionWhereInput>;
    orderBy?: Array<StockTransactionOrderByWithAggregationInput>;
    by: Array<keyof typeof StockTransactionScalarFieldEnum>;
    having?: InstanceType<typeof StockTransactionScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof StockTransactionCountAggregateInput>;
    _avg?: InstanceType<typeof StockTransactionAvgAggregateInput>;
    _sum?: InstanceType<typeof StockTransactionSumAggregateInput>;
    _min?: InstanceType<typeof StockTransactionMinAggregateInput>;
    _max?: InstanceType<typeof StockTransactionMaxAggregateInput>;
}
export declare class StockTransactionGroupBy {
    id: number;
    quantity: number;
    createdAt: Date | string;
    type: keyof typeof StockTransactionType;
    stockItemId: number;
    _count?: InstanceType<typeof StockTransactionCountAggregate>;
    _avg?: InstanceType<typeof StockTransactionAvgAggregate>;
    _sum?: InstanceType<typeof StockTransactionSumAggregate>;
    _min?: InstanceType<typeof StockTransactionMinAggregate>;
    _max?: InstanceType<typeof StockTransactionMaxAggregate>;
}
export declare class StockTransactionListRelationFilter {
    every?: InstanceType<typeof StockTransactionWhereInput>;
    some?: InstanceType<typeof StockTransactionWhereInput>;
    none?: InstanceType<typeof StockTransactionWhereInput>;
}
export declare class StockTransactionMaxAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    type?: true;
    stockItemId?: true;
}
export declare class StockTransactionMaxAggregate {
    id?: number;
    quantity?: number;
    createdAt?: Date | string;
    type?: keyof typeof StockTransactionType;
    stockItemId?: number;
}
export declare class StockTransactionMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
}
export declare class StockTransactionMinAggregateInput {
    id?: true;
    quantity?: true;
    createdAt?: true;
    type?: true;
    stockItemId?: true;
}
export declare class StockTransactionMinAggregate {
    id?: number;
    quantity?: number;
    createdAt?: Date | string;
    type?: keyof typeof StockTransactionType;
    stockItemId?: number;
}
export declare class StockTransactionMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
}
export declare class StockTransactionOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class StockTransactionOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof StockTransactionCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof StockTransactionAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof StockTransactionMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof StockTransactionMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof StockTransactionSumOrderByAggregateInput>;
}
export declare class StockTransactionOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
    stockItem?: InstanceType<typeof StockItemOrderByWithRelationInput>;
}
export declare class StockTransactionScalarWhereWithAggregatesInput {
    AND?: Array<StockTransactionScalarWhereWithAggregatesInput>;
    OR?: Array<StockTransactionScalarWhereWithAggregatesInput>;
    NOT?: Array<StockTransactionScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    quantity?: InstanceType<typeof IntWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    type?: InstanceType<typeof EnumStockTransactionTypeWithAggregatesFilter>;
    stockItemId?: InstanceType<typeof IntWithAggregatesFilter>;
}
export declare class StockTransactionScalarWhereInput {
    AND?: Array<StockTransactionScalarWhereInput>;
    OR?: Array<StockTransactionScalarWhereInput>;
    NOT?: Array<StockTransactionScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumStockTransactionTypeFilter>;
    stockItemId?: InstanceType<typeof IntFilter>;
}
export declare class StockTransactionSumAggregateInput {
    id?: true;
    quantity?: true;
    stockItemId?: true;
}
export declare class StockTransactionSumAggregate {
    id?: number;
    quantity?: number;
    stockItemId?: number;
}
export declare class StockTransactionSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    quantity?: keyof typeof SortOrder;
    stockItemId?: keyof typeof SortOrder;
}
export declare class StockTransactionUncheckedCreateNestedManyWithoutStockItemInput {
    create?: Array<StockTransactionCreateWithoutStockItemInput>;
    connectOrCreate?: Array<StockTransactionCreateOrConnectWithoutStockItemInput>;
    createMany?: InstanceType<typeof StockTransactionCreateManyStockItemInputEnvelope>;
    connect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
}
export declare class StockTransactionUncheckedCreateWithoutStockItemInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
}
export declare class StockTransactionUncheckedCreateInput {
    id?: number;
    quantity: number;
    createdAt?: Date | string;
    type: keyof typeof StockTransactionType;
    stockItemId: number;
}
export declare class StockTransactionUncheckedUpdateManyWithoutStockItemNestedInput {
    create?: Array<StockTransactionCreateWithoutStockItemInput>;
    connectOrCreate?: Array<StockTransactionCreateOrConnectWithoutStockItemInput>;
    upsert?: Array<StockTransactionUpsertWithWhereUniqueWithoutStockItemInput>;
    createMany?: InstanceType<typeof StockTransactionCreateManyStockItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    update?: Array<StockTransactionUpdateWithWhereUniqueWithoutStockItemInput>;
    updateMany?: Array<StockTransactionUpdateManyWithWhereWithoutStockItemInput>;
    deleteMany?: Array<StockTransactionScalarWhereInput>;
}
export declare class StockTransactionUncheckedUpdateManyWithoutStockItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
}
export declare class StockTransactionUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
    stockItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class StockTransactionUncheckedUpdateWithoutStockItemInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
}
export declare class StockTransactionUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
    stockItemId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
}
export declare class StockTransactionUpdateManyMutationInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
}
export declare class StockTransactionUpdateManyWithWhereWithoutStockItemInput {
    where: InstanceType<typeof StockTransactionScalarWhereInput>;
    data: InstanceType<typeof StockTransactionUpdateManyMutationInput>;
}
export declare class StockTransactionUpdateManyWithoutStockItemNestedInput {
    create?: Array<StockTransactionCreateWithoutStockItemInput>;
    connectOrCreate?: Array<StockTransactionCreateOrConnectWithoutStockItemInput>;
    upsert?: Array<StockTransactionUpsertWithWhereUniqueWithoutStockItemInput>;
    createMany?: InstanceType<typeof StockTransactionCreateManyStockItemInputEnvelope>;
    set?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>>;
    update?: Array<StockTransactionUpdateWithWhereUniqueWithoutStockItemInput>;
    updateMany?: Array<StockTransactionUpdateManyWithWhereWithoutStockItemInput>;
    deleteMany?: Array<StockTransactionScalarWhereInput>;
}
export declare class StockTransactionUpdateWithWhereUniqueWithoutStockItemInput {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof StockTransactionUpdateWithoutStockItemInput>;
}
export declare class StockTransactionUpdateWithoutStockItemInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
}
export declare class StockTransactionUpdateInput {
    quantity?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumStockTransactionTypeFieldUpdateOperationsInput>;
    stockItem?: InstanceType<typeof StockItemUpdateOneRequiredWithoutTransactionsNestedInput>;
}
export declare class StockTransactionUpsertWithWhereUniqueWithoutStockItemInput {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof StockTransactionUpdateWithoutStockItemInput>;
    create: InstanceType<typeof StockTransactionCreateWithoutStockItemInput>;
}
export declare class StockTransactionWhereUniqueInput {
    id?: number;
    AND?: Array<StockTransactionWhereInput>;
    OR?: Array<StockTransactionWhereInput>;
    NOT?: Array<StockTransactionWhereInput>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumStockTransactionTypeFilter>;
    stockItemId?: InstanceType<typeof IntFilter>;
    stockItem?: InstanceType<typeof StockItemRelationFilter>;
}
export declare class StockTransactionWhereInput {
    AND?: Array<StockTransactionWhereInput>;
    OR?: Array<StockTransactionWhereInput>;
    NOT?: Array<StockTransactionWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    quantity?: InstanceType<typeof IntFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumStockTransactionTypeFilter>;
    stockItemId?: InstanceType<typeof IntFilter>;
    stockItem?: InstanceType<typeof StockItemRelationFilter>;
}
export declare class StockTransaction {
    id: number;
    quantity: number;
    createdAt: Date;
    type: keyof typeof StockTransactionType;
    stockItemId: number;
    stockItem?: InstanceType<typeof StockItem>;
}
export declare class UpdateManyStockTransactionArgs {
    data: InstanceType<typeof StockTransactionUpdateManyMutationInput>;
    where?: InstanceType<typeof StockTransactionWhereInput>;
}
export declare class UpdateOneStockTransactionArgs {
    data: InstanceType<typeof StockTransactionUpdateInput>;
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
}
export declare class UpsertOneStockTransactionArgs {
    where: Prisma.AtLeast<StockTransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof StockTransactionCreateInput>;
    update: InstanceType<typeof StockTransactionUpdateInput>;
}
export declare class AggregateSubdistrict {
    _count?: InstanceType<typeof SubdistrictCountAggregate>;
    _avg?: InstanceType<typeof SubdistrictAvgAggregate>;
    _sum?: InstanceType<typeof SubdistrictSumAggregate>;
    _min?: InstanceType<typeof SubdistrictMinAggregate>;
    _max?: InstanceType<typeof SubdistrictMaxAggregate>;
}
export declare class CreateManySubdistrictArgs {
    data: Array<SubdistrictCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneSubdistrictArgs {
    data: InstanceType<typeof SubdistrictCreateInput>;
}
export declare class DeleteManySubdistrictArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
}
export declare class DeleteOneSubdistrictArgs {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
}
export declare class FindFirstSubdistrictOrThrowArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    orderBy?: Array<SubdistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SubdistrictScalarFieldEnum>;
}
export declare class FindFirstSubdistrictArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    orderBy?: Array<SubdistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SubdistrictScalarFieldEnum>;
}
export declare class FindManySubdistrictArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    orderBy?: Array<SubdistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof SubdistrictScalarFieldEnum>;
}
export declare class FindUniqueSubdistrictOrThrowArgs {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
}
export declare class FindUniqueSubdistrictArgs {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
}
export declare class SubdistrictAggregateArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    orderBy?: Array<SubdistrictOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof SubdistrictCountAggregateInput>;
    _avg?: InstanceType<typeof SubdistrictAvgAggregateInput>;
    _sum?: InstanceType<typeof SubdistrictSumAggregateInput>;
    _min?: InstanceType<typeof SubdistrictMinAggregateInput>;
    _max?: InstanceType<typeof SubdistrictMaxAggregateInput>;
}
export declare class SubdistrictAvgAggregateInput {
    id?: true;
    districtId?: true;
}
export declare class SubdistrictAvgAggregate {
    id?: number;
    districtId?: number;
}
export declare class SubdistrictAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
}
export declare class SubdistrictCountAggregateInput {
    id?: true;
    name?: true;
    districtId?: true;
    postalCode?: true;
    _all?: true;
}
export declare class SubdistrictCountAggregate {
    id: number;
    name: number;
    districtId: number;
    postalCode: number;
    _all: number;
}
export declare class SubdistrictCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
    postalCode?: keyof typeof SortOrder;
}
export declare class SubdistrictCount {
    address?: number;
}
export declare class SubdistrictCreateManyDistrictInputEnvelope {
    data: Array<SubdistrictCreateManyDistrictInput>;
    skipDuplicates?: boolean;
}
export declare class SubdistrictCreateManyDistrictInput {
    id?: number;
    name: string;
    postalCode: string;
}
export declare class SubdistrictCreateManyInput {
    id?: number;
    name: string;
    districtId: number;
    postalCode: string;
}
export declare class SubdistrictCreateNestedManyWithoutDistrictInput {
    create?: Array<SubdistrictCreateWithoutDistrictInput>;
    connectOrCreate?: Array<SubdistrictCreateOrConnectWithoutDistrictInput>;
    createMany?: InstanceType<typeof SubdistrictCreateManyDistrictInputEnvelope>;
    connect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
}
export declare class SubdistrictCreateNestedOneWithoutAddressInput {
    create?: InstanceType<typeof SubdistrictCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof SubdistrictCreateOrConnectWithoutAddressInput>;
    connect?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
}
export declare class SubdistrictCreateOrConnectWithoutAddressInput {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof SubdistrictCreateWithoutAddressInput>;
}
export declare class SubdistrictCreateOrConnectWithoutDistrictInput {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof SubdistrictCreateWithoutDistrictInput>;
}
export declare class SubdistrictCreateWithoutAddressInput {
    name: string;
    postalCode: string;
    district: InstanceType<typeof DistrictCreateNestedOneWithoutSubdistrictsInput>;
}
export declare class SubdistrictCreateWithoutDistrictInput {
    name: string;
    postalCode: string;
    address?: InstanceType<typeof AddressCreateNestedManyWithoutSubdistrictInput>;
}
export declare class SubdistrictCreateInput {
    name: string;
    postalCode: string;
    district: InstanceType<typeof DistrictCreateNestedOneWithoutSubdistrictsInput>;
    address?: InstanceType<typeof AddressCreateNestedManyWithoutSubdistrictInput>;
}
export declare class SubdistrictGroupByArgs {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    orderBy?: Array<SubdistrictOrderByWithAggregationInput>;
    by: Array<keyof typeof SubdistrictScalarFieldEnum>;
    having?: InstanceType<typeof SubdistrictScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof SubdistrictCountAggregateInput>;
    _avg?: InstanceType<typeof SubdistrictAvgAggregateInput>;
    _sum?: InstanceType<typeof SubdistrictSumAggregateInput>;
    _min?: InstanceType<typeof SubdistrictMinAggregateInput>;
    _max?: InstanceType<typeof SubdistrictMaxAggregateInput>;
}
export declare class SubdistrictGroupBy {
    id: number;
    name: string;
    districtId: number;
    postalCode: string;
    _count?: InstanceType<typeof SubdistrictCountAggregate>;
    _avg?: InstanceType<typeof SubdistrictAvgAggregate>;
    _sum?: InstanceType<typeof SubdistrictSumAggregate>;
    _min?: InstanceType<typeof SubdistrictMinAggregate>;
    _max?: InstanceType<typeof SubdistrictMaxAggregate>;
}
export declare class SubdistrictListRelationFilter {
    every?: InstanceType<typeof SubdistrictWhereInput>;
    some?: InstanceType<typeof SubdistrictWhereInput>;
    none?: InstanceType<typeof SubdistrictWhereInput>;
}
export declare class SubdistrictMaxAggregateInput {
    id?: true;
    name?: true;
    districtId?: true;
    postalCode?: true;
}
export declare class SubdistrictMaxAggregate {
    id?: number;
    name?: string;
    districtId?: number;
    postalCode?: string;
}
export declare class SubdistrictMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
    postalCode?: keyof typeof SortOrder;
}
export declare class SubdistrictMinAggregateInput {
    id?: true;
    name?: true;
    districtId?: true;
    postalCode?: true;
}
export declare class SubdistrictMinAggregate {
    id?: number;
    name?: string;
    districtId?: number;
    postalCode?: string;
}
export declare class SubdistrictMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
    postalCode?: keyof typeof SortOrder;
}
export declare class SubdistrictOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class SubdistrictOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
    postalCode?: keyof typeof SortOrder;
    _count?: InstanceType<typeof SubdistrictCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof SubdistrictAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof SubdistrictMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof SubdistrictMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof SubdistrictSumOrderByAggregateInput>;
}
export declare class SubdistrictOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
    postalCode?: keyof typeof SortOrder;
    district?: InstanceType<typeof DistrictOrderByWithRelationInput>;
    address?: InstanceType<typeof AddressOrderByRelationAggregateInput>;
}
export declare class SubdistrictRelationFilter {
    is?: InstanceType<typeof SubdistrictWhereInput>;
    isNot?: InstanceType<typeof SubdistrictWhereInput>;
}
export declare class SubdistrictScalarWhereWithAggregatesInput {
    AND?: Array<SubdistrictScalarWhereWithAggregatesInput>;
    OR?: Array<SubdistrictScalarWhereWithAggregatesInput>;
    NOT?: Array<SubdistrictScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    districtId?: InstanceType<typeof IntWithAggregatesFilter>;
    postalCode?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class SubdistrictScalarWhereInput {
    AND?: Array<SubdistrictScalarWhereInput>;
    OR?: Array<SubdistrictScalarWhereInput>;
    NOT?: Array<SubdistrictScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    districtId?: InstanceType<typeof IntFilter>;
    postalCode?: InstanceType<typeof StringFilter>;
}
export declare class SubdistrictSumAggregateInput {
    id?: true;
    districtId?: true;
}
export declare class SubdistrictSumAggregate {
    id?: number;
    districtId?: number;
}
export declare class SubdistrictSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    districtId?: keyof typeof SortOrder;
}
export declare class SubdistrictUncheckedCreateNestedManyWithoutDistrictInput {
    create?: Array<SubdistrictCreateWithoutDistrictInput>;
    connectOrCreate?: Array<SubdistrictCreateOrConnectWithoutDistrictInput>;
    createMany?: InstanceType<typeof SubdistrictCreateManyDistrictInputEnvelope>;
    connect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
}
export declare class SubdistrictUncheckedCreateWithoutAddressInput {
    id?: number;
    name: string;
    districtId: number;
    postalCode: string;
}
export declare class SubdistrictUncheckedCreateWithoutDistrictInput {
    id?: number;
    name: string;
    postalCode: string;
    address?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutSubdistrictInput>;
}
export declare class SubdistrictUncheckedCreateInput {
    id?: number;
    name: string;
    districtId: number;
    postalCode: string;
    address?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutSubdistrictInput>;
}
export declare class SubdistrictUncheckedUpdateManyWithoutDistrictNestedInput {
    create?: Array<SubdistrictCreateWithoutDistrictInput>;
    connectOrCreate?: Array<SubdistrictCreateOrConnectWithoutDistrictInput>;
    upsert?: Array<SubdistrictUpsertWithWhereUniqueWithoutDistrictInput>;
    createMany?: InstanceType<typeof SubdistrictCreateManyDistrictInputEnvelope>;
    set?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    update?: Array<SubdistrictUpdateWithWhereUniqueWithoutDistrictInput>;
    updateMany?: Array<SubdistrictUpdateManyWithWhereWithoutDistrictInput>;
    deleteMany?: Array<SubdistrictScalarWhereInput>;
}
export declare class SubdistrictUncheckedUpdateManyWithoutDistrictInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class SubdistrictUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    districtId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class SubdistrictUncheckedUpdateWithoutAddressInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    districtId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class SubdistrictUncheckedUpdateWithoutDistrictInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUncheckedUpdateManyWithoutSubdistrictNestedInput>;
}
export declare class SubdistrictUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    districtId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUncheckedUpdateManyWithoutSubdistrictNestedInput>;
}
export declare class SubdistrictUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class SubdistrictUpdateManyWithWhereWithoutDistrictInput {
    where: InstanceType<typeof SubdistrictScalarWhereInput>;
    data: InstanceType<typeof SubdistrictUpdateManyMutationInput>;
}
export declare class SubdistrictUpdateManyWithoutDistrictNestedInput {
    create?: Array<SubdistrictCreateWithoutDistrictInput>;
    connectOrCreate?: Array<SubdistrictCreateOrConnectWithoutDistrictInput>;
    upsert?: Array<SubdistrictUpsertWithWhereUniqueWithoutDistrictInput>;
    createMany?: InstanceType<typeof SubdistrictCreateManyDistrictInputEnvelope>;
    set?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>>;
    update?: Array<SubdistrictUpdateWithWhereUniqueWithoutDistrictInput>;
    updateMany?: Array<SubdistrictUpdateManyWithWhereWithoutDistrictInput>;
    deleteMany?: Array<SubdistrictScalarWhereInput>;
}
export declare class SubdistrictUpdateOneRequiredWithoutAddressNestedInput {
    create?: InstanceType<typeof SubdistrictCreateWithoutAddressInput>;
    connectOrCreate?: InstanceType<typeof SubdistrictCreateOrConnectWithoutAddressInput>;
    upsert?: InstanceType<typeof SubdistrictUpsertWithoutAddressInput>;
    connect?: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof SubdistrictUpdateToOneWithWhereWithoutAddressInput>;
}
export declare class SubdistrictUpdateToOneWithWhereWithoutAddressInput {
    where?: InstanceType<typeof SubdistrictWhereInput>;
    data: InstanceType<typeof SubdistrictUpdateWithoutAddressInput>;
}
export declare class SubdistrictUpdateWithWhereUniqueWithoutDistrictInput {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    data: InstanceType<typeof SubdistrictUpdateWithoutDistrictInput>;
}
export declare class SubdistrictUpdateWithoutAddressInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    district?: InstanceType<typeof DistrictUpdateOneRequiredWithoutSubdistrictsNestedInput>;
}
export declare class SubdistrictUpdateWithoutDistrictInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    address?: InstanceType<typeof AddressUpdateManyWithoutSubdistrictNestedInput>;
}
export declare class SubdistrictUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    postalCode?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    district?: InstanceType<typeof DistrictUpdateOneRequiredWithoutSubdistrictsNestedInput>;
    address?: InstanceType<typeof AddressUpdateManyWithoutSubdistrictNestedInput>;
}
export declare class SubdistrictUpsertWithWhereUniqueWithoutDistrictInput {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    update: InstanceType<typeof SubdistrictUpdateWithoutDistrictInput>;
    create: InstanceType<typeof SubdistrictCreateWithoutDistrictInput>;
}
export declare class SubdistrictUpsertWithoutAddressInput {
    update: InstanceType<typeof SubdistrictUpdateWithoutAddressInput>;
    create: InstanceType<typeof SubdistrictCreateWithoutAddressInput>;
    where?: InstanceType<typeof SubdistrictWhereInput>;
}
export declare class SubdistrictWhereUniqueInput {
    id?: number;
    AND?: Array<SubdistrictWhereInput>;
    OR?: Array<SubdistrictWhereInput>;
    NOT?: Array<SubdistrictWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    districtId?: InstanceType<typeof IntFilter>;
    postalCode?: InstanceType<typeof StringFilter>;
    district?: InstanceType<typeof DistrictRelationFilter>;
    address?: InstanceType<typeof AddressListRelationFilter>;
}
export declare class SubdistrictWhereInput {
    AND?: Array<SubdistrictWhereInput>;
    OR?: Array<SubdistrictWhereInput>;
    NOT?: Array<SubdistrictWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    districtId?: InstanceType<typeof IntFilter>;
    postalCode?: InstanceType<typeof StringFilter>;
    district?: InstanceType<typeof DistrictRelationFilter>;
    address?: InstanceType<typeof AddressListRelationFilter>;
}
export declare class Subdistrict {
    id: number;
    name: string;
    districtId: number;
    postalCode: string;
    district?: InstanceType<typeof District>;
    address?: Array<Address>;
    _count?: InstanceType<typeof SubdistrictCount>;
}
export declare class UpdateManySubdistrictArgs {
    data: InstanceType<typeof SubdistrictUpdateManyMutationInput>;
    where?: InstanceType<typeof SubdistrictWhereInput>;
}
export declare class UpdateOneSubdistrictArgs {
    data: InstanceType<typeof SubdistrictUpdateInput>;
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
}
export declare class UpsertOneSubdistrictArgs {
    where: Prisma.AtLeast<SubdistrictWhereUniqueInput, 'id'>;
    create: InstanceType<typeof SubdistrictCreateInput>;
    update: InstanceType<typeof SubdistrictUpdateInput>;
}
export declare class AggregateTermOrFaq {
    _count?: InstanceType<typeof TermOrFaqCountAggregate>;
    _avg?: InstanceType<typeof TermOrFaqAvgAggregate>;
    _sum?: InstanceType<typeof TermOrFaqSumAggregate>;
    _min?: InstanceType<typeof TermOrFaqMinAggregate>;
    _max?: InstanceType<typeof TermOrFaqMaxAggregate>;
}
export declare class CreateManyTermOrFaqArgs {
    data: Array<TermOrFaqCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneTermOrFaqArgs {
    data: InstanceType<typeof TermOrFaqCreateInput>;
}
export declare class DeleteManyTermOrFaqArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
}
export declare class DeleteOneTermOrFaqArgs {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
}
export declare class FindFirstTermOrFaqOrThrowArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
    orderBy?: Array<TermOrFaqOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TermOrFaqScalarFieldEnum>;
}
export declare class FindFirstTermOrFaqArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
    orderBy?: Array<TermOrFaqOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TermOrFaqScalarFieldEnum>;
}
export declare class FindManyTermOrFaqArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
    orderBy?: Array<TermOrFaqOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TermOrFaqScalarFieldEnum>;
}
export declare class FindUniqueTermOrFaqOrThrowArgs {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
}
export declare class FindUniqueTermOrFaqArgs {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
}
export declare class TermOrFaqAggregateArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
    orderBy?: Array<TermOrFaqOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof TermOrFaqCountAggregateInput>;
    _avg?: InstanceType<typeof TermOrFaqAvgAggregateInput>;
    _sum?: InstanceType<typeof TermOrFaqSumAggregateInput>;
    _min?: InstanceType<typeof TermOrFaqMinAggregateInput>;
    _max?: InstanceType<typeof TermOrFaqMaxAggregateInput>;
}
export declare class TermOrFaqAvgAggregateInput {
    id?: true;
}
export declare class TermOrFaqAvgAggregate {
    id?: number;
}
export declare class TermOrFaqAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class TermOrFaqCountAggregateInput {
    id?: true;
    title?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    category?: true;
    type?: true;
    createdById?: true;
    voucherCode?: true;
    _all?: true;
}
export declare class TermOrFaqCountAggregate {
    id: number;
    title: number;
    content: number;
    createdAt: number;
    updatedAt: number;
    category: number;
    type: number;
    createdById: number;
    voucherCode: number;
    _all: number;
}
export declare class TermOrFaqCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    category?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    voucherCode?: keyof typeof SortOrder;
}
export declare class TermOrFaqCount {
    readBy?: number;
}
export declare class TermOrFaqCreateManyCreatedByInputEnvelope {
    data: Array<TermOrFaqCreateManyCreatedByInput>;
    skipDuplicates?: boolean;
}
export declare class TermOrFaqCreateManyCreatedByInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    voucherCode?: string;
}
export declare class TermOrFaqCreateManyVoucherInputEnvelope {
    data: Array<TermOrFaqCreateManyVoucherInput>;
    skipDuplicates?: boolean;
}
export declare class TermOrFaqCreateManyVoucherInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
}
export declare class TermOrFaqCreateManyInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    voucherCode?: string;
}
export declare class TermOrFaqCreateNestedManyWithoutCreatedByInput {
    create?: Array<TermOrFaqCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqCreateNestedManyWithoutReadByInput {
    create?: Array<TermOrFaqCreateWithoutReadByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutReadByInput>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqCreateNestedManyWithoutVoucherInput {
    create?: Array<TermOrFaqCreateWithoutVoucherInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutVoucherInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyVoucherInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqCreateOrConnectWithoutCreatedByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TermOrFaqCreateWithoutCreatedByInput>;
}
export declare class TermOrFaqCreateOrConnectWithoutReadByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TermOrFaqCreateWithoutReadByInput>;
}
export declare class TermOrFaqCreateOrConnectWithoutVoucherInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TermOrFaqCreateWithoutVoucherInput>;
}
export declare class TermOrFaqCreateWithoutCreatedByInput {
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    readBy?: InstanceType<typeof UserCreateNestedManyWithoutTermOrFaqReadsInput>;
    Voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutTermsAndFaqsInput>;
}
export declare class TermOrFaqCreateWithoutReadByInput {
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutTermOrFaqsCreatedInput>;
    Voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutTermsAndFaqsInput>;
}
export declare class TermOrFaqCreateWithoutVoucherInput {
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutTermOrFaqsCreatedInput>;
    readBy?: InstanceType<typeof UserCreateNestedManyWithoutTermOrFaqReadsInput>;
}
export declare class TermOrFaqCreateInput {
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutTermOrFaqsCreatedInput>;
    readBy?: InstanceType<typeof UserCreateNestedManyWithoutTermOrFaqReadsInput>;
    Voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutTermsAndFaqsInput>;
}
export declare class TermOrFaqGroupByArgs {
    where?: InstanceType<typeof TermOrFaqWhereInput>;
    orderBy?: Array<TermOrFaqOrderByWithAggregationInput>;
    by: Array<keyof typeof TermOrFaqScalarFieldEnum>;
    having?: InstanceType<typeof TermOrFaqScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof TermOrFaqCountAggregateInput>;
    _avg?: InstanceType<typeof TermOrFaqAvgAggregateInput>;
    _sum?: InstanceType<typeof TermOrFaqSumAggregateInput>;
    _min?: InstanceType<typeof TermOrFaqMinAggregateInput>;
    _max?: InstanceType<typeof TermOrFaqMaxAggregateInput>;
}
export declare class TermOrFaqGroupBy {
    id: number;
    title: string;
    content: string;
    createdAt: Date | string;
    updatedAt: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    voucherCode?: string;
    _count?: InstanceType<typeof TermOrFaqCountAggregate>;
    _avg?: InstanceType<typeof TermOrFaqAvgAggregate>;
    _sum?: InstanceType<typeof TermOrFaqSumAggregate>;
    _min?: InstanceType<typeof TermOrFaqMinAggregate>;
    _max?: InstanceType<typeof TermOrFaqMaxAggregate>;
}
export declare class TermOrFaqListRelationFilter {
    every?: InstanceType<typeof TermOrFaqWhereInput>;
    some?: InstanceType<typeof TermOrFaqWhereInput>;
    none?: InstanceType<typeof TermOrFaqWhereInput>;
}
export declare class TermOrFaqMaxAggregateInput {
    id?: true;
    title?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    category?: true;
    type?: true;
    createdById?: true;
    voucherCode?: true;
}
export declare class TermOrFaqMaxAggregate {
    id?: number;
    title?: string;
    content?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category?: keyof typeof TermOrFaqCategory;
    type?: keyof typeof TermOrFaqType;
    createdById?: string;
    voucherCode?: string;
}
export declare class TermOrFaqMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    category?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    voucherCode?: keyof typeof SortOrder;
}
export declare class TermOrFaqMinAggregateInput {
    id?: true;
    title?: true;
    content?: true;
    createdAt?: true;
    updatedAt?: true;
    category?: true;
    type?: true;
    createdById?: true;
    voucherCode?: true;
}
export declare class TermOrFaqMinAggregate {
    id?: number;
    title?: string;
    content?: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category?: keyof typeof TermOrFaqCategory;
    type?: keyof typeof TermOrFaqType;
    createdById?: string;
    voucherCode?: string;
}
export declare class TermOrFaqMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    category?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    voucherCode?: keyof typeof SortOrder;
}
export declare class TermOrFaqOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class TermOrFaqOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    category?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    voucherCode?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof TermOrFaqCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof TermOrFaqAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof TermOrFaqMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof TermOrFaqMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof TermOrFaqSumOrderByAggregateInput>;
}
export declare class TermOrFaqOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    title?: keyof typeof SortOrder;
    content?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    category?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    voucherCode?: InstanceType<typeof SortOrderInput>;
    createdBy?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    readBy?: InstanceType<typeof UserOrderByRelationAggregateInput>;
    Voucher?: InstanceType<typeof VoucherOrderByWithRelationInput>;
}
export declare class TermOrFaqScalarWhereWithAggregatesInput {
    AND?: Array<TermOrFaqScalarWhereWithAggregatesInput>;
    OR?: Array<TermOrFaqScalarWhereWithAggregatesInput>;
    NOT?: Array<TermOrFaqScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    title?: InstanceType<typeof StringWithAggregatesFilter>;
    content?: InstanceType<typeof StringWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryWithAggregatesFilter>;
    type?: InstanceType<typeof EnumTermOrFaqTypeWithAggregatesFilter>;
    createdById?: InstanceType<typeof StringWithAggregatesFilter>;
    voucherCode?: InstanceType<typeof StringNullableWithAggregatesFilter>;
}
export declare class TermOrFaqScalarWhereInput {
    AND?: Array<TermOrFaqScalarWhereInput>;
    OR?: Array<TermOrFaqScalarWhereInput>;
    NOT?: Array<TermOrFaqScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    title?: InstanceType<typeof StringFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFilter>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    voucherCode?: InstanceType<typeof StringNullableFilter>;
}
export declare class TermOrFaqSumAggregateInput {
    id?: true;
}
export declare class TermOrFaqSumAggregate {
    id?: number;
}
export declare class TermOrFaqSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
}
export declare class TermOrFaqUncheckedCreateNestedManyWithoutCreatedByInput {
    create?: Array<TermOrFaqCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqUncheckedCreateNestedManyWithoutReadByInput {
    create?: Array<TermOrFaqCreateWithoutReadByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutReadByInput>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput {
    create?: Array<TermOrFaqCreateWithoutVoucherInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutVoucherInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyVoucherInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
}
export declare class TermOrFaqUncheckedCreateWithoutCreatedByInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    voucherCode?: string;
    readBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutTermOrFaqReadsInput>;
}
export declare class TermOrFaqUncheckedCreateWithoutReadByInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    voucherCode?: string;
}
export declare class TermOrFaqUncheckedCreateWithoutVoucherInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    readBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutTermOrFaqReadsInput>;
}
export declare class TermOrFaqUncheckedCreateInput {
    id?: number;
    title: string;
    content: string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    voucherCode?: string;
    readBy?: InstanceType<typeof UserUncheckedCreateNestedManyWithoutTermOrFaqReadsInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutCreatedByNestedInput {
    create?: Array<TermOrFaqCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutCreatedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput {
    create?: Array<TermOrFaqCreateWithoutReadByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutReadByInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutReadByInput>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutReadByInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutReadByInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutReadByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput {
    create?: Array<TermOrFaqCreateWithoutVoucherInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutVoucherInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutVoucherInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyVoucherInputEnvelope>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutVoucherInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutVoucherInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUncheckedUpdateManyWithoutVoucherInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUncheckedUpdateWithoutCreatedByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    readBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutTermOrFaqReadsNestedInput>;
}
export declare class TermOrFaqUncheckedUpdateWithoutReadByInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUncheckedUpdateWithoutVoucherInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    readBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutTermOrFaqReadsNestedInput>;
}
export declare class TermOrFaqUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    voucherCode?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    readBy?: InstanceType<typeof UserUncheckedUpdateManyWithoutTermOrFaqReadsNestedInput>;
}
export declare class TermOrFaqUpdateManyMutationInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
}
export declare class TermOrFaqUpdateManyWithWhereWithoutCreatedByInput {
    where: InstanceType<typeof TermOrFaqScalarWhereInput>;
    data: InstanceType<typeof TermOrFaqUpdateManyMutationInput>;
}
export declare class TermOrFaqUpdateManyWithWhereWithoutReadByInput {
    where: InstanceType<typeof TermOrFaqScalarWhereInput>;
    data: InstanceType<typeof TermOrFaqUpdateManyMutationInput>;
}
export declare class TermOrFaqUpdateManyWithWhereWithoutVoucherInput {
    where: InstanceType<typeof TermOrFaqScalarWhereInput>;
    data: InstanceType<typeof TermOrFaqUpdateManyMutationInput>;
}
export declare class TermOrFaqUpdateManyWithoutCreatedByNestedInput {
    create?: Array<TermOrFaqCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUpdateManyWithoutReadByNestedInput {
    create?: Array<TermOrFaqCreateWithoutReadByInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutReadByInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutReadByInput>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutReadByInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutReadByInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUpdateManyWithoutVoucherNestedInput {
    create?: Array<TermOrFaqCreateWithoutVoucherInput>;
    connectOrCreate?: Array<TermOrFaqCreateOrConnectWithoutVoucherInput>;
    upsert?: Array<TermOrFaqUpsertWithWhereUniqueWithoutVoucherInput>;
    createMany?: InstanceType<typeof TermOrFaqCreateManyVoucherInputEnvelope>;
    set?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>>;
    update?: Array<TermOrFaqUpdateWithWhereUniqueWithoutVoucherInput>;
    updateMany?: Array<TermOrFaqUpdateManyWithWhereWithoutVoucherInput>;
    deleteMany?: Array<TermOrFaqScalarWhereInput>;
}
export declare class TermOrFaqUpdateWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TermOrFaqUpdateWithoutCreatedByInput>;
}
export declare class TermOrFaqUpdateWithWhereUniqueWithoutReadByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TermOrFaqUpdateWithoutReadByInput>;
}
export declare class TermOrFaqUpdateWithWhereUniqueWithoutVoucherInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TermOrFaqUpdateWithoutVoucherInput>;
}
export declare class TermOrFaqUpdateWithoutCreatedByInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    readBy?: InstanceType<typeof UserUpdateManyWithoutTermOrFaqReadsNestedInput>;
    Voucher?: InstanceType<typeof VoucherUpdateOneWithoutTermsAndFaqsNestedInput>;
}
export declare class TermOrFaqUpdateWithoutReadByInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutTermOrFaqsCreatedNestedInput>;
    Voucher?: InstanceType<typeof VoucherUpdateOneWithoutTermsAndFaqsNestedInput>;
}
export declare class TermOrFaqUpdateWithoutVoucherInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutTermOrFaqsCreatedNestedInput>;
    readBy?: InstanceType<typeof UserUpdateManyWithoutTermOrFaqReadsNestedInput>;
}
export declare class TermOrFaqUpdateInput {
    title?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    content?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFieldUpdateOperationsInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutTermOrFaqsCreatedNestedInput>;
    readBy?: InstanceType<typeof UserUpdateManyWithoutTermOrFaqReadsNestedInput>;
    Voucher?: InstanceType<typeof VoucherUpdateOneWithoutTermsAndFaqsNestedInput>;
}
export declare class TermOrFaqUpsertWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TermOrFaqUpdateWithoutCreatedByInput>;
    create: InstanceType<typeof TermOrFaqCreateWithoutCreatedByInput>;
}
export declare class TermOrFaqUpsertWithWhereUniqueWithoutReadByInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TermOrFaqUpdateWithoutReadByInput>;
    create: InstanceType<typeof TermOrFaqCreateWithoutReadByInput>;
}
export declare class TermOrFaqUpsertWithWhereUniqueWithoutVoucherInput {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TermOrFaqUpdateWithoutVoucherInput>;
    create: InstanceType<typeof TermOrFaqCreateWithoutVoucherInput>;
}
export declare class TermOrFaqWhereUniqueInput {
    id?: number;
    AND?: Array<TermOrFaqWhereInput>;
    OR?: Array<TermOrFaqWhereInput>;
    NOT?: Array<TermOrFaqWhereInput>;
    title?: InstanceType<typeof StringFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFilter>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    voucherCode?: InstanceType<typeof StringNullableFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
    readBy?: InstanceType<typeof UserListRelationFilter>;
    Voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
}
export declare class TermOrFaqWhereInput {
    AND?: Array<TermOrFaqWhereInput>;
    OR?: Array<TermOrFaqWhereInput>;
    NOT?: Array<TermOrFaqWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    title?: InstanceType<typeof StringFilter>;
    content?: InstanceType<typeof StringFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    category?: InstanceType<typeof EnumTermOrFaqCategoryFilter>;
    type?: InstanceType<typeof EnumTermOrFaqTypeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    voucherCode?: InstanceType<typeof StringNullableFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
    readBy?: InstanceType<typeof UserListRelationFilter>;
    Voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
}
export declare class TermOrFaq {
    id: number;
    title: string;
    content: string;
    createdAt: Date;
    updatedAt: Date;
    category: keyof typeof TermOrFaqCategory;
    type: keyof typeof TermOrFaqType;
    createdById: string;
    voucherCode: string | null;
    createdBy?: InstanceType<typeof Owner>;
    readBy?: Array<User>;
    Voucher?: InstanceType<typeof Voucher> | null;
    _count?: InstanceType<typeof TermOrFaqCount>;
}
export declare class UpdateManyTermOrFaqArgs {
    data: InstanceType<typeof TermOrFaqUpdateManyMutationInput>;
    where?: InstanceType<typeof TermOrFaqWhereInput>;
}
export declare class UpdateOneTermOrFaqArgs {
    data: InstanceType<typeof TermOrFaqUpdateInput>;
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
}
export declare class UpsertOneTermOrFaqArgs {
    where: Prisma.AtLeast<TermOrFaqWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TermOrFaqCreateInput>;
    update: InstanceType<typeof TermOrFaqUpdateInput>;
}
export declare class AggregateTransaction {
    _count?: InstanceType<typeof TransactionCountAggregate>;
    _avg?: InstanceType<typeof TransactionAvgAggregate>;
    _sum?: InstanceType<typeof TransactionSumAggregate>;
    _min?: InstanceType<typeof TransactionMinAggregate>;
    _max?: InstanceType<typeof TransactionMaxAggregate>;
}
export declare class CreateManyTransactionArgs {
    data: Array<TransactionCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneTransactionArgs {
    data: InstanceType<typeof TransactionCreateInput>;
}
export declare class DeleteManyTransactionArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
}
export declare class DeleteOneTransactionArgs {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
}
export declare class FindFirstTransactionOrThrowArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
    orderBy?: Array<TransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TransactionScalarFieldEnum>;
}
export declare class FindFirstTransactionArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
    orderBy?: Array<TransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TransactionScalarFieldEnum>;
}
export declare class FindManyTransactionArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
    orderBy?: Array<TransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof TransactionScalarFieldEnum>;
}
export declare class FindUniqueTransactionOrThrowArgs {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
}
export declare class FindUniqueTransactionArgs {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
}
export declare class TransactionAggregateArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
    orderBy?: Array<TransactionOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof TransactionCountAggregateInput>;
    _avg?: InstanceType<typeof TransactionAvgAggregateInput>;
    _sum?: InstanceType<typeof TransactionSumAggregateInput>;
    _min?: InstanceType<typeof TransactionMinAggregateInput>;
    _max?: InstanceType<typeof TransactionMaxAggregateInput>;
}
export declare class TransactionAvgAggregateInput {
    id?: true;
    amount?: true;
    uniqueCode?: true;
    fromAccountId?: true;
    toAccountId?: true;
    invoiceId?: true;
    paymentId?: true;
}
export declare class TransactionAvgAggregate {
    id?: number;
    amount?: number;
    uniqueCode?: number;
    fromAccountId?: number;
    toAccountId?: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: keyof typeof SortOrder;
    paymentId?: keyof typeof SortOrder;
}
export declare class TransactionCountAggregateInput {
    id?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    proofImageId?: true;
    status?: true;
    transactionCategory?: true;
    fromAccountId?: true;
    toAccountId?: true;
    invoiceId?: true;
    paymentId?: true;
    _all?: true;
}
export declare class TransactionCountAggregate {
    id: number;
    amount: number;
    uniqueCode: number;
    createdAt: number;
    proofImageId: number;
    status: number;
    transactionCategory: number;
    fromAccountId: number;
    toAccountId: number;
    invoiceId: number;
    paymentId: number;
    _all: number;
}
export declare class TransactionCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    proofImageId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionCategory?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: keyof typeof SortOrder;
    paymentId?: keyof typeof SortOrder;
}
export declare class TransactionCreateManyFromAccountInputEnvelope {
    data: Array<TransactionCreateManyFromAccountInput>;
    skipDuplicates?: boolean;
}
export declare class TransactionCreateManyFromAccountInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionCreateManyInvoiceInputEnvelope {
    data: Array<TransactionCreateManyInvoiceInput>;
    skipDuplicates?: boolean;
}
export declare class TransactionCreateManyInvoiceInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    paymentId?: number;
}
export declare class TransactionCreateManyProofImageInputEnvelope {
    data: Array<TransactionCreateManyProofImageInput>;
    skipDuplicates?: boolean;
}
export declare class TransactionCreateManyProofImageInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionCreateManyToAccountInputEnvelope {
    data: Array<TransactionCreateManyToAccountInput>;
    skipDuplicates?: boolean;
}
export declare class TransactionCreateManyToAccountInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionCreateManyInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionCreateNestedManyWithoutFromAccountInput {
    create?: Array<TransactionCreateWithoutFromAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutFromAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyFromAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionCreateNestedManyWithoutInvoiceInput {
    create?: Array<TransactionCreateWithoutInvoiceInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutInvoiceInput>;
    createMany?: InstanceType<typeof TransactionCreateManyInvoiceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionCreateNestedManyWithoutProofImageInput {
    create?: Array<TransactionCreateWithoutProofImageInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutProofImageInput>;
    createMany?: InstanceType<typeof TransactionCreateManyProofImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionCreateNestedManyWithoutToAccountInput {
    create?: Array<TransactionCreateWithoutToAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutToAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyToAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionCreateNestedOneWithoutPaymentInput {
    create?: InstanceType<typeof TransactionCreateWithoutPaymentInput>;
    connectOrCreate?: InstanceType<typeof TransactionCreateOrConnectWithoutPaymentInput>;
    connect?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
}
export declare class TransactionCreateOrConnectWithoutFromAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateWithoutFromAccountInput>;
}
export declare class TransactionCreateOrConnectWithoutInvoiceInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateWithoutInvoiceInput>;
}
export declare class TransactionCreateOrConnectWithoutPaymentInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateWithoutPaymentInput>;
}
export declare class TransactionCreateOrConnectWithoutProofImageInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateWithoutProofImageInput>;
}
export declare class TransactionCreateOrConnectWithoutToAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateWithoutToAccountInput>;
}
export declare class TransactionCreateWithoutFromAccountInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    proofImage?: InstanceType<typeof ImageCreateNestedOneWithoutTransactionsInput>;
    toAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionDestinationInput>;
    invoice?: InstanceType<typeof InvoiceCreateNestedOneWithoutTransactionsInput>;
    Payment?: InstanceType<typeof PaymentCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionCreateWithoutInvoiceInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    proofImage?: InstanceType<typeof ImageCreateNestedOneWithoutTransactionsInput>;
    fromAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionOriginsInput>;
    toAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionDestinationInput>;
    Payment?: InstanceType<typeof PaymentCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionCreateWithoutPaymentInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    proofImage?: InstanceType<typeof ImageCreateNestedOneWithoutTransactionsInput>;
    fromAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionOriginsInput>;
    toAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionDestinationInput>;
    invoice?: InstanceType<typeof InvoiceCreateNestedOneWithoutTransactionsInput>;
}
export declare class TransactionCreateWithoutProofImageInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    fromAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionOriginsInput>;
    toAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionDestinationInput>;
    invoice?: InstanceType<typeof InvoiceCreateNestedOneWithoutTransactionsInput>;
    Payment?: InstanceType<typeof PaymentCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionCreateWithoutToAccountInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    proofImage?: InstanceType<typeof ImageCreateNestedOneWithoutTransactionsInput>;
    fromAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionOriginsInput>;
    invoice?: InstanceType<typeof InvoiceCreateNestedOneWithoutTransactionsInput>;
    Payment?: InstanceType<typeof PaymentCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionCreateInput {
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    paymentId?: number;
    proofImage?: InstanceType<typeof ImageCreateNestedOneWithoutTransactionsInput>;
    fromAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionOriginsInput>;
    toAccount: InstanceType<typeof AccountCreateNestedOneWithoutTransactionDestinationInput>;
    invoice?: InstanceType<typeof InvoiceCreateNestedOneWithoutTransactionsInput>;
    Payment?: InstanceType<typeof PaymentCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionGroupByArgs {
    where?: InstanceType<typeof TransactionWhereInput>;
    orderBy?: Array<TransactionOrderByWithAggregationInput>;
    by: Array<keyof typeof TransactionScalarFieldEnum>;
    having?: InstanceType<typeof TransactionScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof TransactionCountAggregateInput>;
    _avg?: InstanceType<typeof TransactionAvgAggregateInput>;
    _sum?: InstanceType<typeof TransactionSumAggregateInput>;
    _min?: InstanceType<typeof TransactionMinAggregateInput>;
    _max?: InstanceType<typeof TransactionMaxAggregateInput>;
}
export declare class TransactionGroupBy {
    id: number;
    amount: number;
    uniqueCode?: number;
    createdAt: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
    _count?: InstanceType<typeof TransactionCountAggregate>;
    _avg?: InstanceType<typeof TransactionAvgAggregate>;
    _sum?: InstanceType<typeof TransactionSumAggregate>;
    _min?: InstanceType<typeof TransactionMinAggregate>;
    _max?: InstanceType<typeof TransactionMaxAggregate>;
}
export declare class TransactionListRelationFilter {
    every?: InstanceType<typeof TransactionWhereInput>;
    some?: InstanceType<typeof TransactionWhereInput>;
    none?: InstanceType<typeof TransactionWhereInput>;
}
export declare class TransactionMaxAggregateInput {
    id?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    proofImageId?: true;
    status?: true;
    transactionCategory?: true;
    fromAccountId?: true;
    toAccountId?: true;
    invoiceId?: true;
    paymentId?: true;
}
export declare class TransactionMaxAggregate {
    id?: number;
    amount?: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status?: keyof typeof TransactionStatus;
    transactionCategory?: keyof typeof TransactionCategory;
    fromAccountId?: number;
    toAccountId?: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    proofImageId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionCategory?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: keyof typeof SortOrder;
    paymentId?: keyof typeof SortOrder;
}
export declare class TransactionMinAggregateInput {
    id?: true;
    amount?: true;
    uniqueCode?: true;
    createdAt?: true;
    proofImageId?: true;
    status?: true;
    transactionCategory?: true;
    fromAccountId?: true;
    toAccountId?: true;
    invoiceId?: true;
    paymentId?: true;
}
export declare class TransactionMinAggregate {
    id?: number;
    amount?: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status?: keyof typeof TransactionStatus;
    transactionCategory?: keyof typeof TransactionCategory;
    fromAccountId?: number;
    toAccountId?: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    proofImageId?: keyof typeof SortOrder;
    status?: keyof typeof SortOrder;
    transactionCategory?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: keyof typeof SortOrder;
    paymentId?: keyof typeof SortOrder;
}
export declare class TransactionOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class TransactionOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    proofImageId?: InstanceType<typeof SortOrderInput>;
    status?: keyof typeof SortOrder;
    transactionCategory?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: InstanceType<typeof SortOrderInput>;
    paymentId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof TransactionCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof TransactionAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof TransactionMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof TransactionMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof TransactionSumOrderByAggregateInput>;
}
export declare class TransactionOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    proofImageId?: InstanceType<typeof SortOrderInput>;
    status?: keyof typeof SortOrder;
    transactionCategory?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: InstanceType<typeof SortOrderInput>;
    paymentId?: InstanceType<typeof SortOrderInput>;
    proofImage?: InstanceType<typeof ImageOrderByWithRelationInput>;
    fromAccount?: InstanceType<typeof AccountOrderByWithRelationInput>;
    toAccount?: InstanceType<typeof AccountOrderByWithRelationInput>;
    invoice?: InstanceType<typeof InvoiceOrderByWithRelationInput>;
    Payment?: InstanceType<typeof PaymentOrderByWithRelationInput>;
}
export declare class TransactionRelationFilter {
    is?: InstanceType<typeof TransactionWhereInput>;
    isNot?: InstanceType<typeof TransactionWhereInput>;
}
export declare class TransactionScalarWhereWithAggregatesInput {
    AND?: Array<TransactionScalarWhereWithAggregatesInput>;
    OR?: Array<TransactionScalarWhereWithAggregatesInput>;
    NOT?: Array<TransactionScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    amount?: InstanceType<typeof FloatWithAggregatesFilter>;
    uniqueCode?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    proofImageId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    status?: InstanceType<typeof EnumTransactionStatusWithAggregatesFilter>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryWithAggregatesFilter>;
    fromAccountId?: InstanceType<typeof IntWithAggregatesFilter>;
    toAccountId?: InstanceType<typeof IntWithAggregatesFilter>;
    invoiceId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    paymentId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class TransactionScalarWhereInput {
    AND?: Array<TransactionScalarWhereInput>;
    OR?: Array<TransactionScalarWhereInput>;
    NOT?: Array<TransactionScalarWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    proofImageId?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumTransactionStatusFilter>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFilter>;
    fromAccountId?: InstanceType<typeof IntFilter>;
    toAccountId?: InstanceType<typeof IntFilter>;
    invoiceId?: InstanceType<typeof IntNullableFilter>;
    paymentId?: InstanceType<typeof IntNullableFilter>;
}
export declare class TransactionSumAggregateInput {
    id?: true;
    amount?: true;
    uniqueCode?: true;
    fromAccountId?: true;
    toAccountId?: true;
    invoiceId?: true;
    paymentId?: true;
}
export declare class TransactionSumAggregate {
    id?: number;
    amount?: number;
    uniqueCode?: number;
    fromAccountId?: number;
    toAccountId?: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    amount?: keyof typeof SortOrder;
    uniqueCode?: keyof typeof SortOrder;
    fromAccountId?: keyof typeof SortOrder;
    toAccountId?: keyof typeof SortOrder;
    invoiceId?: keyof typeof SortOrder;
    paymentId?: keyof typeof SortOrder;
}
export declare class TransactionUncheckedCreateNestedManyWithoutFromAccountInput {
    create?: Array<TransactionCreateWithoutFromAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutFromAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyFromAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionUncheckedCreateNestedManyWithoutInvoiceInput {
    create?: Array<TransactionCreateWithoutInvoiceInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutInvoiceInput>;
    createMany?: InstanceType<typeof TransactionCreateManyInvoiceInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionUncheckedCreateNestedManyWithoutProofImageInput {
    create?: Array<TransactionCreateWithoutProofImageInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutProofImageInput>;
    createMany?: InstanceType<typeof TransactionCreateManyProofImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionUncheckedCreateNestedManyWithoutToAccountInput {
    create?: Array<TransactionCreateWithoutToAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutToAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyToAccountInputEnvelope>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
}
export declare class TransactionUncheckedCreateWithoutFromAccountInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
    Payment?: InstanceType<typeof PaymentUncheckedCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionUncheckedCreateWithoutInvoiceInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    paymentId?: number;
    Payment?: InstanceType<typeof PaymentUncheckedCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionUncheckedCreateWithoutPaymentInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
}
export declare class TransactionUncheckedCreateWithoutProofImageInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
    Payment?: InstanceType<typeof PaymentUncheckedCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionUncheckedCreateWithoutToAccountInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    invoiceId?: number;
    paymentId?: number;
    Payment?: InstanceType<typeof PaymentUncheckedCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionUncheckedCreateInput {
    id?: number;
    amount: number;
    uniqueCode?: number;
    createdAt?: Date | string;
    proofImageId?: string;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId?: number;
    paymentId?: number;
    Payment?: InstanceType<typeof PaymentUncheckedCreateNestedOneWithoutTransactionInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutFromAccountNestedInput {
    create?: Array<TransactionCreateWithoutFromAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutFromAccountInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutFromAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyFromAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutFromAccountInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutFromAccountInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutFromAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutInvoiceNestedInput {
    create?: Array<TransactionCreateWithoutInvoiceInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutInvoiceInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutInvoiceInput>;
    createMany?: InstanceType<typeof TransactionCreateManyInvoiceInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutInvoiceInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutInvoiceInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutInvoiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutProofImageNestedInput {
    create?: Array<TransactionCreateWithoutProofImageInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutProofImageInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutProofImageInput>;
    createMany?: InstanceType<typeof TransactionCreateManyProofImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutProofImageInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutProofImageInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutProofImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutToAccountNestedInput {
    create?: Array<TransactionCreateWithoutToAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutToAccountInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutToAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyToAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutToAccountInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutToAccountInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUncheckedUpdateManyWithoutToAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateWithoutFromAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Payment?: InstanceType<typeof PaymentUncheckedUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUncheckedUpdateWithoutInvoiceInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Payment?: InstanceType<typeof PaymentUncheckedUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUncheckedUpdateWithoutPaymentInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUncheckedUpdateWithoutProofImageInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Payment?: InstanceType<typeof PaymentUncheckedUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUncheckedUpdateWithoutToAccountInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Payment?: InstanceType<typeof PaymentUncheckedUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    proofImageId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    fromAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    toAccountId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    invoiceId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    Payment?: InstanceType<typeof PaymentUncheckedUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpdateManyMutationInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class TransactionUpdateManyWithWhereWithoutFromAccountInput {
    where: InstanceType<typeof TransactionScalarWhereInput>;
    data: InstanceType<typeof TransactionUpdateManyMutationInput>;
}
export declare class TransactionUpdateManyWithWhereWithoutInvoiceInput {
    where: InstanceType<typeof TransactionScalarWhereInput>;
    data: InstanceType<typeof TransactionUpdateManyMutationInput>;
}
export declare class TransactionUpdateManyWithWhereWithoutProofImageInput {
    where: InstanceType<typeof TransactionScalarWhereInput>;
    data: InstanceType<typeof TransactionUpdateManyMutationInput>;
}
export declare class TransactionUpdateManyWithWhereWithoutToAccountInput {
    where: InstanceType<typeof TransactionScalarWhereInput>;
    data: InstanceType<typeof TransactionUpdateManyMutationInput>;
}
export declare class TransactionUpdateManyWithoutFromAccountNestedInput {
    create?: Array<TransactionCreateWithoutFromAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutFromAccountInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutFromAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyFromAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutFromAccountInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutFromAccountInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUpdateManyWithoutInvoiceNestedInput {
    create?: Array<TransactionCreateWithoutInvoiceInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutInvoiceInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutInvoiceInput>;
    createMany?: InstanceType<typeof TransactionCreateManyInvoiceInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutInvoiceInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutInvoiceInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUpdateManyWithoutProofImageNestedInput {
    create?: Array<TransactionCreateWithoutProofImageInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutProofImageInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutProofImageInput>;
    createMany?: InstanceType<typeof TransactionCreateManyProofImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutProofImageInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutProofImageInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUpdateManyWithoutToAccountNestedInput {
    create?: Array<TransactionCreateWithoutToAccountInput>;
    connectOrCreate?: Array<TransactionCreateOrConnectWithoutToAccountInput>;
    upsert?: Array<TransactionUpsertWithWhereUniqueWithoutToAccountInput>;
    createMany?: InstanceType<typeof TransactionCreateManyToAccountInputEnvelope>;
    set?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    disconnect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    delete?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    connect?: Array<Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>>;
    update?: Array<TransactionUpdateWithWhereUniqueWithoutToAccountInput>;
    updateMany?: Array<TransactionUpdateManyWithWhereWithoutToAccountInput>;
    deleteMany?: Array<TransactionScalarWhereInput>;
}
export declare class TransactionUpdateOneRequiredWithoutPaymentNestedInput {
    create?: InstanceType<typeof TransactionCreateWithoutPaymentInput>;
    connectOrCreate?: InstanceType<typeof TransactionCreateOrConnectWithoutPaymentInput>;
    upsert?: InstanceType<typeof TransactionUpsertWithoutPaymentInput>;
    connect?: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof TransactionUpdateToOneWithWhereWithoutPaymentInput>;
}
export declare class TransactionUpdateToOneWithWhereWithoutPaymentInput {
    where?: InstanceType<typeof TransactionWhereInput>;
    data: InstanceType<typeof TransactionUpdateWithoutPaymentInput>;
}
export declare class TransactionUpdateWithWhereUniqueWithoutFromAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TransactionUpdateWithoutFromAccountInput>;
}
export declare class TransactionUpdateWithWhereUniqueWithoutInvoiceInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TransactionUpdateWithoutInvoiceInput>;
}
export declare class TransactionUpdateWithWhereUniqueWithoutProofImageInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TransactionUpdateWithoutProofImageInput>;
}
export declare class TransactionUpdateWithWhereUniqueWithoutToAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    data: InstanceType<typeof TransactionUpdateWithoutToAccountInput>;
}
export declare class TransactionUpdateWithoutFromAccountInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    proofImage?: InstanceType<typeof ImageUpdateOneWithoutTransactionsNestedInput>;
    toAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput>;
    invoice?: InstanceType<typeof InvoiceUpdateOneWithoutTransactionsNestedInput>;
    Payment?: InstanceType<typeof PaymentUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpdateWithoutInvoiceInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    proofImage?: InstanceType<typeof ImageUpdateOneWithoutTransactionsNestedInput>;
    fromAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput>;
    toAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput>;
    Payment?: InstanceType<typeof PaymentUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpdateWithoutPaymentInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    proofImage?: InstanceType<typeof ImageUpdateOneWithoutTransactionsNestedInput>;
    fromAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput>;
    toAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput>;
    invoice?: InstanceType<typeof InvoiceUpdateOneWithoutTransactionsNestedInput>;
}
export declare class TransactionUpdateWithoutProofImageInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    fromAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput>;
    toAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput>;
    invoice?: InstanceType<typeof InvoiceUpdateOneWithoutTransactionsNestedInput>;
    Payment?: InstanceType<typeof PaymentUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpdateWithoutToAccountInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    proofImage?: InstanceType<typeof ImageUpdateOneWithoutTransactionsNestedInput>;
    fromAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput>;
    invoice?: InstanceType<typeof InvoiceUpdateOneWithoutTransactionsNestedInput>;
    Payment?: InstanceType<typeof PaymentUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpdateInput {
    amount?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    uniqueCode?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    status?: InstanceType<typeof EnumTransactionStatusFieldUpdateOperationsInput>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFieldUpdateOperationsInput>;
    paymentId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    proofImage?: InstanceType<typeof ImageUpdateOneWithoutTransactionsNestedInput>;
    fromAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionOriginsNestedInput>;
    toAccount?: InstanceType<typeof AccountUpdateOneRequiredWithoutTransactionDestinationNestedInput>;
    invoice?: InstanceType<typeof InvoiceUpdateOneWithoutTransactionsNestedInput>;
    Payment?: InstanceType<typeof PaymentUpdateOneWithoutTransactionNestedInput>;
}
export declare class TransactionUpsertWithWhereUniqueWithoutFromAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TransactionUpdateWithoutFromAccountInput>;
    create: InstanceType<typeof TransactionCreateWithoutFromAccountInput>;
}
export declare class TransactionUpsertWithWhereUniqueWithoutInvoiceInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TransactionUpdateWithoutInvoiceInput>;
    create: InstanceType<typeof TransactionCreateWithoutInvoiceInput>;
}
export declare class TransactionUpsertWithWhereUniqueWithoutProofImageInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TransactionUpdateWithoutProofImageInput>;
    create: InstanceType<typeof TransactionCreateWithoutProofImageInput>;
}
export declare class TransactionUpsertWithWhereUniqueWithoutToAccountInput {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    update: InstanceType<typeof TransactionUpdateWithoutToAccountInput>;
    create: InstanceType<typeof TransactionCreateWithoutToAccountInput>;
}
export declare class TransactionUpsertWithoutPaymentInput {
    update: InstanceType<typeof TransactionUpdateWithoutPaymentInput>;
    create: InstanceType<typeof TransactionCreateWithoutPaymentInput>;
    where?: InstanceType<typeof TransactionWhereInput>;
}
export declare class TransactionWhereUniqueInput {
    id?: number;
    AND?: Array<TransactionWhereInput>;
    OR?: Array<TransactionWhereInput>;
    NOT?: Array<TransactionWhereInput>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    proofImageId?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumTransactionStatusFilter>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFilter>;
    fromAccountId?: InstanceType<typeof IntFilter>;
    toAccountId?: InstanceType<typeof IntFilter>;
    invoiceId?: InstanceType<typeof IntNullableFilter>;
    paymentId?: InstanceType<typeof IntNullableFilter>;
    proofImage?: InstanceType<typeof ImageNullableRelationFilter>;
    fromAccount?: InstanceType<typeof AccountRelationFilter>;
    toAccount?: InstanceType<typeof AccountRelationFilter>;
    invoice?: InstanceType<typeof InvoiceNullableRelationFilter>;
    Payment?: InstanceType<typeof PaymentNullableRelationFilter>;
}
export declare class TransactionWhereInput {
    AND?: Array<TransactionWhereInput>;
    OR?: Array<TransactionWhereInput>;
    NOT?: Array<TransactionWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    amount?: InstanceType<typeof FloatFilter>;
    uniqueCode?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    proofImageId?: InstanceType<typeof StringNullableFilter>;
    status?: InstanceType<typeof EnumTransactionStatusFilter>;
    transactionCategory?: InstanceType<typeof EnumTransactionCategoryFilter>;
    fromAccountId?: InstanceType<typeof IntFilter>;
    toAccountId?: InstanceType<typeof IntFilter>;
    invoiceId?: InstanceType<typeof IntNullableFilter>;
    paymentId?: InstanceType<typeof IntNullableFilter>;
    proofImage?: InstanceType<typeof ImageNullableRelationFilter>;
    fromAccount?: InstanceType<typeof AccountRelationFilter>;
    toAccount?: InstanceType<typeof AccountRelationFilter>;
    invoice?: InstanceType<typeof InvoiceNullableRelationFilter>;
    Payment?: InstanceType<typeof PaymentNullableRelationFilter>;
}
export declare class Transaction {
    id: number;
    amount: number;
    uniqueCode: number | null;
    createdAt: Date;
    proofImageId: string | null;
    status: keyof typeof TransactionStatus;
    transactionCategory: keyof typeof TransactionCategory;
    fromAccountId: number;
    toAccountId: number;
    invoiceId: number | null;
    paymentId: number | null;
    proofImage?: InstanceType<typeof Image> | null;
    fromAccount?: InstanceType<typeof Account>;
    toAccount?: InstanceType<typeof Account>;
    invoice?: InstanceType<typeof Invoice> | null;
    Payment?: InstanceType<typeof Payment> | null;
}
export declare class UpdateManyTransactionArgs {
    data: InstanceType<typeof TransactionUpdateManyMutationInput>;
    where?: InstanceType<typeof TransactionWhereInput>;
}
export declare class UpdateOneTransactionArgs {
    data: InstanceType<typeof TransactionUpdateInput>;
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
}
export declare class UpsertOneTransactionArgs {
    where: Prisma.AtLeast<TransactionWhereUniqueInput, 'id'>;
    create: InstanceType<typeof TransactionCreateInput>;
    update: InstanceType<typeof TransactionUpdateInput>;
}
export declare class AggregateUnitOfMeasure {
    _count?: InstanceType<typeof UnitOfMeasureCountAggregate>;
    _avg?: InstanceType<typeof UnitOfMeasureAvgAggregate>;
    _sum?: InstanceType<typeof UnitOfMeasureSumAggregate>;
    _min?: InstanceType<typeof UnitOfMeasureMinAggregate>;
    _max?: InstanceType<typeof UnitOfMeasureMaxAggregate>;
}
export declare class CreateManyUnitOfMeasureArgs {
    data: Array<UnitOfMeasureCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneUnitOfMeasureArgs {
    data: InstanceType<typeof UnitOfMeasureCreateInput>;
}
export declare class DeleteManyUnitOfMeasureArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class DeleteOneUnitOfMeasureArgs {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class FindFirstUnitOfMeasureOrThrowArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    orderBy?: Array<UnitOfMeasureOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UnitOfMeasureScalarFieldEnum>;
}
export declare class FindFirstUnitOfMeasureArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    orderBy?: Array<UnitOfMeasureOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UnitOfMeasureScalarFieldEnum>;
}
export declare class FindManyUnitOfMeasureArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    orderBy?: Array<UnitOfMeasureOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UnitOfMeasureScalarFieldEnum>;
}
export declare class FindUniqueUnitOfMeasureOrThrowArgs {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class FindUniqueUnitOfMeasureArgs {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class UnitOfMeasureAggregateArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    orderBy?: Array<UnitOfMeasureOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof UnitOfMeasureCountAggregateInput>;
    _avg?: InstanceType<typeof UnitOfMeasureAvgAggregateInput>;
    _sum?: InstanceType<typeof UnitOfMeasureSumAggregateInput>;
    _min?: InstanceType<typeof UnitOfMeasureMinAggregateInput>;
    _max?: InstanceType<typeof UnitOfMeasureMaxAggregateInput>;
}
export declare class UnitOfMeasureAvgAggregateInput {
    id?: true;
    conversion?: true;
}
export declare class UnitOfMeasureAvgAggregate {
    id?: number;
    conversion?: number;
}
export declare class UnitOfMeasureAvgOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    conversion?: keyof typeof SortOrder;
}
export declare class UnitOfMeasureCountAggregateInput {
    id?: true;
    name?: true;
    abbreviation?: true;
    conversion?: true;
    createdAt?: true;
    updatedAt?: true;
    _all?: true;
}
export declare class UnitOfMeasureCountAggregate {
    id: number;
    name: number;
    abbreviation: number;
    conversion: number;
    createdAt: number;
    updatedAt: number;
    _all: number;
}
export declare class UnitOfMeasureCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    abbreviation?: keyof typeof SortOrder;
    conversion?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class UnitOfMeasureCount {
    laundryItems?: number;
    platformItems?: number;
    machine?: number;
}
export declare class UnitOfMeasureCreateManyInput {
    id?: number;
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
}
export declare class UnitOfMeasureCreateNestedOneWithoutLaundryItemsInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutLaundryItemsInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutLaundryItemsInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class UnitOfMeasureCreateNestedOneWithoutMachineInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutMachineInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutMachineInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class UnitOfMeasureCreateNestedOneWithoutPlatformItemsInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutPlatformItemsInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutPlatformItemsInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class UnitOfMeasureCreateOrConnectWithoutLaundryItemsInput {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutLaundryItemsInput>;
}
export declare class UnitOfMeasureCreateOrConnectWithoutMachineInput {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutMachineInput>;
}
export declare class UnitOfMeasureCreateOrConnectWithoutPlatformItemsInput {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutPlatformItemsInput>;
}
export declare class UnitOfMeasureCreateWithoutLaundryItemsInput {
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    platformItems?: InstanceType<typeof PlatformItemCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureCreateWithoutMachineInput {
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemCreateNestedManyWithoutUnitOfMeasureInput>;
    platformItems?: InstanceType<typeof PlatformItemCreateNestedManyWithoutUnitOfMeasureInput>;
}
export declare class UnitOfMeasureCreateWithoutPlatformItemsInput {
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureCreateInput {
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemCreateNestedManyWithoutUnitOfMeasureInput>;
    platformItems?: InstanceType<typeof PlatformItemCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureGroupByArgs {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    orderBy?: Array<UnitOfMeasureOrderByWithAggregationInput>;
    by: Array<keyof typeof UnitOfMeasureScalarFieldEnum>;
    having?: InstanceType<typeof UnitOfMeasureScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof UnitOfMeasureCountAggregateInput>;
    _avg?: InstanceType<typeof UnitOfMeasureAvgAggregateInput>;
    _sum?: InstanceType<typeof UnitOfMeasureSumAggregateInput>;
    _min?: InstanceType<typeof UnitOfMeasureMinAggregateInput>;
    _max?: InstanceType<typeof UnitOfMeasureMaxAggregateInput>;
}
export declare class UnitOfMeasureGroupBy {
    id: number;
    name: string;
    abbreviation?: string;
    conversion: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    _count?: InstanceType<typeof UnitOfMeasureCountAggregate>;
    _avg?: InstanceType<typeof UnitOfMeasureAvgAggregate>;
    _sum?: InstanceType<typeof UnitOfMeasureSumAggregate>;
    _min?: InstanceType<typeof UnitOfMeasureMinAggregate>;
    _max?: InstanceType<typeof UnitOfMeasureMaxAggregate>;
}
export declare class UnitOfMeasureMaxAggregateInput {
    id?: true;
    name?: true;
    abbreviation?: true;
    conversion?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class UnitOfMeasureMaxAggregate {
    id?: number;
    name?: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class UnitOfMeasureMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    abbreviation?: keyof typeof SortOrder;
    conversion?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class UnitOfMeasureMinAggregateInput {
    id?: true;
    name?: true;
    abbreviation?: true;
    conversion?: true;
    createdAt?: true;
    updatedAt?: true;
}
export declare class UnitOfMeasureMinAggregate {
    id?: number;
    name?: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
}
export declare class UnitOfMeasureMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    abbreviation?: keyof typeof SortOrder;
    conversion?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
}
export declare class UnitOfMeasureOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    abbreviation?: InstanceType<typeof SortOrderInput>;
    conversion?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    _count?: InstanceType<typeof UnitOfMeasureCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof UnitOfMeasureAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof UnitOfMeasureMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof UnitOfMeasureMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof UnitOfMeasureSumOrderByAggregateInput>;
}
export declare class UnitOfMeasureOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    abbreviation?: InstanceType<typeof SortOrderInput>;
    conversion?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    laundryItems?: InstanceType<typeof LaundryItemOrderByRelationAggregateInput>;
    platformItems?: InstanceType<typeof PlatformItemOrderByRelationAggregateInput>;
    machine?: InstanceType<typeof MachineOrderByRelationAggregateInput>;
}
export declare class UnitOfMeasureRelationFilter {
    is?: InstanceType<typeof UnitOfMeasureWhereInput>;
    isNot?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class UnitOfMeasureScalarWhereWithAggregatesInput {
    AND?: Array<UnitOfMeasureScalarWhereWithAggregatesInput>;
    OR?: Array<UnitOfMeasureScalarWhereWithAggregatesInput>;
    NOT?: Array<UnitOfMeasureScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof IntWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    abbreviation?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    conversion?: InstanceType<typeof FloatWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
}
export declare class UnitOfMeasureSumAggregateInput {
    id?: true;
    conversion?: true;
}
export declare class UnitOfMeasureSumAggregate {
    id?: number;
    conversion?: number;
}
export declare class UnitOfMeasureSumOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    conversion?: keyof typeof SortOrder;
}
export declare class UnitOfMeasureUncheckedCreateWithoutLaundryItemsInput {
    id?: number;
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    platformItems?: InstanceType<typeof PlatformItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureUncheckedCreateWithoutMachineInput {
    id?: number;
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
    platformItems?: InstanceType<typeof PlatformItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
}
export declare class UnitOfMeasureUncheckedCreateWithoutPlatformItemsInput {
    id?: number;
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureUncheckedCreateInput {
    id?: number;
    name: string;
    abbreviation?: string;
    conversion?: number;
    createdAt?: Date | string;
    updatedAt: Date | string;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
    platformItems?: InstanceType<typeof PlatformItemUncheckedCreateNestedManyWithoutUnitOfMeasureInput>;
    machine?: InstanceType<typeof MachineUncheckedCreateNestedManyWithoutCapacityUnitInput>;
}
export declare class UnitOfMeasureUncheckedUpdateManyInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class UnitOfMeasureUncheckedUpdateWithoutLaundryItemsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItems?: InstanceType<typeof PlatformItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUncheckedUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUncheckedUpdateWithoutMachineInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
    platformItems?: InstanceType<typeof PlatformItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
}
export declare class UnitOfMeasureUncheckedUpdateWithoutPlatformItemsInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUncheckedUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUncheckedUpdateInput {
    id?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
    platformItems?: InstanceType<typeof PlatformItemUncheckedUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUncheckedUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUpdateManyMutationInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
}
export declare class UnitOfMeasureUpdateOneRequiredWithoutLaundryItemsNestedInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutLaundryItemsInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutLaundryItemsInput>;
    upsert?: InstanceType<typeof UnitOfMeasureUpsertWithoutLaundryItemsInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof UnitOfMeasureUpdateToOneWithWhereWithoutLaundryItemsInput>;
}
export declare class UnitOfMeasureUpdateOneRequiredWithoutMachineNestedInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutMachineInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutMachineInput>;
    upsert?: InstanceType<typeof UnitOfMeasureUpsertWithoutMachineInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof UnitOfMeasureUpdateToOneWithWhereWithoutMachineInput>;
}
export declare class UnitOfMeasureUpdateOneRequiredWithoutPlatformItemsNestedInput {
    create?: InstanceType<typeof UnitOfMeasureCreateWithoutPlatformItemsInput>;
    connectOrCreate?: InstanceType<typeof UnitOfMeasureCreateOrConnectWithoutPlatformItemsInput>;
    upsert?: InstanceType<typeof UnitOfMeasureUpsertWithoutPlatformItemsInput>;
    connect?: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    update?: InstanceType<typeof UnitOfMeasureUpdateToOneWithWhereWithoutPlatformItemsInput>;
}
export declare class UnitOfMeasureUpdateToOneWithWhereWithoutLaundryItemsInput {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    data: InstanceType<typeof UnitOfMeasureUpdateWithoutLaundryItemsInput>;
}
export declare class UnitOfMeasureUpdateToOneWithWhereWithoutMachineInput {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    data: InstanceType<typeof UnitOfMeasureUpdateWithoutMachineInput>;
}
export declare class UnitOfMeasureUpdateToOneWithWhereWithoutPlatformItemsInput {
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
    data: InstanceType<typeof UnitOfMeasureUpdateWithoutPlatformItemsInput>;
}
export declare class UnitOfMeasureUpdateWithoutLaundryItemsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    platformItems?: InstanceType<typeof PlatformItemUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUpdateWithoutMachineInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUpdateManyWithoutUnitOfMeasureNestedInput>;
    platformItems?: InstanceType<typeof PlatformItemUpdateManyWithoutUnitOfMeasureNestedInput>;
}
export declare class UnitOfMeasureUpdateWithoutPlatformItemsInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUpdateInput {
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    abbreviation?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    conversion?: InstanceType<typeof FloatFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    laundryItems?: InstanceType<typeof LaundryItemUpdateManyWithoutUnitOfMeasureNestedInput>;
    platformItems?: InstanceType<typeof PlatformItemUpdateManyWithoutUnitOfMeasureNestedInput>;
    machine?: InstanceType<typeof MachineUpdateManyWithoutCapacityUnitNestedInput>;
}
export declare class UnitOfMeasureUpsertWithoutLaundryItemsInput {
    update: InstanceType<typeof UnitOfMeasureUpdateWithoutLaundryItemsInput>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutLaundryItemsInput>;
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class UnitOfMeasureUpsertWithoutMachineInput {
    update: InstanceType<typeof UnitOfMeasureUpdateWithoutMachineInput>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutMachineInput>;
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class UnitOfMeasureUpsertWithoutPlatformItemsInput {
    update: InstanceType<typeof UnitOfMeasureUpdateWithoutPlatformItemsInput>;
    create: InstanceType<typeof UnitOfMeasureCreateWithoutPlatformItemsInput>;
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class UnitOfMeasureWhereUniqueInput {
    id?: number;
    AND?: Array<UnitOfMeasureWhereInput>;
    OR?: Array<UnitOfMeasureWhereInput>;
    NOT?: Array<UnitOfMeasureWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    abbreviation?: InstanceType<typeof StringNullableFilter>;
    conversion?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    laundryItems?: InstanceType<typeof LaundryItemListRelationFilter>;
    platformItems?: InstanceType<typeof PlatformItemListRelationFilter>;
    machine?: InstanceType<typeof MachineListRelationFilter>;
}
export declare class UnitOfMeasureWhereInput {
    AND?: Array<UnitOfMeasureWhereInput>;
    OR?: Array<UnitOfMeasureWhereInput>;
    NOT?: Array<UnitOfMeasureWhereInput>;
    id?: InstanceType<typeof IntFilter>;
    name?: InstanceType<typeof StringFilter>;
    abbreviation?: InstanceType<typeof StringNullableFilter>;
    conversion?: InstanceType<typeof FloatFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    laundryItems?: InstanceType<typeof LaundryItemListRelationFilter>;
    platformItems?: InstanceType<typeof PlatformItemListRelationFilter>;
    machine?: InstanceType<typeof MachineListRelationFilter>;
}
export declare class UnitOfMeasure {
    id: number;
    name: string;
    abbreviation: string | null;
    conversion: number;
    createdAt: Date;
    updatedAt: Date;
    laundryItems?: Array<LaundryItem>;
    platformItems?: Array<PlatformItem>;
    machine?: Array<Machine>;
    _count?: InstanceType<typeof UnitOfMeasureCount>;
}
export declare class UpdateManyUnitOfMeasureArgs {
    data: InstanceType<typeof UnitOfMeasureUpdateManyMutationInput>;
    where?: InstanceType<typeof UnitOfMeasureWhereInput>;
}
export declare class UpdateOneUnitOfMeasureArgs {
    data: InstanceType<typeof UnitOfMeasureUpdateInput>;
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
}
export declare class UpsertOneUnitOfMeasureArgs {
    where: Prisma.AtLeast<UnitOfMeasureWhereUniqueInput, 'id'>;
    create: InstanceType<typeof UnitOfMeasureCreateInput>;
    update: InstanceType<typeof UnitOfMeasureUpdateInput>;
}
export declare class AggregateUser {
    _count?: InstanceType<typeof UserCountAggregate>;
    _avg?: InstanceType<typeof UserAvgAggregate>;
    _sum?: InstanceType<typeof UserSumAggregate>;
    _min?: InstanceType<typeof UserMinAggregate>;
    _max?: InstanceType<typeof UserMaxAggregate>;
}
export declare class CreateManyUserArgs {
    data: Array<UserCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneUserArgs {
    data: InstanceType<typeof UserCreateInput>;
}
export declare class DeleteManyUserArgs {
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class DeleteOneUserArgs {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class FindFirstUserOrThrowArgs {
    where?: InstanceType<typeof UserWhereInput>;
    orderBy?: Array<UserOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UserScalarFieldEnum>;
}
export declare class FindFirstUserArgs {
    where?: InstanceType<typeof UserWhereInput>;
    orderBy?: Array<UserOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UserScalarFieldEnum>;
}
export declare class FindManyUserArgs {
    where?: InstanceType<typeof UserWhereInput>;
    orderBy?: Array<UserOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof UserScalarFieldEnum>;
}
export declare class FindUniqueUserOrThrowArgs {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class FindUniqueUserArgs {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UpdateManyUserArgs {
    data: InstanceType<typeof UserUpdateManyMutationInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UpdateOneUserArgs {
    data: InstanceType<typeof UserUpdateInput>;
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UpsertOneUserArgs {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateInput>;
    update: InstanceType<typeof UserUpdateInput>;
}
export declare class UserAggregateArgs {
    where?: InstanceType<typeof UserWhereInput>;
    orderBy?: Array<UserOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof UserCountAggregateInput>;
    _avg?: InstanceType<typeof UserAvgAggregateInput>;
    _sum?: InstanceType<typeof UserSumAggregateInput>;
    _min?: InstanceType<typeof UserMinAggregateInput>;
    _max?: InstanceType<typeof UserMaxAggregateInput>;
}
export declare class UserAvgAggregateInput {
    phoneCountryCodeId?: true;
    chatRoomId?: true;
}
export declare class UserAvgAggregate {
    phoneCountryCodeId?: number;
    chatRoomId?: number;
}
export declare class UserAvgOrderByAggregateInput {
    phoneCountryCodeId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
}
export declare class UserCountAggregateInput {
    id?: true;
    fullName?: true;
    username?: true;
    email?: true;
    emailVerifiedAt?: true;
    password?: true;
    whatsapp?: true;
    whatsappVerifiedAt?: true;
    birthDate?: true;
    createdAt?: true;
    updatedAt?: true;
    deletedAt?: true;
    phoneCountryCodeId?: true;
    role?: true;
    gender?: true;
    avatarImageId?: true;
    customerInfoId?: true;
    employeeInfoId?: true;
    ownerInfoId?: true;
    language?: true;
    theme?: true;
    chatRoomId?: true;
    _all?: true;
}
export declare class UserCountAggregate {
    id: number;
    fullName: number;
    username: number;
    email: number;
    emailVerifiedAt: number;
    password: number;
    whatsapp: number;
    whatsappVerifiedAt: number;
    birthDate: number;
    createdAt: number;
    updatedAt: number;
    deletedAt: number;
    phoneCountryCodeId: number;
    role: number;
    gender: number;
    avatarImageId: number;
    customerInfoId: number;
    employeeInfoId: number;
    ownerInfoId: number;
    language: number;
    theme: number;
    chatRoomId: number;
    _all: number;
}
export declare class UserCountOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    fullName?: keyof typeof SortOrder;
    username?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    emailVerifiedAt?: keyof typeof SortOrder;
    password?: keyof typeof SortOrder;
    whatsapp?: keyof typeof SortOrder;
    whatsappVerifiedAt?: keyof typeof SortOrder;
    birthDate?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deletedAt?: keyof typeof SortOrder;
    phoneCountryCodeId?: keyof typeof SortOrder;
    role?: keyof typeof SortOrder;
    gender?: keyof typeof SortOrder;
    avatarImageId?: keyof typeof SortOrder;
    customerInfoId?: keyof typeof SortOrder;
    employeeInfoId?: keyof typeof SortOrder;
    ownerInfoId?: keyof typeof SortOrder;
    language?: keyof typeof SortOrder;
    theme?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
}
export declare class UserCount {
    accounts?: number;
    addresses?: number;
    sessions?: number;
    notifications?: number;
    changedStatuses?: number;
    messageSender?: number;
    reviewLikes?: number;
    reviewDislikes?: number;
    termOrFaqReads?: number;
    accountSetting?: number;
    messageReads?: number;
    messageLikes?: number;
}
export declare class UserCreateManyAvatarImageInputEnvelope {
    data: Array<UserCreateManyAvatarImageInput>;
    skipDuplicates?: boolean;
}
export declare class UserCreateManyAvatarImageInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
}
export declare class UserCreateManyChatRoomInputEnvelope {
    data: Array<UserCreateManyChatRoomInput>;
    skipDuplicates?: boolean;
}
export declare class UserCreateManyChatRoomInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
}
export declare class UserCreateManyPhoneCountryCodeInputEnvelope {
    data: Array<UserCreateManyPhoneCountryCodeInput>;
    skipDuplicates?: boolean;
}
export declare class UserCreateManyPhoneCountryCodeInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
}
export declare class UserCreateManyInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
}
export declare class UserCreateNestedManyWithoutAvatarImageInput {
    create?: Array<UserCreateWithoutAvatarImageInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutAvatarImageInput>;
    createMany?: InstanceType<typeof UserCreateManyAvatarImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutChatRoomInput {
    create?: Array<UserCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutChatRoomInput>;
    createMany?: InstanceType<typeof UserCreateManyChatRoomInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutMessageLikesInput {
    create?: Array<UserCreateWithoutMessageLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageLikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutMessageReadsInput {
    create?: Array<UserCreateWithoutMessageReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageReadsInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutPhoneCountryCodeInput {
    create?: Array<UserCreateWithoutPhoneCountryCodeInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutPhoneCountryCodeInput>;
    createMany?: InstanceType<typeof UserCreateManyPhoneCountryCodeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutReviewDislikesInput {
    create?: Array<UserCreateWithoutReviewDislikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewDislikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutReviewLikesInput {
    create?: Array<UserCreateWithoutReviewLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewLikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedManyWithoutTermOrFaqReadsInput {
    create?: Array<UserCreateWithoutTermOrFaqReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutTermOrFaqReadsInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserCreateNestedOneWithoutAccountSettingInput {
    create?: InstanceType<typeof UserCreateWithoutAccountSettingInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAccountSettingInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutAccountsInput {
    create?: InstanceType<typeof UserCreateWithoutAccountsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAccountsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutAddressesInput {
    create?: InstanceType<typeof UserCreateWithoutAddressesInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAddressesInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutChangedStatusesInput {
    create?: InstanceType<typeof UserCreateWithoutChangedStatusesInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutChangedStatusesInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutCustomerInfoInput {
    create?: InstanceType<typeof UserCreateWithoutCustomerInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutCustomerInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutEmployeeInfoInput {
    create?: InstanceType<typeof UserCreateWithoutEmployeeInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutEmployeeInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutMessageSenderInput {
    create?: InstanceType<typeof UserCreateWithoutMessageSenderInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutMessageSenderInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutNotificationsInput {
    create?: InstanceType<typeof UserCreateWithoutNotificationsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutNotificationsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutOwnerInfoInput {
    create?: InstanceType<typeof UserCreateWithoutOwnerInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutOwnerInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateNestedOneWithoutSessionsInput {
    create?: InstanceType<typeof UserCreateWithoutSessionsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutSessionsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
}
export declare class UserCreateOrConnectWithoutAccountSettingInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutAccountSettingInput>;
}
export declare class UserCreateOrConnectWithoutAccountsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutAccountsInput>;
}
export declare class UserCreateOrConnectWithoutAddressesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutAddressesInput>;
}
export declare class UserCreateOrConnectWithoutAvatarImageInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutAvatarImageInput>;
}
export declare class UserCreateOrConnectWithoutChangedStatusesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutChangedStatusesInput>;
}
export declare class UserCreateOrConnectWithoutChatRoomInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutChatRoomInput>;
}
export declare class UserCreateOrConnectWithoutCustomerInfoInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutCustomerInfoInput>;
}
export declare class UserCreateOrConnectWithoutEmployeeInfoInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutEmployeeInfoInput>;
}
export declare class UserCreateOrConnectWithoutMessageLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutMessageLikesInput>;
}
export declare class UserCreateOrConnectWithoutMessageReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutMessageReadsInput>;
}
export declare class UserCreateOrConnectWithoutMessageSenderInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutMessageSenderInput>;
}
export declare class UserCreateOrConnectWithoutNotificationsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutNotificationsInput>;
}
export declare class UserCreateOrConnectWithoutOwnerInfoInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutOwnerInfoInput>;
}
export declare class UserCreateOrConnectWithoutPhoneCountryCodeInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutPhoneCountryCodeInput>;
}
export declare class UserCreateOrConnectWithoutReviewDislikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutReviewDislikesInput>;
}
export declare class UserCreateOrConnectWithoutReviewLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutReviewLikesInput>;
}
export declare class UserCreateOrConnectWithoutSessionsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutSessionsInput>;
}
export declare class UserCreateOrConnectWithoutTermOrFaqReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    create: InstanceType<typeof UserCreateWithoutTermOrFaqReadsInput>;
}
export declare class UserCreateWithoutAccountSettingInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutAccountsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutAddressesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutAvatarImageInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutChangedStatusesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutChatRoomInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutCustomerInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutEmployeeInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutMessageLikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
}
export declare class UserCreateWithoutMessageReadsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutMessageSenderInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutNotificationsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutOwnerInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutPhoneCountryCodeInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutReviewDislikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutReviewLikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutSessionsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateWithoutTermOrFaqReadsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserCreateInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    PhoneCountryCode: InstanceType<typeof PhoneCountryCodeCreateNestedOneWithoutUserInput>;
    avatarImage: InstanceType<typeof ImageCreateNestedOneWithoutUsersInput>;
    customerInfo?: InstanceType<typeof CustomerCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerCreateNestedOneWithoutUserInput>;
    chatRoom?: InstanceType<typeof ChatRoomCreateNestedOneWithoutParticipantsInput>;
    accounts?: InstanceType<typeof AccountCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageCreateNestedManyWithoutLikesInput>;
}
export declare class UserGroupByArgs {
    where?: InstanceType<typeof UserWhereInput>;
    orderBy?: Array<UserOrderByWithAggregationInput>;
    by: Array<keyof typeof UserScalarFieldEnum>;
    having?: InstanceType<typeof UserScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof UserCountAggregateInput>;
    _avg?: InstanceType<typeof UserAvgAggregateInput>;
    _sum?: InstanceType<typeof UserSumAggregateInput>;
    _min?: InstanceType<typeof UserMinAggregateInput>;
    _max?: InstanceType<typeof UserMaxAggregateInput>;
}
export declare class UserGroupBy {
    id: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt: Date | string;
    updatedAt: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language: keyof typeof Language;
    theme: keyof typeof Theme;
    chatRoomId?: number;
    _count?: InstanceType<typeof UserCountAggregate>;
    _avg?: InstanceType<typeof UserAvgAggregate>;
    _sum?: InstanceType<typeof UserSumAggregate>;
    _min?: InstanceType<typeof UserMinAggregate>;
    _max?: InstanceType<typeof UserMaxAggregate>;
}
export declare class UserListRelationFilter {
    every?: InstanceType<typeof UserWhereInput>;
    some?: InstanceType<typeof UserWhereInput>;
    none?: InstanceType<typeof UserWhereInput>;
}
export declare class UserMaxAggregateInput {
    id?: true;
    fullName?: true;
    username?: true;
    email?: true;
    emailVerifiedAt?: true;
    password?: true;
    whatsapp?: true;
    whatsappVerifiedAt?: true;
    birthDate?: true;
    createdAt?: true;
    updatedAt?: true;
    deletedAt?: true;
    phoneCountryCodeId?: true;
    role?: true;
    gender?: true;
    avatarImageId?: true;
    customerInfoId?: true;
    employeeInfoId?: true;
    ownerInfoId?: true;
    language?: true;
    theme?: true;
    chatRoomId?: true;
}
export declare class UserMaxAggregate {
    id?: string;
    fullName?: string;
    username?: string;
    email?: string;
    emailVerifiedAt?: Date | string;
    password?: string;
    whatsapp?: string;
    whatsappVerifiedAt?: Date | string;
    birthDate?: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId?: number;
    role?: keyof typeof UserRole;
    gender?: keyof typeof Gender;
    avatarImageId?: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
}
export declare class UserMaxOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    fullName?: keyof typeof SortOrder;
    username?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    emailVerifiedAt?: keyof typeof SortOrder;
    password?: keyof typeof SortOrder;
    whatsapp?: keyof typeof SortOrder;
    whatsappVerifiedAt?: keyof typeof SortOrder;
    birthDate?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deletedAt?: keyof typeof SortOrder;
    phoneCountryCodeId?: keyof typeof SortOrder;
    role?: keyof typeof SortOrder;
    gender?: keyof typeof SortOrder;
    avatarImageId?: keyof typeof SortOrder;
    customerInfoId?: keyof typeof SortOrder;
    employeeInfoId?: keyof typeof SortOrder;
    ownerInfoId?: keyof typeof SortOrder;
    language?: keyof typeof SortOrder;
    theme?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
}
export declare class UserMinAggregateInput {
    id?: true;
    fullName?: true;
    username?: true;
    email?: true;
    emailVerifiedAt?: true;
    password?: true;
    whatsapp?: true;
    whatsappVerifiedAt?: true;
    birthDate?: true;
    createdAt?: true;
    updatedAt?: true;
    deletedAt?: true;
    phoneCountryCodeId?: true;
    role?: true;
    gender?: true;
    avatarImageId?: true;
    customerInfoId?: true;
    employeeInfoId?: true;
    ownerInfoId?: true;
    language?: true;
    theme?: true;
    chatRoomId?: true;
}
export declare class UserMinAggregate {
    id?: string;
    fullName?: string;
    username?: string;
    email?: string;
    emailVerifiedAt?: Date | string;
    password?: string;
    whatsapp?: string;
    whatsappVerifiedAt?: Date | string;
    birthDate?: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId?: number;
    role?: keyof typeof UserRole;
    gender?: keyof typeof Gender;
    avatarImageId?: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
}
export declare class UserMinOrderByAggregateInput {
    id?: keyof typeof SortOrder;
    fullName?: keyof typeof SortOrder;
    username?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    emailVerifiedAt?: keyof typeof SortOrder;
    password?: keyof typeof SortOrder;
    whatsapp?: keyof typeof SortOrder;
    whatsappVerifiedAt?: keyof typeof SortOrder;
    birthDate?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deletedAt?: keyof typeof SortOrder;
    phoneCountryCodeId?: keyof typeof SortOrder;
    role?: keyof typeof SortOrder;
    gender?: keyof typeof SortOrder;
    avatarImageId?: keyof typeof SortOrder;
    customerInfoId?: keyof typeof SortOrder;
    employeeInfoId?: keyof typeof SortOrder;
    ownerInfoId?: keyof typeof SortOrder;
    language?: keyof typeof SortOrder;
    theme?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
}
export declare class UserNullableRelationFilter {
    is?: InstanceType<typeof UserWhereInput>;
    isNot?: InstanceType<typeof UserWhereInput>;
}
export declare class UserOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class UserOrderByWithAggregationInput {
    id?: keyof typeof SortOrder;
    fullName?: keyof typeof SortOrder;
    username?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    emailVerifiedAt?: InstanceType<typeof SortOrderInput>;
    password?: keyof typeof SortOrder;
    whatsapp?: keyof typeof SortOrder;
    whatsappVerifiedAt?: InstanceType<typeof SortOrderInput>;
    birthDate?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deletedAt?: InstanceType<typeof SortOrderInput>;
    phoneCountryCodeId?: keyof typeof SortOrder;
    role?: keyof typeof SortOrder;
    gender?: keyof typeof SortOrder;
    avatarImageId?: keyof typeof SortOrder;
    customerInfoId?: InstanceType<typeof SortOrderInput>;
    employeeInfoId?: InstanceType<typeof SortOrderInput>;
    ownerInfoId?: InstanceType<typeof SortOrderInput>;
    language?: keyof typeof SortOrder;
    theme?: keyof typeof SortOrder;
    chatRoomId?: InstanceType<typeof SortOrderInput>;
    _count?: InstanceType<typeof UserCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof UserAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof UserMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof UserMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof UserSumOrderByAggregateInput>;
}
export declare class UserOrderByWithRelationInput {
    id?: keyof typeof SortOrder;
    fullName?: keyof typeof SortOrder;
    username?: keyof typeof SortOrder;
    email?: keyof typeof SortOrder;
    emailVerifiedAt?: InstanceType<typeof SortOrderInput>;
    password?: keyof typeof SortOrder;
    whatsapp?: keyof typeof SortOrder;
    whatsappVerifiedAt?: InstanceType<typeof SortOrderInput>;
    birthDate?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    deletedAt?: InstanceType<typeof SortOrderInput>;
    phoneCountryCodeId?: keyof typeof SortOrder;
    role?: keyof typeof SortOrder;
    gender?: keyof typeof SortOrder;
    avatarImageId?: keyof typeof SortOrder;
    customerInfoId?: InstanceType<typeof SortOrderInput>;
    employeeInfoId?: InstanceType<typeof SortOrderInput>;
    ownerInfoId?: InstanceType<typeof SortOrderInput>;
    language?: keyof typeof SortOrder;
    theme?: keyof typeof SortOrder;
    chatRoomId?: InstanceType<typeof SortOrderInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeOrderByWithRelationInput>;
    avatarImage?: InstanceType<typeof ImageOrderByWithRelationInput>;
    customerInfo?: InstanceType<typeof CustomerOrderByWithRelationInput>;
    employeeInfo?: InstanceType<typeof EmployeeOrderByWithRelationInput>;
    ownerInfo?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    chatRoom?: InstanceType<typeof ChatRoomOrderByWithRelationInput>;
    accounts?: InstanceType<typeof AccountOrderByRelationAggregateInput>;
    addresses?: InstanceType<typeof AddressOrderByRelationAggregateInput>;
    sessions?: InstanceType<typeof SessionOrderByRelationAggregateInput>;
    notifications?: InstanceType<typeof NotificationOrderByRelationAggregateInput>;
    changedStatuses?: InstanceType<typeof OrderStatusOrderByRelationAggregateInput>;
    messageSender?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
    reviewLikes?: InstanceType<typeof ReviewOrderByRelationAggregateInput>;
    reviewDislikes?: InstanceType<typeof ReviewOrderByRelationAggregateInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqOrderByRelationAggregateInput>;
    accountSetting?: InstanceType<typeof AccountSettingOrderByRelationAggregateInput>;
    messageReads?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
    messageLikes?: InstanceType<typeof MessageOrderByRelationAggregateInput>;
}
export declare class UserRelationFilter {
    is?: InstanceType<typeof UserWhereInput>;
    isNot?: InstanceType<typeof UserWhereInput>;
}
export declare class UserScalarWhereWithAggregatesInput {
    AND?: Array<UserScalarWhereWithAggregatesInput>;
    OR?: Array<UserScalarWhereWithAggregatesInput>;
    NOT?: Array<UserScalarWhereWithAggregatesInput>;
    id?: InstanceType<typeof StringWithAggregatesFilter>;
    fullName?: InstanceType<typeof StringWithAggregatesFilter>;
    username?: InstanceType<typeof StringWithAggregatesFilter>;
    email?: InstanceType<typeof StringWithAggregatesFilter>;
    emailVerifiedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    password?: InstanceType<typeof StringWithAggregatesFilter>;
    whatsapp?: InstanceType<typeof StringWithAggregatesFilter>;
    whatsappVerifiedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    birthDate?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    deletedAt?: InstanceType<typeof DateTimeNullableWithAggregatesFilter>;
    phoneCountryCodeId?: InstanceType<typeof IntWithAggregatesFilter>;
    role?: InstanceType<typeof EnumUserRoleWithAggregatesFilter>;
    gender?: InstanceType<typeof EnumGenderWithAggregatesFilter>;
    avatarImageId?: InstanceType<typeof StringWithAggregatesFilter>;
    customerInfoId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    employeeInfoId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    ownerInfoId?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    language?: InstanceType<typeof EnumLanguageWithAggregatesFilter>;
    theme?: InstanceType<typeof EnumThemeWithAggregatesFilter>;
    chatRoomId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
}
export declare class UserScalarWhereInput {
    AND?: Array<UserScalarWhereInput>;
    OR?: Array<UserScalarWhereInput>;
    NOT?: Array<UserScalarWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    fullName?: InstanceType<typeof StringFilter>;
    username?: InstanceType<typeof StringFilter>;
    email?: InstanceType<typeof StringFilter>;
    emailVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    password?: InstanceType<typeof StringFilter>;
    whatsapp?: InstanceType<typeof StringFilter>;
    whatsappVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    birthDate?: InstanceType<typeof DateTimeFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    phoneCountryCodeId?: InstanceType<typeof IntFilter>;
    role?: InstanceType<typeof EnumUserRoleFilter>;
    gender?: InstanceType<typeof EnumGenderFilter>;
    avatarImageId?: InstanceType<typeof StringFilter>;
    customerInfoId?: InstanceType<typeof StringNullableFilter>;
    employeeInfoId?: InstanceType<typeof StringNullableFilter>;
    ownerInfoId?: InstanceType<typeof StringNullableFilter>;
    language?: InstanceType<typeof EnumLanguageFilter>;
    theme?: InstanceType<typeof EnumThemeFilter>;
    chatRoomId?: InstanceType<typeof IntNullableFilter>;
}
export declare class UserSumAggregateInput {
    phoneCountryCodeId?: true;
    chatRoomId?: true;
}
export declare class UserSumAggregate {
    phoneCountryCodeId?: number;
    chatRoomId?: number;
}
export declare class UserSumOrderByAggregateInput {
    phoneCountryCodeId?: keyof typeof SortOrder;
    chatRoomId?: keyof typeof SortOrder;
}
export declare class UserUncheckedCreateNestedManyWithoutAvatarImageInput {
    create?: Array<UserCreateWithoutAvatarImageInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutAvatarImageInput>;
    createMany?: InstanceType<typeof UserCreateManyAvatarImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutChatRoomInput {
    create?: Array<UserCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutChatRoomInput>;
    createMany?: InstanceType<typeof UserCreateManyChatRoomInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutMessageLikesInput {
    create?: Array<UserCreateWithoutMessageLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageLikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutMessageReadsInput {
    create?: Array<UserCreateWithoutMessageReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageReadsInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutPhoneCountryCodeInput {
    create?: Array<UserCreateWithoutPhoneCountryCodeInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutPhoneCountryCodeInput>;
    createMany?: InstanceType<typeof UserCreateManyPhoneCountryCodeInputEnvelope>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutReviewDislikesInput {
    create?: Array<UserCreateWithoutReviewDislikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewDislikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutReviewLikesInput {
    create?: Array<UserCreateWithoutReviewLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewLikesInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateNestedManyWithoutTermOrFaqReadsInput {
    create?: Array<UserCreateWithoutTermOrFaqReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutTermOrFaqReadsInput>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
}
export declare class UserUncheckedCreateWithoutAccountSettingInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutAccountsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutAddressesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutAvatarImageInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutChangedStatusesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutChatRoomInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutCustomerInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutEmployeeInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutMessageLikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
}
export declare class UserUncheckedCreateWithoutMessageReadsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutMessageSenderInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutNotificationsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutOwnerInfoInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutPhoneCountryCodeInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutReviewDislikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutReviewLikesInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutSessionsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateWithoutTermOrFaqReadsInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedCreateInput {
    id?: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt?: Date | string;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt?: Date | string;
    birthDate: Date | string;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    deletedAt?: Date | string;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId?: string;
    employeeInfoId?: string;
    ownerInfoId?: string;
    language?: keyof typeof Language;
    theme?: keyof typeof Theme;
    chatRoomId?: number;
    customerInfo?: InstanceType<typeof CustomerUncheckedCreateNestedOneWithoutUserInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedCreateNestedOneWithoutUserInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedCreateNestedOneWithoutUserInput>;
    accounts?: InstanceType<typeof AccountUncheckedCreateNestedManyWithoutUserInput>;
    addresses?: InstanceType<typeof AddressUncheckedCreateNestedManyWithoutUserInput>;
    sessions?: InstanceType<typeof SessionUncheckedCreateNestedManyWithoutUserInput>;
    notifications?: InstanceType<typeof NotificationUncheckedCreateNestedManyWithoutUserInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedCreateNestedManyWithoutChangedByInput>;
    messageSender?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutSenderInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutLikesInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedCreateNestedManyWithoutDislikesInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutReadByInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedCreateNestedManyWithoutUserInput>;
    messageReads?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutReadsInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedCreateNestedManyWithoutLikesInput>;
}
export declare class UserUncheckedUpdateManyWithoutAvatarImageNestedInput {
    create?: Array<UserCreateWithoutAvatarImageInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutAvatarImageInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutAvatarImageInput>;
    createMany?: InstanceType<typeof UserCreateManyAvatarImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutAvatarImageInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutAvatarImageInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutAvatarImageInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutChatRoomNestedInput {
    create?: Array<UserCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutChatRoomInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutChatRoomInput>;
    createMany?: InstanceType<typeof UserCreateManyChatRoomInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutChatRoomInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutChatRoomInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutChatRoomInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutMessageLikesNestedInput {
    create?: Array<UserCreateWithoutMessageLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageLikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutMessageLikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutMessageLikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutMessageLikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutMessageLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutMessageReadsNestedInput {
    create?: Array<UserCreateWithoutMessageReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageReadsInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutMessageReadsInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutMessageReadsInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutMessageReadsInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutMessageReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutPhoneCountryCodeNestedInput {
    create?: Array<UserCreateWithoutPhoneCountryCodeInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutPhoneCountryCodeInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutPhoneCountryCodeInput>;
    createMany?: InstanceType<typeof UserCreateManyPhoneCountryCodeInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutPhoneCountryCodeInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutPhoneCountryCodeInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutPhoneCountryCodeInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutReviewDislikesNestedInput {
    create?: Array<UserCreateWithoutReviewDislikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewDislikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutReviewDislikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutReviewDislikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutReviewDislikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutReviewDislikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutReviewLikesNestedInput {
    create?: Array<UserCreateWithoutReviewLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewLikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutReviewLikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutReviewLikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutReviewLikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutReviewLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyWithoutTermOrFaqReadsNestedInput {
    create?: Array<UserCreateWithoutTermOrFaqReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutTermOrFaqReadsInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutTermOrFaqReadsInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutTermOrFaqReadsInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutTermOrFaqReadsInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUncheckedUpdateManyWithoutTermOrFaqReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateManyInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
}
export declare class UserUncheckedUpdateWithoutAccountSettingInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutAccountsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutAddressesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutAvatarImageInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutChangedStatusesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutChatRoomInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutCustomerInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutEmployeeInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutMessageLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
}
export declare class UserUncheckedUpdateWithoutMessageReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutMessageSenderInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutNotificationsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutOwnerInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutPhoneCountryCodeInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutReviewDislikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutReviewLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutSessionsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateWithoutTermOrFaqReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUncheckedUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    phoneCountryCodeId?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    avatarImageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    chatRoomId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerInfo?: InstanceType<typeof CustomerUncheckedUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUncheckedUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUncheckedUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUncheckedUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUncheckedUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUncheckedUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUncheckedUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUncheckedUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUncheckedUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUncheckedUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUncheckedUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUncheckedUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUncheckedUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateManyMutationInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
}
export declare class UserUpdateManyWithWhereWithoutAvatarImageInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutChatRoomInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutMessageLikesInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutMessageReadsInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutPhoneCountryCodeInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutReviewDislikesInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutReviewLikesInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithWhereWithoutTermOrFaqReadsInput {
    where: InstanceType<typeof UserScalarWhereInput>;
    data: InstanceType<typeof UserUpdateManyMutationInput>;
}
export declare class UserUpdateManyWithoutAvatarImageNestedInput {
    create?: Array<UserCreateWithoutAvatarImageInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutAvatarImageInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutAvatarImageInput>;
    createMany?: InstanceType<typeof UserCreateManyAvatarImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutAvatarImageInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutAvatarImageInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutChatRoomNestedInput {
    create?: Array<UserCreateWithoutChatRoomInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutChatRoomInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutChatRoomInput>;
    createMany?: InstanceType<typeof UserCreateManyChatRoomInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutChatRoomInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutChatRoomInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutMessageLikesNestedInput {
    create?: Array<UserCreateWithoutMessageLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageLikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutMessageLikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutMessageLikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutMessageLikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutMessageReadsNestedInput {
    create?: Array<UserCreateWithoutMessageReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutMessageReadsInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutMessageReadsInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutMessageReadsInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutMessageReadsInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutPhoneCountryCodeNestedInput {
    create?: Array<UserCreateWithoutPhoneCountryCodeInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutPhoneCountryCodeInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutPhoneCountryCodeInput>;
    createMany?: InstanceType<typeof UserCreateManyPhoneCountryCodeInputEnvelope>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutPhoneCountryCodeInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutPhoneCountryCodeInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutReviewDislikesNestedInput {
    create?: Array<UserCreateWithoutReviewDislikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewDislikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutReviewDislikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutReviewDislikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutReviewDislikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutReviewLikesNestedInput {
    create?: Array<UserCreateWithoutReviewLikesInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutReviewLikesInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutReviewLikesInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutReviewLikesInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutReviewLikesInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateManyWithoutTermOrFaqReadsNestedInput {
    create?: Array<UserCreateWithoutTermOrFaqReadsInput>;
    connectOrCreate?: Array<UserCreateOrConnectWithoutTermOrFaqReadsInput>;
    upsert?: Array<UserUpsertWithWhereUniqueWithoutTermOrFaqReadsInput>;
    set?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    disconnect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    delete?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    connect?: Array<Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>>;
    update?: Array<UserUpdateWithWhereUniqueWithoutTermOrFaqReadsInput>;
    updateMany?: Array<UserUpdateManyWithWhereWithoutTermOrFaqReadsInput>;
    deleteMany?: Array<UserScalarWhereInput>;
}
export declare class UserUpdateOneRequiredWithoutAccountSettingNestedInput {
    create?: InstanceType<typeof UserCreateWithoutAccountSettingInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAccountSettingInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutAccountSettingInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutAccountSettingInput>;
}
export declare class UserUpdateOneRequiredWithoutAccountsNestedInput {
    create?: InstanceType<typeof UserCreateWithoutAccountsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAccountsInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutAccountsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutAccountsInput>;
}
export declare class UserUpdateOneRequiredWithoutChangedStatusesNestedInput {
    create?: InstanceType<typeof UserCreateWithoutChangedStatusesInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutChangedStatusesInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutChangedStatusesInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutChangedStatusesInput>;
}
export declare class UserUpdateOneRequiredWithoutCustomerInfoNestedInput {
    create?: InstanceType<typeof UserCreateWithoutCustomerInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutCustomerInfoInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutCustomerInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutCustomerInfoInput>;
}
export declare class UserUpdateOneRequiredWithoutEmployeeInfoNestedInput {
    create?: InstanceType<typeof UserCreateWithoutEmployeeInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutEmployeeInfoInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutEmployeeInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutEmployeeInfoInput>;
}
export declare class UserUpdateOneRequiredWithoutMessageSenderNestedInput {
    create?: InstanceType<typeof UserCreateWithoutMessageSenderInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutMessageSenderInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutMessageSenderInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutMessageSenderInput>;
}
export declare class UserUpdateOneRequiredWithoutNotificationsNestedInput {
    create?: InstanceType<typeof UserCreateWithoutNotificationsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutNotificationsInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutNotificationsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutNotificationsInput>;
}
export declare class UserUpdateOneRequiredWithoutOwnerInfoNestedInput {
    create?: InstanceType<typeof UserCreateWithoutOwnerInfoInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutOwnerInfoInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutOwnerInfoInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutOwnerInfoInput>;
}
export declare class UserUpdateOneRequiredWithoutSessionsNestedInput {
    create?: InstanceType<typeof UserCreateWithoutSessionsInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutSessionsInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutSessionsInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutSessionsInput>;
}
export declare class UserUpdateOneWithoutAddressesNestedInput {
    create?: InstanceType<typeof UserCreateWithoutAddressesInput>;
    connectOrCreate?: InstanceType<typeof UserCreateOrConnectWithoutAddressesInput>;
    upsert?: InstanceType<typeof UserUpsertWithoutAddressesInput>;
    disconnect?: InstanceType<typeof UserWhereInput>;
    delete?: InstanceType<typeof UserWhereInput>;
    connect?: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update?: InstanceType<typeof UserUpdateToOneWithWhereWithoutAddressesInput>;
}
export declare class UserUpdateToOneWithWhereWithoutAccountSettingInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutAccountSettingInput>;
}
export declare class UserUpdateToOneWithWhereWithoutAccountsInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutAccountsInput>;
}
export declare class UserUpdateToOneWithWhereWithoutAddressesInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutAddressesInput>;
}
export declare class UserUpdateToOneWithWhereWithoutChangedStatusesInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutChangedStatusesInput>;
}
export declare class UserUpdateToOneWithWhereWithoutCustomerInfoInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutCustomerInfoInput>;
}
export declare class UserUpdateToOneWithWhereWithoutEmployeeInfoInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutEmployeeInfoInput>;
}
export declare class UserUpdateToOneWithWhereWithoutMessageSenderInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutMessageSenderInput>;
}
export declare class UserUpdateToOneWithWhereWithoutNotificationsInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutNotificationsInput>;
}
export declare class UserUpdateToOneWithWhereWithoutOwnerInfoInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutOwnerInfoInput>;
}
export declare class UserUpdateToOneWithWhereWithoutSessionsInput {
    where?: InstanceType<typeof UserWhereInput>;
    data: InstanceType<typeof UserUpdateWithoutSessionsInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutAvatarImageInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutAvatarImageInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutChatRoomInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutChatRoomInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutMessageLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutMessageLikesInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutMessageReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutMessageReadsInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutPhoneCountryCodeInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutPhoneCountryCodeInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutReviewDislikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutReviewDislikesInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutReviewLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutReviewLikesInput>;
}
export declare class UserUpdateWithWhereUniqueWithoutTermOrFaqReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    data: InstanceType<typeof UserUpdateWithoutTermOrFaqReadsInput>;
}
export declare class UserUpdateWithoutAccountSettingInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutAccountsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutAddressesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutAvatarImageInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutChangedStatusesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutChatRoomInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutCustomerInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutEmployeeInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutMessageLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
}
export declare class UserUpdateWithoutMessageReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutMessageSenderInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutNotificationsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutOwnerInfoInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutPhoneCountryCodeInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutReviewDislikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutReviewLikesInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutSessionsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateWithoutTermOrFaqReadsInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpdateInput {
    id?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    fullName?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    username?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    email?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    emailVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    password?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsapp?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    whatsappVerifiedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    birthDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    deletedAt?: InstanceType<typeof NullableDateTimeFieldUpdateOperationsInput>;
    role?: InstanceType<typeof EnumUserRoleFieldUpdateOperationsInput>;
    gender?: InstanceType<typeof EnumGenderFieldUpdateOperationsInput>;
    customerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    employeeInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    ownerInfoId?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    language?: InstanceType<typeof EnumLanguageFieldUpdateOperationsInput>;
    theme?: InstanceType<typeof EnumThemeFieldUpdateOperationsInput>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeUpdateOneRequiredWithoutUserNestedInput>;
    avatarImage?: InstanceType<typeof ImageUpdateOneRequiredWithoutUsersNestedInput>;
    customerInfo?: InstanceType<typeof CustomerUpdateOneWithoutUserNestedInput>;
    employeeInfo?: InstanceType<typeof EmployeeUpdateOneWithoutUserNestedInput>;
    ownerInfo?: InstanceType<typeof OwnerUpdateOneWithoutUserNestedInput>;
    chatRoom?: InstanceType<typeof ChatRoomUpdateOneWithoutParticipantsNestedInput>;
    accounts?: InstanceType<typeof AccountUpdateManyWithoutUserNestedInput>;
    addresses?: InstanceType<typeof AddressUpdateManyWithoutUserNestedInput>;
    sessions?: InstanceType<typeof SessionUpdateManyWithoutUserNestedInput>;
    notifications?: InstanceType<typeof NotificationUpdateManyWithoutUserNestedInput>;
    changedStatuses?: InstanceType<typeof OrderStatusUpdateManyWithoutChangedByNestedInput>;
    messageSender?: InstanceType<typeof MessageUpdateManyWithoutSenderNestedInput>;
    reviewLikes?: InstanceType<typeof ReviewUpdateManyWithoutLikesNestedInput>;
    reviewDislikes?: InstanceType<typeof ReviewUpdateManyWithoutDislikesNestedInput>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqUpdateManyWithoutReadByNestedInput>;
    accountSetting?: InstanceType<typeof AccountSettingUpdateManyWithoutUserNestedInput>;
    messageReads?: InstanceType<typeof MessageUpdateManyWithoutReadsNestedInput>;
    messageLikes?: InstanceType<typeof MessageUpdateManyWithoutLikesNestedInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutAvatarImageInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutAvatarImageInput>;
    create: InstanceType<typeof UserCreateWithoutAvatarImageInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutChatRoomInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutChatRoomInput>;
    create: InstanceType<typeof UserCreateWithoutChatRoomInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutMessageLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutMessageLikesInput>;
    create: InstanceType<typeof UserCreateWithoutMessageLikesInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutMessageReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutMessageReadsInput>;
    create: InstanceType<typeof UserCreateWithoutMessageReadsInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutPhoneCountryCodeInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutPhoneCountryCodeInput>;
    create: InstanceType<typeof UserCreateWithoutPhoneCountryCodeInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutReviewDislikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutReviewDislikesInput>;
    create: InstanceType<typeof UserCreateWithoutReviewDislikesInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutReviewLikesInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutReviewLikesInput>;
    create: InstanceType<typeof UserCreateWithoutReviewLikesInput>;
}
export declare class UserUpsertWithWhereUniqueWithoutTermOrFaqReadsInput {
    where: Prisma.AtLeast<UserWhereUniqueInput, 'id' | 'username' | 'email' | 'whatsapp'>;
    update: InstanceType<typeof UserUpdateWithoutTermOrFaqReadsInput>;
    create: InstanceType<typeof UserCreateWithoutTermOrFaqReadsInput>;
}
export declare class UserUpsertWithoutAccountSettingInput {
    update: InstanceType<typeof UserUpdateWithoutAccountSettingInput>;
    create: InstanceType<typeof UserCreateWithoutAccountSettingInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutAccountsInput {
    update: InstanceType<typeof UserUpdateWithoutAccountsInput>;
    create: InstanceType<typeof UserCreateWithoutAccountsInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutAddressesInput {
    update: InstanceType<typeof UserUpdateWithoutAddressesInput>;
    create: InstanceType<typeof UserCreateWithoutAddressesInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutChangedStatusesInput {
    update: InstanceType<typeof UserUpdateWithoutChangedStatusesInput>;
    create: InstanceType<typeof UserCreateWithoutChangedStatusesInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutCustomerInfoInput {
    update: InstanceType<typeof UserUpdateWithoutCustomerInfoInput>;
    create: InstanceType<typeof UserCreateWithoutCustomerInfoInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutEmployeeInfoInput {
    update: InstanceType<typeof UserUpdateWithoutEmployeeInfoInput>;
    create: InstanceType<typeof UserCreateWithoutEmployeeInfoInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutMessageSenderInput {
    update: InstanceType<typeof UserUpdateWithoutMessageSenderInput>;
    create: InstanceType<typeof UserCreateWithoutMessageSenderInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutNotificationsInput {
    update: InstanceType<typeof UserUpdateWithoutNotificationsInput>;
    create: InstanceType<typeof UserCreateWithoutNotificationsInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutOwnerInfoInput {
    update: InstanceType<typeof UserUpdateWithoutOwnerInfoInput>;
    create: InstanceType<typeof UserCreateWithoutOwnerInfoInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserUpsertWithoutSessionsInput {
    update: InstanceType<typeof UserUpdateWithoutSessionsInput>;
    create: InstanceType<typeof UserCreateWithoutSessionsInput>;
    where?: InstanceType<typeof UserWhereInput>;
}
export declare class UserWhereUniqueInput {
    id?: string;
    username?: string;
    email?: string;
    whatsapp?: string;
    AND?: Array<UserWhereInput>;
    OR?: Array<UserWhereInput>;
    NOT?: Array<UserWhereInput>;
    fullName?: InstanceType<typeof StringFilter>;
    emailVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    password?: InstanceType<typeof StringFilter>;
    whatsappVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    birthDate?: InstanceType<typeof DateTimeFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    phoneCountryCodeId?: InstanceType<typeof IntFilter>;
    role?: InstanceType<typeof EnumUserRoleFilter>;
    gender?: InstanceType<typeof EnumGenderFilter>;
    avatarImageId?: InstanceType<typeof StringFilter>;
    customerInfoId?: InstanceType<typeof StringNullableFilter>;
    employeeInfoId?: InstanceType<typeof StringNullableFilter>;
    ownerInfoId?: InstanceType<typeof StringNullableFilter>;
    language?: InstanceType<typeof EnumLanguageFilter>;
    theme?: InstanceType<typeof EnumThemeFilter>;
    chatRoomId?: InstanceType<typeof IntNullableFilter>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeRelationFilter>;
    avatarImage?: InstanceType<typeof ImageRelationFilter>;
    customerInfo?: InstanceType<typeof CustomerNullableRelationFilter>;
    employeeInfo?: InstanceType<typeof EmployeeNullableRelationFilter>;
    ownerInfo?: InstanceType<typeof OwnerNullableRelationFilter>;
    chatRoom?: InstanceType<typeof ChatRoomNullableRelationFilter>;
    accounts?: InstanceType<typeof AccountListRelationFilter>;
    addresses?: InstanceType<typeof AddressListRelationFilter>;
    sessions?: InstanceType<typeof SessionListRelationFilter>;
    notifications?: InstanceType<typeof NotificationListRelationFilter>;
    changedStatuses?: InstanceType<typeof OrderStatusListRelationFilter>;
    messageSender?: InstanceType<typeof MessageListRelationFilter>;
    reviewLikes?: InstanceType<typeof ReviewListRelationFilter>;
    reviewDislikes?: InstanceType<typeof ReviewListRelationFilter>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqListRelationFilter>;
    accountSetting?: InstanceType<typeof AccountSettingListRelationFilter>;
    messageReads?: InstanceType<typeof MessageListRelationFilter>;
    messageLikes?: InstanceType<typeof MessageListRelationFilter>;
}
export declare class UserWhereInput {
    AND?: Array<UserWhereInput>;
    OR?: Array<UserWhereInput>;
    NOT?: Array<UserWhereInput>;
    id?: InstanceType<typeof StringFilter>;
    fullName?: InstanceType<typeof StringFilter>;
    username?: InstanceType<typeof StringFilter>;
    email?: InstanceType<typeof StringFilter>;
    emailVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    password?: InstanceType<typeof StringFilter>;
    whatsapp?: InstanceType<typeof StringFilter>;
    whatsappVerifiedAt?: InstanceType<typeof DateTimeNullableFilter>;
    birthDate?: InstanceType<typeof DateTimeFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    deletedAt?: InstanceType<typeof DateTimeNullableFilter>;
    phoneCountryCodeId?: InstanceType<typeof IntFilter>;
    role?: InstanceType<typeof EnumUserRoleFilter>;
    gender?: InstanceType<typeof EnumGenderFilter>;
    avatarImageId?: InstanceType<typeof StringFilter>;
    customerInfoId?: InstanceType<typeof StringNullableFilter>;
    employeeInfoId?: InstanceType<typeof StringNullableFilter>;
    ownerInfoId?: InstanceType<typeof StringNullableFilter>;
    language?: InstanceType<typeof EnumLanguageFilter>;
    theme?: InstanceType<typeof EnumThemeFilter>;
    chatRoomId?: InstanceType<typeof IntNullableFilter>;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCodeRelationFilter>;
    avatarImage?: InstanceType<typeof ImageRelationFilter>;
    customerInfo?: InstanceType<typeof CustomerNullableRelationFilter>;
    employeeInfo?: InstanceType<typeof EmployeeNullableRelationFilter>;
    ownerInfo?: InstanceType<typeof OwnerNullableRelationFilter>;
    chatRoom?: InstanceType<typeof ChatRoomNullableRelationFilter>;
    accounts?: InstanceType<typeof AccountListRelationFilter>;
    addresses?: InstanceType<typeof AddressListRelationFilter>;
    sessions?: InstanceType<typeof SessionListRelationFilter>;
    notifications?: InstanceType<typeof NotificationListRelationFilter>;
    changedStatuses?: InstanceType<typeof OrderStatusListRelationFilter>;
    messageSender?: InstanceType<typeof MessageListRelationFilter>;
    reviewLikes?: InstanceType<typeof ReviewListRelationFilter>;
    reviewDislikes?: InstanceType<typeof ReviewListRelationFilter>;
    termOrFaqReads?: InstanceType<typeof TermOrFaqListRelationFilter>;
    accountSetting?: InstanceType<typeof AccountSettingListRelationFilter>;
    messageReads?: InstanceType<typeof MessageListRelationFilter>;
    messageLikes?: InstanceType<typeof MessageListRelationFilter>;
}
export declare class User {
    id: string;
    fullName: string;
    username: string;
    email: string;
    emailVerifiedAt: Date | null;
    password: string;
    whatsapp: string;
    whatsappVerifiedAt: Date | null;
    birthDate: Date;
    createdAt: Date;
    updatedAt: Date;
    deletedAt: Date | null;
    phoneCountryCodeId: number;
    role: keyof typeof UserRole;
    gender: keyof typeof Gender;
    avatarImageId: string;
    customerInfoId: string | null;
    employeeInfoId: string | null;
    ownerInfoId: string | null;
    language: keyof typeof Language;
    theme: keyof typeof Theme;
    chatRoomId: number | null;
    PhoneCountryCode?: InstanceType<typeof PhoneCountryCode>;
    avatarImage?: InstanceType<typeof Image>;
    customerInfo?: InstanceType<typeof Customer> | null;
    employeeInfo?: InstanceType<typeof Employee> | null;
    ownerInfo?: InstanceType<typeof Owner> | null;
    chatRoom?: InstanceType<typeof ChatRoom> | null;
    accounts?: Array<Account>;
    addresses?: Array<Address>;
    sessions?: Array<Session>;
    notifications?: Array<Notification>;
    changedStatuses?: Array<OrderStatus>;
    messageSender?: Array<Message>;
    reviewLikes?: Array<Review>;
    reviewDislikes?: Array<Review>;
    termOrFaqReads?: Array<TermOrFaq>;
    accountSetting?: Array<AccountSetting>;
    messageReads?: Array<Message>;
    messageLikes?: Array<Message>;
    _count?: InstanceType<typeof UserCount>;
}
export declare class AggregateVoucher {
    _count?: InstanceType<typeof VoucherCountAggregate>;
    _avg?: InstanceType<typeof VoucherAvgAggregate>;
    _sum?: InstanceType<typeof VoucherSumAggregate>;
    _min?: InstanceType<typeof VoucherMinAggregate>;
    _max?: InstanceType<typeof VoucherMaxAggregate>;
}
export declare class CreateManyVoucherArgs {
    data: Array<VoucherCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneVoucherArgs {
    data: InstanceType<typeof VoucherCreateInput>;
}
export declare class DeleteManyVoucherArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class DeleteOneVoucherArgs {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class FindFirstVoucherOrThrowArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
    orderBy?: Array<VoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherScalarFieldEnum>;
}
export declare class FindFirstVoucherArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
    orderBy?: Array<VoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherScalarFieldEnum>;
}
export declare class FindManyVoucherArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
    orderBy?: Array<VoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherScalarFieldEnum>;
}
export declare class FindUniqueVoucherOrThrowArgs {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class FindUniqueVoucherArgs {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class UpdateManyVoucherArgs {
    data: InstanceType<typeof VoucherUpdateManyMutationInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class UpdateOneVoucherArgs {
    data: InstanceType<typeof VoucherUpdateInput>;
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class UpsertOneVoucherArgs {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateInput>;
    update: InstanceType<typeof VoucherUpdateInput>;
}
export declare class VoucherAggregateArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
    orderBy?: Array<VoucherOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof VoucherCountAggregateInput>;
    _avg?: InstanceType<typeof VoucherAvgAggregateInput>;
    _sum?: InstanceType<typeof VoucherSumAggregateInput>;
    _min?: InstanceType<typeof VoucherMinAggregateInput>;
    _max?: InstanceType<typeof VoucherMaxAggregateInput>;
}
export declare class VoucherAvgAggregateInput {
    outletVoucherId?: true;
    platformVoucherId?: true;
}
export declare class VoucherAvgAggregate {
    outletVoucherId?: number;
    platformVoucherId?: number;
}
export declare class VoucherAvgOrderByAggregateInput {
    outletVoucherId?: keyof typeof SortOrder;
    platformVoucherId?: keyof typeof SortOrder;
}
export declare class VoucherCountAggregateInput {
    code?: true;
    name?: true;
    description?: true;
    startDate?: true;
    endDate?: true;
    isHighlight?: true;
    isActive?: true;
    createdAt?: true;
    updatedAt?: true;
    type?: true;
    outletVoucherId?: true;
    platformVoucherId?: true;
    settingsId?: true;
    discountType?: true;
    imageId?: true;
    _all?: true;
}
export declare class VoucherCountAggregate {
    code: number;
    name: number;
    description: number;
    startDate: number;
    endDate: number;
    isHighlight: number;
    isActive: number;
    createdAt: number;
    updatedAt: number;
    type: number;
    outletVoucherId: number;
    platformVoucherId: number;
    settingsId: number;
    discountType: number;
    imageId: number;
    _all: number;
}
export declare class VoucherCountOrderByAggregateInput {
    code?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    startDate?: keyof typeof SortOrder;
    endDate?: keyof typeof SortOrder;
    isHighlight?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    outletVoucherId?: keyof typeof SortOrder;
    platformVoucherId?: keyof typeof SortOrder;
    settingsId?: keyof typeof SortOrder;
    discountType?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class VoucherCount {
    serviceOrders?: number;
    termsAndFaqs?: number;
}
export declare class VoucherCreateManyImageInputEnvelope {
    data: Array<VoucherCreateManyImageInput>;
    skipDuplicates?: boolean;
}
export declare class VoucherCreateManyImageInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
}
export declare class VoucherCreateManyInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
}
export declare class VoucherCreateNestedManyWithoutImageInput {
    create?: Array<VoucherCreateWithoutImageInput>;
    connectOrCreate?: Array<VoucherCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof VoucherCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
}
export declare class VoucherCreateNestedOneWithoutOutletVoucherInput {
    create?: InstanceType<typeof VoucherCreateWithoutOutletVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutOutletVoucherInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherCreateNestedOneWithoutPlatformVoucherInput {
    create?: InstanceType<typeof VoucherCreateWithoutPlatformVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutPlatformVoucherInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherCreateNestedOneWithoutServiceOrdersInput {
    create?: InstanceType<typeof VoucherCreateWithoutServiceOrdersInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutServiceOrdersInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherCreateNestedOneWithoutSettingsInput {
    create?: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutSettingsInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherCreateNestedOneWithoutTermsAndFaqsInput {
    create?: InstanceType<typeof VoucherCreateWithoutTermsAndFaqsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutTermsAndFaqsInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherCreateOrConnectWithoutImageInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutImageInput>;
}
export declare class VoucherCreateOrConnectWithoutOutletVoucherInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutOutletVoucherInput>;
}
export declare class VoucherCreateOrConnectWithoutPlatformVoucherInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutPlatformVoucherInput>;
}
export declare class VoucherCreateOrConnectWithoutServiceOrdersInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutServiceOrdersInput>;
}
export declare class VoucherCreateOrConnectWithoutSettingsInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
}
export declare class VoucherCreateOrConnectWithoutTermsAndFaqsInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    create: InstanceType<typeof VoucherCreateWithoutTermsAndFaqsInput>;
}
export declare class VoucherCreateWithoutImageInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateWithoutOutletVoucherInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateWithoutPlatformVoucherInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateWithoutServiceOrdersInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateWithoutSettingsInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateWithoutTermsAndFaqsInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherCreateInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherCreateNestedOneWithoutVoucherInput>;
    settings: InstanceType<typeof VoucherSettingCreateNestedOneWithoutVoucherInput>;
    image: InstanceType<typeof ImageCreateNestedOneWithoutVouchersInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherGroupByArgs {
    where?: InstanceType<typeof VoucherWhereInput>;
    orderBy?: Array<VoucherOrderByWithAggregationInput>;
    by: Array<keyof typeof VoucherScalarFieldEnum>;
    having?: InstanceType<typeof VoucherScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof VoucherCountAggregateInput>;
    _avg?: InstanceType<typeof VoucherAvgAggregateInput>;
    _sum?: InstanceType<typeof VoucherSumAggregateInput>;
    _min?: InstanceType<typeof VoucherMinAggregateInput>;
    _max?: InstanceType<typeof VoucherMaxAggregateInput>;
}
export declare class VoucherGroupBy {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight: boolean;
    isActive: boolean;
    createdAt: Date | string;
    updatedAt: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    _count?: InstanceType<typeof VoucherCountAggregate>;
    _avg?: InstanceType<typeof VoucherAvgAggregate>;
    _sum?: InstanceType<typeof VoucherSumAggregate>;
    _min?: InstanceType<typeof VoucherMinAggregate>;
    _max?: InstanceType<typeof VoucherMaxAggregate>;
}
export declare class VoucherListRelationFilter {
    every?: InstanceType<typeof VoucherWhereInput>;
    some?: InstanceType<typeof VoucherWhereInput>;
    none?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherMaxAggregateInput {
    code?: true;
    name?: true;
    description?: true;
    startDate?: true;
    endDate?: true;
    isHighlight?: true;
    isActive?: true;
    createdAt?: true;
    updatedAt?: true;
    type?: true;
    outletVoucherId?: true;
    platformVoucherId?: true;
    settingsId?: true;
    discountType?: true;
    imageId?: true;
}
export declare class VoucherMaxAggregate {
    code?: string;
    name?: string;
    description?: string;
    startDate?: Date | string;
    endDate?: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type?: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId?: string;
    discountType?: keyof typeof DiscountType;
    imageId?: string;
}
export declare class VoucherMaxOrderByAggregateInput {
    code?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    startDate?: keyof typeof SortOrder;
    endDate?: keyof typeof SortOrder;
    isHighlight?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    outletVoucherId?: keyof typeof SortOrder;
    platformVoucherId?: keyof typeof SortOrder;
    settingsId?: keyof typeof SortOrder;
    discountType?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class VoucherMinAggregateInput {
    code?: true;
    name?: true;
    description?: true;
    startDate?: true;
    endDate?: true;
    isHighlight?: true;
    isActive?: true;
    createdAt?: true;
    updatedAt?: true;
    type?: true;
    outletVoucherId?: true;
    platformVoucherId?: true;
    settingsId?: true;
    discountType?: true;
    imageId?: true;
}
export declare class VoucherMinAggregate {
    code?: string;
    name?: string;
    description?: string;
    startDate?: Date | string;
    endDate?: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type?: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId?: string;
    discountType?: keyof typeof DiscountType;
    imageId?: string;
}
export declare class VoucherMinOrderByAggregateInput {
    code?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: keyof typeof SortOrder;
    startDate?: keyof typeof SortOrder;
    endDate?: keyof typeof SortOrder;
    isHighlight?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    outletVoucherId?: keyof typeof SortOrder;
    platformVoucherId?: keyof typeof SortOrder;
    settingsId?: keyof typeof SortOrder;
    discountType?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
}
export declare class VoucherNullableRelationFilter {
    is?: InstanceType<typeof VoucherWhereInput>;
    isNot?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class VoucherOrderByWithAggregationInput {
    code?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    startDate?: keyof typeof SortOrder;
    endDate?: keyof typeof SortOrder;
    isHighlight?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    outletVoucherId?: InstanceType<typeof SortOrderInput>;
    platformVoucherId?: InstanceType<typeof SortOrderInput>;
    settingsId?: keyof typeof SortOrder;
    discountType?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
    _count?: InstanceType<typeof VoucherCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof VoucherAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof VoucherMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof VoucherMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof VoucherSumOrderByAggregateInput>;
}
export declare class VoucherOrderByWithRelationInput {
    code?: keyof typeof SortOrder;
    name?: keyof typeof SortOrder;
    description?: InstanceType<typeof SortOrderInput>;
    startDate?: keyof typeof SortOrder;
    endDate?: keyof typeof SortOrder;
    isHighlight?: keyof typeof SortOrder;
    isActive?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    type?: keyof typeof SortOrder;
    outletVoucherId?: InstanceType<typeof SortOrderInput>;
    platformVoucherId?: InstanceType<typeof SortOrderInput>;
    settingsId?: keyof typeof SortOrder;
    discountType?: keyof typeof SortOrder;
    imageId?: keyof typeof SortOrder;
    outletVoucher?: InstanceType<typeof OutletVoucherOrderByWithRelationInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherOrderByWithRelationInput>;
    settings?: InstanceType<typeof VoucherSettingOrderByWithRelationInput>;
    image?: InstanceType<typeof ImageOrderByWithRelationInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderOrderByRelationAggregateInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqOrderByRelationAggregateInput>;
}
export declare class VoucherRelationFilter {
    is?: InstanceType<typeof VoucherWhereInput>;
    isNot?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherScalarWhereWithAggregatesInput {
    AND?: Array<VoucherScalarWhereWithAggregatesInput>;
    OR?: Array<VoucherScalarWhereWithAggregatesInput>;
    NOT?: Array<VoucherScalarWhereWithAggregatesInput>;
    code?: InstanceType<typeof StringWithAggregatesFilter>;
    name?: InstanceType<typeof StringWithAggregatesFilter>;
    description?: InstanceType<typeof StringNullableWithAggregatesFilter>;
    startDate?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    endDate?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    isHighlight?: InstanceType<typeof BoolWithAggregatesFilter>;
    isActive?: InstanceType<typeof BoolWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    type?: InstanceType<typeof EnumVoucherTypeWithAggregatesFilter>;
    outletVoucherId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    platformVoucherId?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    settingsId?: InstanceType<typeof StringWithAggregatesFilter>;
    discountType?: InstanceType<typeof EnumDiscountTypeWithAggregatesFilter>;
    imageId?: InstanceType<typeof StringWithAggregatesFilter>;
}
export declare class VoucherScalarWhereInput {
    AND?: Array<VoucherScalarWhereInput>;
    OR?: Array<VoucherScalarWhereInput>;
    NOT?: Array<VoucherScalarWhereInput>;
    code?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    startDate?: InstanceType<typeof DateTimeFilter>;
    endDate?: InstanceType<typeof DateTimeFilter>;
    isHighlight?: InstanceType<typeof BoolFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumVoucherTypeFilter>;
    outletVoucherId?: InstanceType<typeof IntNullableFilter>;
    platformVoucherId?: InstanceType<typeof IntNullableFilter>;
    settingsId?: InstanceType<typeof StringFilter>;
    discountType?: InstanceType<typeof EnumDiscountTypeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
}
export declare class VoucherSumAggregateInput {
    outletVoucherId?: true;
    platformVoucherId?: true;
}
export declare class VoucherSumAggregate {
    outletVoucherId?: number;
    platformVoucherId?: number;
}
export declare class VoucherSumOrderByAggregateInput {
    outletVoucherId?: keyof typeof SortOrder;
    platformVoucherId?: keyof typeof SortOrder;
}
export declare class VoucherUncheckedCreateNestedManyWithoutImageInput {
    create?: Array<VoucherCreateWithoutImageInput>;
    connectOrCreate?: Array<VoucherCreateOrConnectWithoutImageInput>;
    createMany?: InstanceType<typeof VoucherCreateManyImageInputEnvelope>;
    connect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
}
export declare class VoucherUncheckedCreateNestedOneWithoutSettingsInput {
    create?: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutSettingsInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
}
export declare class VoucherUncheckedCreateWithoutImageInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateWithoutOutletVoucherInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateWithoutPlatformVoucherInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateWithoutServiceOrdersInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateWithoutSettingsInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateWithoutTermsAndFaqsInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedCreateInput {
    code: string;
    name: string;
    description?: string;
    startDate: Date | string;
    endDate: Date | string;
    isHighlight?: boolean;
    isActive?: boolean;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    type: keyof typeof VoucherType;
    outletVoucherId?: number;
    platformVoucherId?: number;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedCreateNestedOneWithoutVoucherInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedCreateNestedManyWithoutVoucherInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedCreateNestedManyWithoutVoucherInput>;
}
export declare class VoucherUncheckedUpdateManyWithoutImageNestedInput {
    create?: Array<VoucherCreateWithoutImageInput>;
    connectOrCreate?: Array<VoucherCreateOrConnectWithoutImageInput>;
    upsert?: Array<VoucherUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof VoucherCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    delete?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    connect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    update?: Array<VoucherUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<VoucherUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<VoucherScalarWhereInput>;
}
export declare class VoucherUncheckedUpdateManyWithoutImageInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
}
export declare class VoucherUncheckedUpdateManyInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
}
export declare class VoucherUncheckedUpdateOneWithoutSettingsNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutSettingsInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutSettingsInput>;
    disconnect?: InstanceType<typeof VoucherWhereInput>;
    delete?: InstanceType<typeof VoucherWhereInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutSettingsInput>;
}
export declare class VoucherUncheckedUpdateWithoutImageInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateWithoutOutletVoucherInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateWithoutPlatformVoucherInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateWithoutServiceOrdersInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateWithoutSettingsInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateWithoutTermsAndFaqsInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUncheckedUpdateInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    settingsId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    imageId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUncheckedUpdateOneWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUncheckedUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUncheckedUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateManyMutationInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
}
export declare class VoucherUpdateManyWithWhereWithoutImageInput {
    where: InstanceType<typeof VoucherScalarWhereInput>;
    data: InstanceType<typeof VoucherUpdateManyMutationInput>;
}
export declare class VoucherUpdateManyWithoutImageNestedInput {
    create?: Array<VoucherCreateWithoutImageInput>;
    connectOrCreate?: Array<VoucherCreateOrConnectWithoutImageInput>;
    upsert?: Array<VoucherUpsertWithWhereUniqueWithoutImageInput>;
    createMany?: InstanceType<typeof VoucherCreateManyImageInputEnvelope>;
    set?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    delete?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    connect?: Array<Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>>;
    update?: Array<VoucherUpdateWithWhereUniqueWithoutImageInput>;
    updateMany?: Array<VoucherUpdateManyWithWhereWithoutImageInput>;
    deleteMany?: Array<VoucherScalarWhereInput>;
}
export declare class VoucherUpdateOneRequiredWithoutOutletVoucherNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutOutletVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutOutletVoucherInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutOutletVoucherInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutOutletVoucherInput>;
}
export declare class VoucherUpdateOneRequiredWithoutPlatformVoucherNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutPlatformVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutPlatformVoucherInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutPlatformVoucherInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutPlatformVoucherInput>;
}
export declare class VoucherUpdateOneWithoutServiceOrdersNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutServiceOrdersInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutServiceOrdersInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutServiceOrdersInput>;
    disconnect?: InstanceType<typeof VoucherWhereInput>;
    delete?: InstanceType<typeof VoucherWhereInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutServiceOrdersInput>;
}
export declare class VoucherUpdateOneWithoutSettingsNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutSettingsInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutSettingsInput>;
    disconnect?: InstanceType<typeof VoucherWhereInput>;
    delete?: InstanceType<typeof VoucherWhereInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutSettingsInput>;
}
export declare class VoucherUpdateOneWithoutTermsAndFaqsNestedInput {
    create?: InstanceType<typeof VoucherCreateWithoutTermsAndFaqsInput>;
    connectOrCreate?: InstanceType<typeof VoucherCreateOrConnectWithoutTermsAndFaqsInput>;
    upsert?: InstanceType<typeof VoucherUpsertWithoutTermsAndFaqsInput>;
    disconnect?: InstanceType<typeof VoucherWhereInput>;
    delete?: InstanceType<typeof VoucherWhereInput>;
    connect?: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update?: InstanceType<typeof VoucherUpdateToOneWithWhereWithoutTermsAndFaqsInput>;
}
export declare class VoucherUpdateToOneWithWhereWithoutOutletVoucherInput {
    where?: InstanceType<typeof VoucherWhereInput>;
    data: InstanceType<typeof VoucherUpdateWithoutOutletVoucherInput>;
}
export declare class VoucherUpdateToOneWithWhereWithoutPlatformVoucherInput {
    where?: InstanceType<typeof VoucherWhereInput>;
    data: InstanceType<typeof VoucherUpdateWithoutPlatformVoucherInput>;
}
export declare class VoucherUpdateToOneWithWhereWithoutServiceOrdersInput {
    where?: InstanceType<typeof VoucherWhereInput>;
    data: InstanceType<typeof VoucherUpdateWithoutServiceOrdersInput>;
}
export declare class VoucherUpdateToOneWithWhereWithoutSettingsInput {
    where?: InstanceType<typeof VoucherWhereInput>;
    data: InstanceType<typeof VoucherUpdateWithoutSettingsInput>;
}
export declare class VoucherUpdateToOneWithWhereWithoutTermsAndFaqsInput {
    where?: InstanceType<typeof VoucherWhereInput>;
    data: InstanceType<typeof VoucherUpdateWithoutTermsAndFaqsInput>;
}
export declare class VoucherUpdateWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    data: InstanceType<typeof VoucherUpdateWithoutImageInput>;
}
export declare class VoucherUpdateWithoutImageInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateWithoutOutletVoucherInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateWithoutPlatformVoucherInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateWithoutServiceOrdersInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateWithoutSettingsInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateWithoutTermsAndFaqsInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpdateInput {
    code?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    name?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    description?: InstanceType<typeof NullableStringFieldUpdateOperationsInput>;
    startDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    endDate?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    isHighlight?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    isActive?: InstanceType<typeof BoolFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    type?: InstanceType<typeof EnumVoucherTypeFieldUpdateOperationsInput>;
    outletVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    platformVoucherId?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    discountType?: InstanceType<typeof EnumDiscountTypeFieldUpdateOperationsInput>;
    outletVoucher?: InstanceType<typeof OutletVoucherUpdateOneWithoutVoucherNestedInput>;
    platformVoucher?: InstanceType<typeof PlatformVoucherUpdateOneWithoutVoucherNestedInput>;
    settings?: InstanceType<typeof VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput>;
    image?: InstanceType<typeof ImageUpdateOneRequiredWithoutVouchersNestedInput>;
    serviceOrders?: InstanceType<typeof ServiceOrderUpdateManyWithoutVoucherNestedInput>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqUpdateManyWithoutVoucherNestedInput>;
}
export declare class VoucherUpsertWithWhereUniqueWithoutImageInput {
    where: Prisma.AtLeast<VoucherWhereUniqueInput, 'code' | 'settingsId'>;
    update: InstanceType<typeof VoucherUpdateWithoutImageInput>;
    create: InstanceType<typeof VoucherCreateWithoutImageInput>;
}
export declare class VoucherUpsertWithoutOutletVoucherInput {
    update: InstanceType<typeof VoucherUpdateWithoutOutletVoucherInput>;
    create: InstanceType<typeof VoucherCreateWithoutOutletVoucherInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherUpsertWithoutPlatformVoucherInput {
    update: InstanceType<typeof VoucherUpdateWithoutPlatformVoucherInput>;
    create: InstanceType<typeof VoucherCreateWithoutPlatformVoucherInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherUpsertWithoutServiceOrdersInput {
    update: InstanceType<typeof VoucherUpdateWithoutServiceOrdersInput>;
    create: InstanceType<typeof VoucherCreateWithoutServiceOrdersInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherUpsertWithoutSettingsInput {
    update: InstanceType<typeof VoucherUpdateWithoutSettingsInput>;
    create: InstanceType<typeof VoucherCreateWithoutSettingsInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherUpsertWithoutTermsAndFaqsInput {
    update: InstanceType<typeof VoucherUpdateWithoutTermsAndFaqsInput>;
    create: InstanceType<typeof VoucherCreateWithoutTermsAndFaqsInput>;
    where?: InstanceType<typeof VoucherWhereInput>;
}
export declare class VoucherWhereUniqueInput {
    code?: string;
    settingsId?: string;
    AND?: Array<VoucherWhereInput>;
    OR?: Array<VoucherWhereInput>;
    NOT?: Array<VoucherWhereInput>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    startDate?: InstanceType<typeof DateTimeFilter>;
    endDate?: InstanceType<typeof DateTimeFilter>;
    isHighlight?: InstanceType<typeof BoolFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumVoucherTypeFilter>;
    outletVoucherId?: InstanceType<typeof IntNullableFilter>;
    platformVoucherId?: InstanceType<typeof IntNullableFilter>;
    discountType?: InstanceType<typeof EnumDiscountTypeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
    outletVoucher?: InstanceType<typeof OutletVoucherNullableRelationFilter>;
    platformVoucher?: InstanceType<typeof PlatformVoucherNullableRelationFilter>;
    settings?: InstanceType<typeof VoucherSettingRelationFilter>;
    image?: InstanceType<typeof ImageRelationFilter>;
    serviceOrders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqListRelationFilter>;
}
export declare class VoucherWhereInput {
    AND?: Array<VoucherWhereInput>;
    OR?: Array<VoucherWhereInput>;
    NOT?: Array<VoucherWhereInput>;
    code?: InstanceType<typeof StringFilter>;
    name?: InstanceType<typeof StringFilter>;
    description?: InstanceType<typeof StringNullableFilter>;
    startDate?: InstanceType<typeof DateTimeFilter>;
    endDate?: InstanceType<typeof DateTimeFilter>;
    isHighlight?: InstanceType<typeof BoolFilter>;
    isActive?: InstanceType<typeof BoolFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    type?: InstanceType<typeof EnumVoucherTypeFilter>;
    outletVoucherId?: InstanceType<typeof IntNullableFilter>;
    platformVoucherId?: InstanceType<typeof IntNullableFilter>;
    settingsId?: InstanceType<typeof StringFilter>;
    discountType?: InstanceType<typeof EnumDiscountTypeFilter>;
    imageId?: InstanceType<typeof StringFilter>;
    outletVoucher?: InstanceType<typeof OutletVoucherNullableRelationFilter>;
    platformVoucher?: InstanceType<typeof PlatformVoucherNullableRelationFilter>;
    settings?: InstanceType<typeof VoucherSettingRelationFilter>;
    image?: InstanceType<typeof ImageRelationFilter>;
    serviceOrders?: InstanceType<typeof ServiceOrderListRelationFilter>;
    termsAndFaqs?: InstanceType<typeof TermOrFaqListRelationFilter>;
}
export declare class Voucher {
    code: string;
    name: string;
    description: string | null;
    startDate: Date;
    endDate: Date;
    isHighlight: boolean;
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
    type: keyof typeof VoucherType;
    outletVoucherId: number | null;
    platformVoucherId: number | null;
    settingsId: string;
    discountType: keyof typeof DiscountType;
    imageId: string;
    outletVoucher?: InstanceType<typeof OutletVoucher> | null;
    platformVoucher?: InstanceType<typeof PlatformVoucher> | null;
    settings?: InstanceType<typeof VoucherSetting>;
    image?: InstanceType<typeof Image>;
    serviceOrders?: Array<ServiceOrder>;
    termsAndFaqs?: Array<TermOrFaq>;
    _count?: InstanceType<typeof VoucherCount>;
}
export declare class AggregateVoucherSetting {
    _count?: InstanceType<typeof VoucherSettingCountAggregate>;
    _avg?: InstanceType<typeof VoucherSettingAvgAggregate>;
    _sum?: InstanceType<typeof VoucherSettingSumAggregate>;
    _min?: InstanceType<typeof VoucherSettingMinAggregate>;
    _max?: InstanceType<typeof VoucherSettingMaxAggregate>;
}
export declare class CreateManyVoucherSettingArgs {
    data: Array<VoucherSettingCreateManyInput>;
    skipDuplicates?: boolean;
}
export declare class CreateOneVoucherSettingArgs {
    data: InstanceType<typeof VoucherSettingCreateInput>;
}
export declare class DeleteManyVoucherSettingArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
}
export declare class DeleteOneVoucherSettingArgs {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
}
export declare class FindFirstVoucherSettingOrThrowArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    orderBy?: Array<VoucherSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherSettingScalarFieldEnum>;
}
export declare class FindFirstVoucherSettingArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    orderBy?: Array<VoucherSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherSettingScalarFieldEnum>;
}
export declare class FindManyVoucherSettingArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    orderBy?: Array<VoucherSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    distinct?: Array<keyof typeof VoucherSettingScalarFieldEnum>;
}
export declare class FindUniqueVoucherSettingOrThrowArgs {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
}
export declare class FindUniqueVoucherSettingArgs {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
}
export declare class UpdateManyVoucherSettingArgs {
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
    where?: InstanceType<typeof VoucherSettingWhereInput>;
}
export declare class UpdateOneVoucherSettingArgs {
    data: InstanceType<typeof VoucherSettingUpdateInput>;
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
}
export declare class UpsertOneVoucherSettingArgs {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateInput>;
    update: InstanceType<typeof VoucherSettingUpdateInput>;
}
export declare class VoucherSettingAggregateArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    orderBy?: Array<VoucherSettingOrderByWithRelationInput>;
    cursor?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof VoucherSettingCountAggregateInput>;
    _avg?: InstanceType<typeof VoucherSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof VoucherSettingSumAggregateInput>;
    _min?: InstanceType<typeof VoucherSettingMinAggregateInput>;
    _max?: InstanceType<typeof VoucherSettingMaxAggregateInput>;
}
export declare class VoucherSettingAvgAggregateInput {
    discountValue?: true;
    minOrderTotalAmountValue?: true;
    maxOrderTotalAmountValue?: true;
    minOrderQuantityValue?: true;
    maxOrderQuantityValue?: true;
    customerQuota?: true;
    orderQuota?: true;
}
export declare class VoucherSettingAvgAggregate {
    discountValue?: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
}
export declare class VoucherSettingAvgOrderByAggregateInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: keyof typeof SortOrder;
    maxOrderTotalAmountValue?: keyof typeof SortOrder;
    minOrderQuantityValue?: keyof typeof SortOrder;
    maxOrderQuantityValue?: keyof typeof SortOrder;
    customerQuota?: keyof typeof SortOrder;
    orderQuota?: keyof typeof SortOrder;
}
export declare class VoucherSettingCountAggregateInput {
    discountValue?: true;
    minOrderTotalAmountValue?: true;
    maxOrderTotalAmountValue?: true;
    minOrderQuantityValue?: true;
    maxOrderQuantityValue?: true;
    customerQuota?: true;
    orderQuota?: true;
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    createdById?: true;
    restrictToOrderTypes?: true;
    restrictToPaymentMethods?: true;
    _all?: true;
}
export declare class VoucherSettingCountAggregate {
    discountValue: number;
    minOrderTotalAmountValue: number;
    maxOrderTotalAmountValue: number;
    minOrderQuantityValue: number;
    maxOrderQuantityValue: number;
    customerQuota: number;
    orderQuota: number;
    createdAt: number;
    updatedAt: number;
    voucherId: number;
    createdById: number;
    restrictToOrderTypes: number;
    restrictToPaymentMethods: number;
    _all: number;
}
export declare class VoucherSettingCountOrderByAggregateInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: keyof typeof SortOrder;
    maxOrderTotalAmountValue?: keyof typeof SortOrder;
    minOrderQuantityValue?: keyof typeof SortOrder;
    maxOrderQuantityValue?: keyof typeof SortOrder;
    customerQuota?: keyof typeof SortOrder;
    orderQuota?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    restrictToOrderTypes?: keyof typeof SortOrder;
    restrictToPaymentMethods?: keyof typeof SortOrder;
}
export declare class VoucherSettingCount {
    restrictToItems?: number;
    restrictToItemCategories?: number;
    restrictToCities?: number;
    restrictToDistricts?: number;
}
export declare class VoucherSettingCreateManyCreatedByInputEnvelope {
    data: Array<VoucherSettingCreateManyCreatedByInput>;
    skipDuplicates?: boolean;
}
export declare class VoucherSettingCreateManyCreatedByInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingCreateManyInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingCreateNestedManyWithoutCreatedByInput {
    create?: Array<VoucherSettingCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof VoucherSettingCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingCreateNestedManyWithoutRestrictToCitiesInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToCitiesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToCitiesInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingCreateNestedManyWithoutRestrictToDistrictsInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToDistrictsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToDistrictsInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingCreateNestedManyWithoutRestrictToItemCategoriesInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemCategoriesInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingCreateNestedManyWithoutRestrictToItemsInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemsInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingCreateNestedOneWithoutVoucherInput {
    create?: InstanceType<typeof VoucherSettingCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherSettingCreateOrConnectWithoutVoucherInput>;
    connect?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
}
export declare class VoucherSettingCreateOrConnectWithoutCreatedByInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutCreatedByInput>;
}
export declare class VoucherSettingCreateOrConnectWithoutRestrictToCitiesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToCitiesInput>;
}
export declare class VoucherSettingCreateOrConnectWithoutRestrictToDistrictsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToDistrictsInput>;
}
export declare class VoucherSettingCreateOrConnectWithoutRestrictToItemCategoriesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
}
export declare class VoucherSettingCreateOrConnectWithoutRestrictToItemsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToItemsInput>;
}
export declare class VoucherSettingCreateOrConnectWithoutVoucherInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    create: InstanceType<typeof VoucherSettingCreateWithoutVoucherInput>;
}
export declare class VoucherSettingCreateWithoutCreatedByInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreateWithoutRestrictToCitiesInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreateWithoutRestrictToDistrictsInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
}
export declare class VoucherSettingCreateWithoutRestrictToItemCategoriesInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreateWithoutRestrictToItemsInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreateWithoutVoucherInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreateInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherCreateNestedOneWithoutSettingsInput>;
    createdBy: InstanceType<typeof OwnerCreateNestedOneWithoutOnVoucherSettingInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingCreaterestrictToOrderTypesInput {
    set: Array<keyof typeof OrderType>;
}
export declare class VoucherSettingCreaterestrictToPaymentMethodsInput {
    set: Array<keyof typeof PaymentMethod>;
}
export declare class VoucherSettingGroupByArgs {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    orderBy?: Array<VoucherSettingOrderByWithAggregationInput>;
    by: Array<keyof typeof VoucherSettingScalarFieldEnum>;
    having?: InstanceType<typeof VoucherSettingScalarWhereWithAggregatesInput>;
    take?: number;
    skip?: number;
    _count?: InstanceType<typeof VoucherSettingCountAggregateInput>;
    _avg?: InstanceType<typeof VoucherSettingAvgAggregateInput>;
    _sum?: InstanceType<typeof VoucherSettingSumAggregateInput>;
    _min?: InstanceType<typeof VoucherSettingMinAggregateInput>;
    _max?: InstanceType<typeof VoucherSettingMaxAggregateInput>;
}
export declare class VoucherSettingGroupBy {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt: Date | string;
    updatedAt: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: Array<keyof typeof OrderType>;
    restrictToPaymentMethods?: Array<keyof typeof PaymentMethod>;
    _count?: InstanceType<typeof VoucherSettingCountAggregate>;
    _avg?: InstanceType<typeof VoucherSettingAvgAggregate>;
    _sum?: InstanceType<typeof VoucherSettingSumAggregate>;
    _min?: InstanceType<typeof VoucherSettingMinAggregate>;
    _max?: InstanceType<typeof VoucherSettingMaxAggregate>;
}
export declare class VoucherSettingListRelationFilter {
    every?: InstanceType<typeof VoucherSettingWhereInput>;
    some?: InstanceType<typeof VoucherSettingWhereInput>;
    none?: InstanceType<typeof VoucherSettingWhereInput>;
}
export declare class VoucherSettingMaxAggregateInput {
    discountValue?: true;
    minOrderTotalAmountValue?: true;
    maxOrderTotalAmountValue?: true;
    minOrderQuantityValue?: true;
    maxOrderQuantityValue?: true;
    customerQuota?: true;
    orderQuota?: true;
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    createdById?: true;
}
export declare class VoucherSettingMaxAggregate {
    discountValue?: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
    createdById?: string;
}
export declare class VoucherSettingMaxOrderByAggregateInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: keyof typeof SortOrder;
    maxOrderTotalAmountValue?: keyof typeof SortOrder;
    minOrderQuantityValue?: keyof typeof SortOrder;
    maxOrderQuantityValue?: keyof typeof SortOrder;
    customerQuota?: keyof typeof SortOrder;
    orderQuota?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
}
export declare class VoucherSettingMinAggregateInput {
    discountValue?: true;
    minOrderTotalAmountValue?: true;
    maxOrderTotalAmountValue?: true;
    minOrderQuantityValue?: true;
    maxOrderQuantityValue?: true;
    customerQuota?: true;
    orderQuota?: true;
    createdAt?: true;
    updatedAt?: true;
    voucherId?: true;
    createdById?: true;
}
export declare class VoucherSettingMinAggregate {
    discountValue?: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId?: string;
    createdById?: string;
}
export declare class VoucherSettingMinOrderByAggregateInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: keyof typeof SortOrder;
    maxOrderTotalAmountValue?: keyof typeof SortOrder;
    minOrderQuantityValue?: keyof typeof SortOrder;
    maxOrderQuantityValue?: keyof typeof SortOrder;
    customerQuota?: keyof typeof SortOrder;
    orderQuota?: keyof typeof SortOrder;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
}
export declare class VoucherSettingOrderByRelationAggregateInput {
    _count?: keyof typeof SortOrder;
}
export declare class VoucherSettingOrderByWithAggregationInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: InstanceType<typeof SortOrderInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof SortOrderInput>;
    minOrderQuantityValue?: InstanceType<typeof SortOrderInput>;
    maxOrderQuantityValue?: InstanceType<typeof SortOrderInput>;
    customerQuota?: InstanceType<typeof SortOrderInput>;
    orderQuota?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    restrictToOrderTypes?: keyof typeof SortOrder;
    restrictToPaymentMethods?: keyof typeof SortOrder;
    _count?: InstanceType<typeof VoucherSettingCountOrderByAggregateInput>;
    _avg?: InstanceType<typeof VoucherSettingAvgOrderByAggregateInput>;
    _max?: InstanceType<typeof VoucherSettingMaxOrderByAggregateInput>;
    _min?: InstanceType<typeof VoucherSettingMinOrderByAggregateInput>;
    _sum?: InstanceType<typeof VoucherSettingSumOrderByAggregateInput>;
}
export declare class VoucherSettingOrderByWithRelationInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: InstanceType<typeof SortOrderInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof SortOrderInput>;
    minOrderQuantityValue?: InstanceType<typeof SortOrderInput>;
    maxOrderQuantityValue?: InstanceType<typeof SortOrderInput>;
    customerQuota?: InstanceType<typeof SortOrderInput>;
    orderQuota?: InstanceType<typeof SortOrderInput>;
    createdAt?: keyof typeof SortOrder;
    updatedAt?: keyof typeof SortOrder;
    voucherId?: keyof typeof SortOrder;
    createdById?: keyof typeof SortOrder;
    restrictToOrderTypes?: keyof typeof SortOrder;
    restrictToPaymentMethods?: keyof typeof SortOrder;
    voucher?: InstanceType<typeof VoucherOrderByWithRelationInput>;
    createdBy?: InstanceType<typeof OwnerOrderByWithRelationInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceOrderByRelationAggregateInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryOrderByRelationAggregateInput>;
    restrictToCities?: InstanceType<typeof CityOrderByRelationAggregateInput>;
    restrictToDistricts?: InstanceType<typeof DistrictOrderByRelationAggregateInput>;
}
export declare class VoucherSettingRelationFilter {
    is?: InstanceType<typeof VoucherSettingWhereInput>;
    isNot?: InstanceType<typeof VoucherSettingWhereInput>;
}
export declare class VoucherSettingScalarWhereWithAggregatesInput {
    AND?: Array<VoucherSettingScalarWhereWithAggregatesInput>;
    OR?: Array<VoucherSettingScalarWhereWithAggregatesInput>;
    NOT?: Array<VoucherSettingScalarWhereWithAggregatesInput>;
    discountValue?: InstanceType<typeof IntWithAggregatesFilter>;
    minOrderTotalAmountValue?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    maxOrderTotalAmountValue?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    minOrderQuantityValue?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    maxOrderQuantityValue?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    customerQuota?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    orderQuota?: InstanceType<typeof IntNullableWithAggregatesFilter>;
    createdAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    updatedAt?: InstanceType<typeof DateTimeWithAggregatesFilter>;
    voucherId?: InstanceType<typeof StringWithAggregatesFilter>;
    createdById?: InstanceType<typeof StringWithAggregatesFilter>;
    restrictToOrderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    restrictToPaymentMethods?: InstanceType<typeof EnumPaymentMethodNullableListFilter>;
}
export declare class VoucherSettingScalarWhereInput {
    AND?: Array<VoucherSettingScalarWhereInput>;
    OR?: Array<VoucherSettingScalarWhereInput>;
    NOT?: Array<VoucherSettingScalarWhereInput>;
    discountValue?: InstanceType<typeof IntFilter>;
    minOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    minOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    customerQuota?: InstanceType<typeof IntNullableFilter>;
    orderQuota?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    restrictToOrderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    restrictToPaymentMethods?: InstanceType<typeof EnumPaymentMethodNullableListFilter>;
}
export declare class VoucherSettingSumAggregateInput {
    discountValue?: true;
    minOrderTotalAmountValue?: true;
    maxOrderTotalAmountValue?: true;
    minOrderQuantityValue?: true;
    maxOrderQuantityValue?: true;
    customerQuota?: true;
    orderQuota?: true;
}
export declare class VoucherSettingSumAggregate {
    discountValue?: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
}
export declare class VoucherSettingSumOrderByAggregateInput {
    discountValue?: keyof typeof SortOrder;
    minOrderTotalAmountValue?: keyof typeof SortOrder;
    maxOrderTotalAmountValue?: keyof typeof SortOrder;
    minOrderQuantityValue?: keyof typeof SortOrder;
    maxOrderQuantityValue?: keyof typeof SortOrder;
    customerQuota?: keyof typeof SortOrder;
    orderQuota?: keyof typeof SortOrder;
}
export declare class VoucherSettingUncheckedCreateNestedManyWithoutCreatedByInput {
    create?: Array<VoucherSettingCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutCreatedByInput>;
    createMany?: InstanceType<typeof VoucherSettingCreateManyCreatedByInputEnvelope>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingUncheckedCreateNestedManyWithoutRestrictToCitiesInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToCitiesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToCitiesInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingUncheckedCreateNestedManyWithoutRestrictToDistrictsInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToDistrictsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToDistrictsInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemCategoriesInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemCategoriesInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingUncheckedCreateNestedManyWithoutRestrictToItemsInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemsInput>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
}
export declare class VoucherSettingUncheckedCreateWithoutCreatedByInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedCreateWithoutRestrictToCitiesInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedCreateWithoutRestrictToDistrictsInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
}
export declare class VoucherSettingUncheckedCreateWithoutRestrictToItemCategoriesInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedCreateWithoutRestrictToItemsInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedCreateWithoutVoucherInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedCreateInput {
    discountValue: number;
    minOrderTotalAmountValue?: number;
    maxOrderTotalAmountValue?: number;
    minOrderQuantityValue?: number;
    maxOrderQuantityValue?: number;
    customerQuota?: number;
    orderQuota?: number;
    createdAt?: Date | string;
    updatedAt?: Date | string;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingCreaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingCreaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedCreateNestedOneWithoutSettingsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedCreateNestedManyWithoutVoucherSettingInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedCreateNestedManyWithoutVoucherSettingsInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedCreateNestedManyWithoutOnVoucherSettingInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutCreatedByNestedInput {
    create?: Array<VoucherSettingCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof VoucherSettingCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutCreatedByInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToCitiesNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToCitiesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToCitiesInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToCitiesInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToCitiesInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToCitiesInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToCitiesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToDistrictsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToDistrictsInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToDistrictsInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToDistrictsInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToDistrictsInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToDistrictsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToItemCategoriesNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemCategoriesInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemCategoriesInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemCategoriesInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToItemCategoriesInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToItemCategoriesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemsInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemsInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemsInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToItemsInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUncheckedUpdateManyWithoutRestrictToItemsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateManyInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutCreatedByInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutRestrictToCitiesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutRestrictToDistrictsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutRestrictToItemCategoriesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutRestrictToItemsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateWithoutVoucherInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUncheckedUpdateInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    createdById?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUncheckedUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUncheckedUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUncheckedUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUncheckedUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateManyMutationInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
}
export declare class VoucherSettingUpdateManyWithWhereWithoutCreatedByInput {
    where: InstanceType<typeof VoucherSettingScalarWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
}
export declare class VoucherSettingUpdateManyWithWhereWithoutRestrictToCitiesInput {
    where: InstanceType<typeof VoucherSettingScalarWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
}
export declare class VoucherSettingUpdateManyWithWhereWithoutRestrictToDistrictsInput {
    where: InstanceType<typeof VoucherSettingScalarWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
}
export declare class VoucherSettingUpdateManyWithWhereWithoutRestrictToItemCategoriesInput {
    where: InstanceType<typeof VoucherSettingScalarWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
}
export declare class VoucherSettingUpdateManyWithWhereWithoutRestrictToItemsInput {
    where: InstanceType<typeof VoucherSettingScalarWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateManyMutationInput>;
}
export declare class VoucherSettingUpdateManyWithoutCreatedByNestedInput {
    create?: Array<VoucherSettingCreateWithoutCreatedByInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutCreatedByInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutCreatedByInput>;
    createMany?: InstanceType<typeof VoucherSettingCreateManyCreatedByInputEnvelope>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutCreatedByInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutCreatedByInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUpdateManyWithoutRestrictToCitiesNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToCitiesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToCitiesInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToCitiesInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToCitiesInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToCitiesInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUpdateManyWithoutRestrictToDistrictsNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToDistrictsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToDistrictsInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToDistrictsInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToDistrictsInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToDistrictsInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUpdateManyWithoutRestrictToItemCategoriesNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemCategoriesInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemCategoriesInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemCategoriesInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToItemCategoriesInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUpdateManyWithoutRestrictToItemsNestedInput {
    create?: Array<VoucherSettingCreateWithoutRestrictToItemsInput>;
    connectOrCreate?: Array<VoucherSettingCreateOrConnectWithoutRestrictToItemsInput>;
    upsert?: Array<VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemsInput>;
    set?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    disconnect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    delete?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    connect?: Array<Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>>;
    update?: Array<VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemsInput>;
    updateMany?: Array<VoucherSettingUpdateManyWithWhereWithoutRestrictToItemsInput>;
    deleteMany?: Array<VoucherSettingScalarWhereInput>;
}
export declare class VoucherSettingUpdateOneRequiredWithoutVoucherNestedInput {
    create?: InstanceType<typeof VoucherSettingCreateWithoutVoucherInput>;
    connectOrCreate?: InstanceType<typeof VoucherSettingCreateOrConnectWithoutVoucherInput>;
    upsert?: InstanceType<typeof VoucherSettingUpsertWithoutVoucherInput>;
    connect?: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update?: InstanceType<typeof VoucherSettingUpdateToOneWithWhereWithoutVoucherInput>;
}
export declare class VoucherSettingUpdateToOneWithWhereWithoutVoucherInput {
    where?: InstanceType<typeof VoucherSettingWhereInput>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutVoucherInput>;
}
export declare class VoucherSettingUpdateWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutCreatedByInput>;
}
export declare class VoucherSettingUpdateWithWhereUniqueWithoutRestrictToCitiesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToCitiesInput>;
}
export declare class VoucherSettingUpdateWithWhereUniqueWithoutRestrictToDistrictsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToDistrictsInput>;
}
export declare class VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemCategoriesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToItemCategoriesInput>;
}
export declare class VoucherSettingUpdateWithWhereUniqueWithoutRestrictToItemsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    data: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToItemsInput>;
}
export declare class VoucherSettingUpdateWithoutCreatedByInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateWithoutRestrictToCitiesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateWithoutRestrictToDistrictsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
}
export declare class VoucherSettingUpdateWithoutRestrictToItemCategoriesInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateWithoutRestrictToItemsInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateWithoutVoucherInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdateInput {
    discountValue?: InstanceType<typeof IntFieldUpdateOperationsInput>;
    minOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderTotalAmountValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    minOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    maxOrderQuantityValue?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    customerQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    orderQuota?: InstanceType<typeof NullableIntFieldUpdateOperationsInput>;
    createdAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    updatedAt?: InstanceType<typeof DateTimeFieldUpdateOperationsInput>;
    voucherId?: InstanceType<typeof StringFieldUpdateOperationsInput>;
    restrictToOrderTypes?: InstanceType<typeof VoucherSettingUpdaterestrictToOrderTypesInput>;
    restrictToPaymentMethods?: InstanceType<typeof VoucherSettingUpdaterestrictToPaymentMethodsInput>;
    voucher?: InstanceType<typeof VoucherUpdateOneWithoutSettingsNestedInput>;
    createdBy?: InstanceType<typeof OwnerUpdateOneRequiredWithoutOnVoucherSettingNestedInput>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceUpdateManyWithoutOnVoucherSettingNestedInput>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryUpdateManyWithoutVoucherSettingNestedInput>;
    restrictToCities?: InstanceType<typeof CityUpdateManyWithoutVoucherSettingsNestedInput>;
    restrictToDistricts?: InstanceType<typeof DistrictUpdateManyWithoutOnVoucherSettingNestedInput>;
}
export declare class VoucherSettingUpdaterestrictToOrderTypesInput {
    set?: Array<keyof typeof OrderType>;
    push?: Array<keyof typeof OrderType>;
}
export declare class VoucherSettingUpdaterestrictToPaymentMethodsInput {
    set?: Array<keyof typeof PaymentMethod>;
    push?: Array<keyof typeof PaymentMethod>;
}
export declare class VoucherSettingUpsertWithWhereUniqueWithoutCreatedByInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof VoucherSettingUpdateWithoutCreatedByInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutCreatedByInput>;
}
export declare class VoucherSettingUpsertWithWhereUniqueWithoutRestrictToCitiesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToCitiesInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToCitiesInput>;
}
export declare class VoucherSettingUpsertWithWhereUniqueWithoutRestrictToDistrictsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToDistrictsInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToDistrictsInput>;
}
export declare class VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemCategoriesInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToItemCategoriesInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToItemCategoriesInput>;
}
export declare class VoucherSettingUpsertWithWhereUniqueWithoutRestrictToItemsInput {
    where: Prisma.AtLeast<VoucherSettingWhereUniqueInput, 'voucherId'>;
    update: InstanceType<typeof VoucherSettingUpdateWithoutRestrictToItemsInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutRestrictToItemsInput>;
}
export declare class VoucherSettingUpsertWithoutVoucherInput {
    update: InstanceType<typeof VoucherSettingUpdateWithoutVoucherInput>;
    create: InstanceType<typeof VoucherSettingCreateWithoutVoucherInput>;
    where?: InstanceType<typeof VoucherSettingWhereInput>;
}
export declare class VoucherSettingWhereUniqueInput {
    voucherId?: string;
    AND?: Array<VoucherSettingWhereInput>;
    OR?: Array<VoucherSettingWhereInput>;
    NOT?: Array<VoucherSettingWhereInput>;
    discountValue?: InstanceType<typeof IntFilter>;
    minOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    minOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    customerQuota?: InstanceType<typeof IntNullableFilter>;
    orderQuota?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    restrictToOrderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    restrictToPaymentMethods?: InstanceType<typeof EnumPaymentMethodNullableListFilter>;
    voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryListRelationFilter>;
    restrictToCities?: InstanceType<typeof CityListRelationFilter>;
    restrictToDistricts?: InstanceType<typeof DistrictListRelationFilter>;
}
export declare class VoucherSettingWhereInput {
    AND?: Array<VoucherSettingWhereInput>;
    OR?: Array<VoucherSettingWhereInput>;
    NOT?: Array<VoucherSettingWhereInput>;
    discountValue?: InstanceType<typeof IntFilter>;
    minOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderTotalAmountValue?: InstanceType<typeof IntNullableFilter>;
    minOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    maxOrderQuantityValue?: InstanceType<typeof IntNullableFilter>;
    customerQuota?: InstanceType<typeof IntNullableFilter>;
    orderQuota?: InstanceType<typeof IntNullableFilter>;
    createdAt?: InstanceType<typeof DateTimeFilter>;
    updatedAt?: InstanceType<typeof DateTimeFilter>;
    voucherId?: InstanceType<typeof StringFilter>;
    createdById?: InstanceType<typeof StringFilter>;
    restrictToOrderTypes?: InstanceType<typeof EnumOrderTypeNullableListFilter>;
    restrictToPaymentMethods?: InstanceType<typeof EnumPaymentMethodNullableListFilter>;
    voucher?: InstanceType<typeof VoucherNullableRelationFilter>;
    createdBy?: InstanceType<typeof OwnerRelationFilter>;
    restrictToItems?: InstanceType<typeof OutletLaundryItemServiceListRelationFilter>;
    restrictToItemCategories?: InstanceType<typeof LaundryItemCategoryListRelationFilter>;
    restrictToCities?: InstanceType<typeof CityListRelationFilter>;
    restrictToDistricts?: InstanceType<typeof DistrictListRelationFilter>;
}
export declare class VoucherSetting {
    discountValue: number;
    minOrderTotalAmountValue: number | null;
    maxOrderTotalAmountValue: number | null;
    minOrderQuantityValue: number | null;
    maxOrderQuantityValue: number | null;
    customerQuota: number | null;
    orderQuota: number | null;
    createdAt: Date;
    updatedAt: Date;
    voucherId: string;
    createdById: string;
    restrictToOrderTypes: Array<keyof typeof OrderType>;
    restrictToPaymentMethods: Array<keyof typeof PaymentMethod>;
    voucher?: InstanceType<typeof Voucher> | null;
    createdBy?: InstanceType<typeof Owner>;
    restrictToItems?: Array<OutletLaundryItemService>;
    restrictToItemCategories?: Array<LaundryItemCategory>;
    restrictToCities?: Array<City>;
    restrictToDistricts?: Array<District>;
    _count?: InstanceType<typeof VoucherSettingCount>;
}
